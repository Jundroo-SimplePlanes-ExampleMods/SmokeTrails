<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jundroo.SimplePlanes.ModTools</name>
    </assembly>
    <members>
        <member name="T:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner">
            <summary>
            A placeholder class that will spawn an AI aircraft at runtime.
            </summary>
            <seealso cref="T:UnityEngine.MonoBehaviour" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner._aircraftId">
            <summary>
            The unique ID for the aircraft XML.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner._aircraftXmlFile">
            <summary>
            The aircraft XML file of the aircraft to spawn.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner._initialVelocity">
            <summary>
            The initial velocity of the aircraft.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner._mode">
            <summary>
            The aircraft AI mode.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner.AircraftScript">
            <summary>
            Gets the aircraft script of the spawned aircraft.
            </summary>
            <value>
            The aircraft script of the spawned aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner.AIControlledAircraftScript">
            <summary>
            Gets the AI controlled aircraft script of the spawned aircraft.
            </summary>
            <value>
            The AI controlled aircraft script of the spawned aircraft.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.AIAircraftSpawner.Start">
            <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.AI.IAiControlledAircraftScript">
            <summary>
            An interface for an AI controlled aircraft script.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.AI.IAiControlledAircraftScript.AiAircraftScript">
            <summary>
            Gets the AI aircraft script.
            </summary>
            <value>
            The AI aircraft script.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.IAiControlledAircraftScript.SetTarget(System.Func{UnityEngine.Vector3},System.Boolean)">
            <summary>
            Sets the target.
            </summary>
            <param name="positionFunc">The position function.</param>
            <param name="mainTarget"><c>true</c> if the target is the main target.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.IAiControlledAircraftScript.SetTarget(UnityEngine.Vector3,System.Boolean)">
            <summary>
            Sets the target override.  Set to null to disable override.
            </summary>
            <param name="targetPositionFloatingOrigin">The target position in floating origin (current world) coordinates.</param>
            <param name="mainTarget"><c>true</c> if the target is the main target.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner">
            <summary>
            A component allowing convoys to be spawned and configured.
            </summary>
            <seealso cref="T:UnityEngine.MonoBehaviour" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner._isHostile">
            <summary>
            A value indicating whether or not the convoy is hostile.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner._targetVelocity">
            <summary>
            The target velocity of the convoy.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner._vehicles">
            <summary>
            The vehicle types and order that make up the convoy.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner._waypoints">
            <summary>
            The waypoints for the convoy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner.Start">
            <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.AI.ConvoySpawner.LateInitializationCoroutine">
            <summary>
            A coroutine that handles some late initialization logic.
            </summary>
            <returns>The enumerator for the coroutine.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.AI.ConvoyVehicleType">
            <summary>
            An enumeration defining the types of convoy vehicles.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoyVehicleType.Truck">
            <summary>
            A convoy truck.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.AI.ConvoyVehicleType.AATank">
            <summary>
            A convoy anti-air tank.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.DesignerPlugin">
            <summary>
            A component that is added to a game object that should be created whenever a map is loaded.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser`1">
            <summary>
            Interface for a class that handles the parsing of console command arguments to a specified type.
            </summary>
            <typeparam name="T">The type of the argument</typeparam>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser`1.HelpMessage">
            <summary>
            Gets the help message for the parser.
            </summary>
            <value>
            The help message for the parser.
            A message that may help a user determine how to format their argument such that the parser can understand it.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser`1.Priority">
            <summary>
            Gets the priority of the parser.
            </summary>
            <value>
            The priority of the parser.
            Parsers with lower priority numbers can attempt to parse an argument before parsers of larger priority numbers.
            All default parsers have a priority of 10.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser`1.TryParse(System.String,`0@)">
            <summary>
            Tries to parse the argument to argument type handled by this parser.
            </summary>
            <param name="value">The argument value to parse.</param>
            <param name="result">The result of the parsing.</param>
            <returns><c>true</c> if the argument was parsed successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole">
            <summary>
            A service provider for interacting with the developer console.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.Initialized">
            <summary>
            Occurs when the dev console is initialized.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterArgumentParser``1(Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser{``0})">
            <summary>
            Registers the argument parser.
            </summary>
            <typeparam name="T">The type of arguments supported by the parser.</typeparam>
            <param name="parser">The parser being registered.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand(System.String,System.Action)">
            <summary>
            Registers the specified command.
            </summary>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``1(System.String,System.Action{``0})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T">The type of command argument #1.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``2(System.String,System.Action{``0,``1})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``3(System.String,System.Action{``0,``1,``2})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``4(System.String,System.Action{``0,``1,``2,``3})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="T4">The type of command argument #4.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``5(System.String,System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="T4">The type of command argument #4.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``4(System.String,System.Func{``0,``1,``2,``3})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``3(System.String,System.Func{``0,``1,``2})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``2(System.String,System.Func{``0,``1})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T">The type of command argument.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.RegisterCommand``1(System.String,System.Func{``0})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole.UnregisterCommand(System.String)">
            <summary>
            Unregisters the specified command.
            </summary>
            <param name="command">The command to unregister.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.AircraftViewChangedEventArgs">
            <summary>
            The event args for an event that fires when the aircraft view is changed.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.AircraftViewChangedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.AircraftViewChangedEventArgs"/> class.
            </summary>
            <param name="viewName">The name of the new view.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.AircraftViewChangedEventArgs.ViewName">
            <summary>
            Gets the name of the new view.
            </summary>
            <value>
            The name of the new view.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs">
            <summary>
            The event arguments used for the event that fires when the floating origin position is changed.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs.#ctor(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs"/> class.
            </summary>
            <param name="oldOffset">The old floating origin offset.</param>
            <param name="newOffset">The new floating origin offset.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs.NewFloatingOriginOffset">
            <summary>
            Gets the new floating origin offset.
            </summary>
            <value>
            The new floating origin offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs.OldFloatingOriginOffset">
            <summary>
            Gets the old floating origin offset.
            </summary>
            <value>
            The old floating origin offset.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs">
            <summary>
            The event args for events that indicate a change in the current level.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs"/> class.
            </summary>
            <param name="levelName">Name of the level.</param>
            <param name="mapName">Name of the map.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs.LevelName">
            <summary>
            Gets the name of the level.
            </summary>
            <value>
            The name of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs.MapName">
            <summary>
            Gets the name of the map.
            </summary>
            <value>
            The name of the map.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs">
            <summary>
            The event args for events that indicate a change in the current map.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs"/> class.
            </summary>
            <param name="levelName">Name of the level.</param>
            <param name="mapName">Name of the map.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs.LevelName">
            <summary>
            Gets the name of the level.
            </summary>
            <value>
            The name of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs.MapName">
            <summary>
            Gets the name of the map.
            </summary>
            <value>
            The name of the map.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs">
            <summary>
            The event args for events that indicate a change in the current location.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs.#ctor(System.String,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs"/> class.
            </summary>
            <param name="locationName">Name of the location.</param>
            <param name="initialVelocity">The initial velocity.</param>
            <param name="position">The position.</param>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs.InitialVelocity">
            <summary>
            Gets the initial velocity.
            </summary>
            <value>
            The initial velocity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs.LocationName">
            <summary>
            Gets the name of the new location.
            </summary>
            <value>
            The name of the new location.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs.Position">
            <summary>
            Gets the new position.
            </summary>
            <value>
            The new position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs.Rotation">
            <summary>
            Gets the new rotation.
            </summary>
            <value>
            The new rotation.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs">
            <summary>
            The event args for events that indicate a change in the pause state of the application.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs"/> class.
            </summary>
            <param name="isPaused">If set to <c>true</c> the game is paused.</param>
            <param name="isUserInitiated">If set to <c>true</c> the current pause was user initiated.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs.IsPaused">
            <summary>
            Gets a value indicating whether the game is paused.
            </summary>
            <value>
              <c>true</c> if the game is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs.IsUserInitiated">
            <summary>
            Gets a value indicating whether the current pause was initiated by the user.
            </summary>
            <value>
            <c>true</c> if the current pause was initiated by the user; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs">
            <summary>
            The event arguments used for the event that fires when the sea level is changed.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs.#ctor(System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs"/> class.
            </summary>
            <param name="oldSeaLevel">The old sea level.</param>
            <param name="newSeaLevel">The new sea level.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs.NewSeaLevel">
            <summary>
            Gets the new sea level value on the y-axis.
            </summary>
            <value>
            The new sea level value on the y-axis.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs.OldSeaLevel">
            <summary>
            Gets the old sea level value on the y-axis.
            </summary>
            <value>
            The old sea level value on the y-axis.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IDesignerButton">
            <summary>
            A designer button reference. This allows you to show or hide it and change other details.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IDesignerButton.Sprite">
            <summary>
            Gets or sets the sprite for the button.
            </summary>
            <value>
            The sprite, which should be square.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IDesignerButton.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
            <value>
            The tooltip, which is shown when the mouse hovers over the button.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IDesignerButton.Callback">
            <summary>
            Gets or sets the callback that is invoked when the button is clicked.
            </summary>
            <value>
            The callback.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IDesignerButton.Show">
            <summary>
            Gets or sets a value indicating whether the button should be visible.
            </summary>
            <value>
            <see langword="true"/> to show the button, else <see langword="false"/>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.WeatherPreset">
            <summary>
            An enumeration defining various different weather presets.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.Clear">
            <summary>
            Clear skies.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.FewClouds">
            <summary>
            Mostly clear skies with a few clouds.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.ScatteredClouds">
            <summary>
            Scattered clouds.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.BrokenClouds">
            <summary>
            Very cloudy, between scattered and overcast.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.Overcast">
            <summary>
            Overcast sky, heavy cloud coverage.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.Stormy">
            <summary>
            Many dark clouds, storm-like.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.LightFog">
            <summary>
            Very foggy, but not as much as heavy fog.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.WeatherPreset.HeavyFog">
            <summary>
            Extremely foggy, hard to see.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IEnvironmentManager">
            <summary>
            A service for interacting with the environment manager.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.DynamicWeatherEnabled">
            <summary>
            Gets or sets a value indicating whether dynamic weather is enabled.
            </summary>
            <value>
            <c>true</c> if dynamic weather is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.Enabled">
            <summary>
            Gets or sets a value indicating whether the default environment is enabled (sky, weather, etc).
            </summary>
            <value>
              <c>true</c> if the default environment is enabled (sky, weather, etc); otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.LengthOfDay">
            <summary>
            Gets or sets the length of a single day in minutes.
            </summary>
            <value>
            The length of a single day in minutes.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.PauseTimeProgression">
            <summary>
            Gets or sets a value indicating whether time progression is paused.
            </summary>
            <value>
            <c>true</c> if time progression is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.TimeOfDay">
            <summary>
            Gets or sets the time of day in hours.
            </summary>
            <value>
            The time of day in hours.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.UserSettingsEnabled">
            <summary>
            Gets or sets a value indicating whether user modification of environment settings is enabled.
            </summary>
            <value>
              <c>true</c> if user modification of environment settings is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.RestoreDefaultSettings">
            <summary>
            Restores the default settings.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.UpdateTimeOfDay(System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Updates the time of day.
            </summary>
            <param name="timeOfDay">The new time of day in hours.</param>
            <param name="transitionTime">The transition time (in seconds) for the time change.</param>
            <param name="allowReverseTimeTransition">If set to <c>true</c> allow transitions to occur in reverse time.</param>
            <param name="ignorePause">If set to <c>true</c>, the update will occur event when paused.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IEnvironmentManager.UpdateWeather(Jundroo.SimplePlanes.ModTools.WeatherPreset,System.Single,System.Boolean)">
            <summary>
            Updates the weather settings based on the specified weather preset.
            </summary>
            <param name="preset">The weather preset to apply.</param>
            <param name="transitionTime">The transition time (in seconds) for the changes.</param>
            <param name="ignorePause">If set to <c>true</c>, the update will occur event when paused.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IGameCamera">
            <summary>
            A service for interacting with the current game camera.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameCamera.CameraTarget">
            <summary>
            Gets or sets the camera target.
            </summary>
            <value>
            The camera target.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameCamera.CameraPosition">
            <summary>
            Gets or sets the camera position.
            </summary>
            <value>
            The camera position.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IGameCamera.SetMainCameraEnabled(System.Boolean)">
            <summary>
            Enables or disables the main SimplePlanes camera.  Use this when you want to use your own cameras.
            </summary>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IGameState">
            <summary>
            A service for interacting with the current game state.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.AircraftViewChanged">
            <summary>
            Occurs when the aircraft view is changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.DesignerEntered">
            <summary>
            Occurs when the designer is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.DesignerExited">
            <summary>
            Occurs when the designer is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.LevelEntered">
            <summary>
            Occurs when a level is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.LevelExited">
            <summary>
            Occurs when a level is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.LevelRestarted">
            <summary>
            Occurs when the current level is restarted.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.MapEntered">
            <summary>
            Occurs when a map is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.MapExited">
            <summary>
            Occurs when a map is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.MapLocationChanged">
            <summary>
            Occurs when the map starting location has changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameState.PauseChanged">
            <summary>
            Occurs when a change has occurred in the pause state of the application.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameState.CurrentLevelName">
            <summary>
            Gets the name of the current level.
            </summary>
            <value>
            The name of the current level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameState.CurrentMapName">
            <summary>
            Gets the name of the current map.
            </summary>
            <value>
            The name of the current map.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameState.IsInDesigner">
            <summary>
            Gets a value indicating whether the user is currently in designer.
            </summary>
            <value>
            <c>true</c> if the user is currently in designer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameState.IsInLevel">
            <summary>
            Gets a value indicating whether the user is currently in a level.
            </summary>
            <value>
            <c>true</c> if the user is currently in a level; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameState.IsPaused">
            <summary>
            Gets a value indicating whether the game is paused.
            </summary>
            <value>
              <c>true</c> if the game is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IGameState.RequestPauseChange(System.Boolean,System.Boolean)">
            <summary>
            Requests a change in the pause state of the application.
            </summary>
            <param name="paused">
            <c>true</c> if requesting that the application be paused. 
            <c>false</c> if requesting that the application be un-paused.</param>
            <param name="userInitiated"><c>true</c> if this requested change in the pause state has been initiated by the user.</param>
            <returns>The new pause state of the game.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IGameWorld">
            <summary>
            A service for interacting with the game world.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameWorld.FloatingOriginChanged">
            <summary>
            Occurs when the floating origin changes.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IGameWorld.SeaLevelChanged">
            <summary>
            Occurs when the sea level changes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameWorld.FloatingOriginOffset">
            <summary>
            Gets the floating origin offset which represents the current origin's position relative to the true origin.
            </summary>
            <value>
            The floating origin offset which represents the current origin's position relative to the true origin.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameWorld.FloatingOriginSeaLevel">
            <summary>
            Gets the current world height of the sea level in world coordinates taking floating origin into account.
            </summary>
            <value>
            The current world height of the sea level in world coordinates taking floating origin into account.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameWorld.MassScale">
            <summary>
            Gets the scale factor applied to the mass of parts in the game.
            If a part weighs 1000 pounds and the scale factor is 0.01, then the mass of the associated rigid body will be 10 pounds.
            </summary>
            <value>
            The scale factor applied to the mass of parts in the game.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IGameWorld.SeaLevel">
            <summary>
            Gets or sets the sea level on the y-axis.
            </summary>
            <value>
            The sea level on the y-axis.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IGameWorld.CreateExplosion(UnityEngine.Vector3,System.Single,System.Int32)">
            <summary>
            Creates an explosion in the game world which only impacts aircraft parts.
            </summary>
            <param name="position">The position of the explosion.</param>
            <param name="magnitude">The magnitude.</param>
            <param name="explosionCascadeCount">The number of explosions that have cascaded to create this explosion.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IGameWorld.ShowStatusMessage(System.String,System.Single)">
            <summary>
            Shows the message using the in-game message system.
            </summary>
            <param name="message">The message to show.</param>
            <param name="time">The time to display the message.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IgnoreFloatingOrigin">
            <summary>
            This component tells the system to ignore the attached game object when the floating origin is repositioned.
            By default, the system will reposition root level objects when the world's origin needs to be shifted.
            If this component is attached to a root level object, the system will skip it when shifting the world for the floating origin.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.IgnoreFloatingOrigin.RepositionChildren">
            <summary>
            If this is set to <c>true</c> and the script is attached to a root level object,
            the root object will not be moved and its child objects will be moved instead.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Input.IGameInputs">
            <summary>
            An interface that provides a collection of game inputs to interact with.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate1">
            <summary>
            Gets the activation group 1 input.
            </summary>
            <value>
            The activation group 1 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate2">
            <summary>
            Gets the activation group 2 input.
            </summary>
            <value>
            The activation group 2 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate3">
            <summary>
            Gets the activation group 3 input.
            </summary>
            <value>
            The activation group 3 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate4">
            <summary>
            Gets the activation group 4 input.
            </summary>
            <value>
            The activation group 4 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate5">
            <summary>
            Gets the activation group 5 input.
            </summary>
            <value>
            The activation group 5 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate6">
            <summary>
            Gets the activation group 6 input.
            </summary>
            <value>
            The activation group 6 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate7">
            <summary>
            Gets the activation group 7 input.
            </summary>
            <value>
            The activation group 7 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Activate8">
            <summary>
            Gets the activation group 8 input.
            </summary>
            <value>
            The activation group 8 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ActivateCameraLook">
            <summary>
            Gets the activate camera look input.
            </summary>
            <value>
            The activate camera look input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ActivateCatapult">
            <summary>
            Gets the activate catapult input.
            </summary>
            <value>
            The activate catapult input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Brake">
            <summary>
            Gets the brake input.
            </summary>
            <value>
            The brake input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CameraLookBack">
            <summary>
            Gets the camera look back input.
            </summary>
            <value>
            The camera look back input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CameraLookLeftRight">
            <summary>
            Gets the camera look left/right input.
            </summary>
            <value>
            The camera look left/right input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CameraLookUpDown">
            <summary>
            Gets the camera look up/down input.
            </summary>
            <value>
            The camera look up/down input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CameraLookZoom">
            <summary>
            Gets the camera zoom in/out input.
            </summary>
            <value>
            The camera zoom in/out input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ChaseView">
            <summary>
            Gets the chase view input.
            </summary>
            <value>
            The chase view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ClearConcealedPartsList">
            <summary>
            Gets the clear concealed parts list input.
            </summary>
            <value>
            The clear concealed parts list input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CockpitView">
            <summary>
            Gets the cockpit view input.
            </summary>
            <value>
            The cockpit view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ConcealPart">
            <summary>
            Gets the hide part input.
            </summary>
            <value>
            The hide part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CustomCamera1">
            <summary>
            Gets the custom camera 1 input.
            </summary>
            <value>
            The custom camera 1 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CustomCamera2">
            <summary>
            Gets the custom camera 2 input.
            </summary>
            <value>
            The custom camera 2 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CustomCamera3">
            <summary>
            Gets the custom camera 3 input.
            </summary>
            <value>
            The custom camera 3 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CustomCamera4">
            <summary>
            Gets the custom camera 4 input.
            </summary>
            <value>
            The custom camera 4 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CycleConcealmentType">
            <summary>
            Gets the cycle concealment type input.
            </summary>
            <value>
            The cycle concealment type input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.CycleTargetingMode">
            <summary>
            Gets the cycle targeting mode input.
            </summary>
            <value>
            The cycle targeting mode input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DamageVisualizer">
            <summary>
            Gets the damage visualizer toggle input.
            </summary>
            <value>
            The damage visualizer toggle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DeletePart">
            <summary>
            Gets the delete part input.
            </summary>
            <value>
            The delete part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DesignerPitch">
            <summary>
            Gets the pitch input for the designer.
            </summary>
            <value>
            The pitch input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DesignerRoll">
            <summary>
            Gets the roll input for the designer.
            </summary>
            <value>
            The roll input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DesignerYaw">
            <summary>
            Gets the yaw input for the designer.
            </summary>
            <value>
            The yaw input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.DeveloperConsole">
            <summary>
            Gets the toggle developer console input.
            </summary>
            <value>
            The toggle developer console input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.FireGuns">
            <summary>
            Gets the fire guns input.
            </summary>
            <value>
            The fire guns input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.FireWeapons">
            <summary>
            Gets the fire weapons input.
            </summary>
            <value>
            The fire weapons input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.FlybyView">
            <summary>
            Gets the flyby view input.
            </summary>
            <value>
            The flyby view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.InvertConcealedParts">
            <summary>
            Gets the invert concealed parts input.
            </summary>
            <value>
            The invert concealed parts input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.LandingGear">
            <summary>
            Gets the landing gear input.
            </summary>
            <value>
            The landing gear input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.LaunchCountermeasures">
            <summary>
            Gets the launch countermeasures input.
            </summary>
            <value>
            The launch countermeasures input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.LoadClipboardAircraft">
            <summary>
            Gets the load aircraft from clipboard URL input.
            </summary>
            <value>
            The load aircraft from clipboard URL input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.MaxThrottle">
            <summary>
            Gets the maximum throttle input.
            </summary>
            <value>
            The maximum throttle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.MirrorAircraftLeft">
            <summary>
            Gets the mirror aircraft left input.
            </summary>
            <value>
            The mirror aircraft left input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.MirrorAircraftRight">
            <summary>
            Gets the mirror aircraft right input.
            </summary>
            <value>
            The mirror aircraft right input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.MirrorPart">
            <summary>
            Gets the mirror part input.
            </summary>
            <value>
            The mirror part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.MirrorTool">
            <summary>
            Gets the mirror tool input.
            </summary>
            <value>
            The mirror tool input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NextTarget">
            <summary>
            Gets the next target input.
            </summary>
            <value>
            The next target input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NextView">
            <summary>
            Gets the next view input.
            </summary>
            <value>
            The next view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NextWeapon">
            <summary>
            Gets the next weapon input.
            </summary>
            <value>
            The next weapon input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartNegativeX">
            <summary>
            Gets the nudge part on the negative x-axis input.
            </summary>
            <value>
            The nudge part on the negative x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartNegativeY">
            <summary>
            Gets the nudge part on the negative y-axis input.
            </summary>
            <value>
            The nudge part on the negative y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartNegativeZ">
            <summary>
            Gets the nudge part on the negative z-axis input.
            </summary>
            <value>
            The nudge part on the negative z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartPositiveX">
            <summary>
            Gets the nudge part on the positive x-axis input.
            </summary>
            <value>
            The nudge part on the positive x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartPositiveY">
            <summary>
            Gets the nudge part on the positive y-axis input.
            </summary>
            <value>
            The nudge part on the positive y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.NudgePartPositiveZ">
            <summary>
            Gets the nudge part on the positive z-axis input.
            </summary>
            <value>
            The nudge part on the positive z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.OrbitView">
            <summary>
            Gets the orbit view input.
            </summary>
            <value>
            The orbit view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Pause">
            <summary>
            Gets the pause input.
            </summary>
            <value>
            The pause input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Pitch">
            <summary>
            Gets the pitch input.
            </summary>
            <value>
            The pitch input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.PreviousTarget">
            <summary>
            Gets the previous target input.
            </summary>
            <value>
            The previous target input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.PreviousView">
            <summary>
            Gets the previous view input.
            </summary>
            <value>
            The previous view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.PreviousWeapon">
            <summary>
            Gets the previous weapon input.
            </summary>
            <value>
            The previous weapon input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ReattachSelectedPart">
            <summary>
            Gets the reattach selected part input.
            </summary>
            <value>
            The reattach selected part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Redo">
            <summary>
            Gets the redo input.
            </summary>
            <value>
            The redo input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Restart">
            <summary>
            Gets the restart input.
            </summary>
            <value>
            The restart input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RestartHere">
            <summary>
            Gets the restart here input.
            </summary>
            <value>
            The restart here input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Roll">
            <summary>
            Gets the roll input.
            </summary>
            <value>
            The roll input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotateNegativeX">
            <summary>
            Gets the rotate part on the negative x-axis input.
            </summary>
            <value>
            The rotate part on the negative x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotateNegativeY">
            <summary>
            Gets the rotate part on the negative y-axis input.
            </summary>
            <value>
            The rotate part on the negative y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotateNegativeZ">
            <summary>
            Gets the rotate part on the negative z-axis input.
            </summary>
            <value>
            The rotate part on the negative z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotatePositiveX">
            <summary>
            Gets the rotate part on the positive x-axis input.
            </summary>
            <value>
            The rotate part on the positive x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotatePositiveY">
            <summary>
            Gets the rotate part on the positive y-axis input.
            </summary>
            <value>
            The rotate part on the positive y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.RotatePositiveZ">
            <summary>
            Gets the rotate part on the positive z-axis input.
            </summary>
            <value>
            The rotate part on the positive z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.SaveAircraft">
            <summary>
            Gets the save aircraft input.
            </summary>
            <value>
            The save aircraft input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ScreenshotMode">
            <summary>
            Gets the screen-shot mode input.
            </summary>
            <value>
            The screen-shot mode input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.SelfDestruct">
            <summary>
            Gets the self destruct input.
            </summary>
            <value>
            The self destruct input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Throttle">
            <summary>
            Gets the throttle input.
            </summary>
            <value>
            The throttle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleActivationPanel">
            <summary>
            Gets the toggle activation panel input.
            </summary>
            <value>
            The toggle activation panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleAutopilot">
            <summary>
            Gets the toggle autopilot input.
            </summary>
            <value>
            The toggle autopilot input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleCenterBalls">
            <summary>
            Gets the toggle CoM/CoL/CoT input.
            </summary>
            <value>
            The toggle CoM/CoL/CoT input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleFastForward">
            <summary>
            Gets the toggle fast forward input.
            </summary>
            <value>
            The toggle fast forward input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleMouseJoystick">
            <summary>
            Gets the toggle mouse joystick input.
            </summary>
            <value>
            The toggle mouse joystick input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleMusic">
            <summary>
            Gets the toggle music input.
            </summary>
            <value>
            The toggle music input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.TogglePaintPanel">
            <summary>
            Gets the toggle paint panel input.
            </summary>
            <value>
            The toggle paint panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.TogglePartPropertiesPanel">
            <summary>
            Gets the toggle part properties panel input.
            </summary>
            <value>
            The toggle part properties panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleSlowMotion">
            <summary>
            Gets the toggle slow motion input.
            </summary>
            <value>
            The toggle slow motion input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleTransformPartPanel">
            <summary>
            Gets the toggle transform part panel input.
            </summary>
            <value>
            The toggle transform part panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ToggleWindSettings">
            <summary>
            Gets the toggle wind settings input.
            </summary>
            <value>
            The toggle wind settings input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Trim">
            <summary>
            Gets the trim input.
            </summary>
            <value>
            The trim input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.TrimReset">
            <summary>
            Gets the reset trim input.
            </summary>
            <value>
            The reset trim input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.UICancel">
            <summary>
            Gets the UI cancel input.
            </summary>
            <value>
            The UI cancel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.UIHorizontal">
            <summary>
            Gets the UI horizontal input.
            </summary>
            <value>
            The UI horizontal input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.UISubmit">
            <summary>
            Gets the UI submit input.
            </summary>
            <value>
            The UI submit input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.UIVertical">
            <summary>
            Gets the UI vertical input.
            </summary>
            <value>
            The UI vertical input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Undo">
            <summary>
            Gets the undo input.
            </summary>
            <value>
            The undo input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Vtol">
            <summary>
            Gets the VTOL input.
            </summary>
            <value>
            The VTOL input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.Yaw">
            <summary>
            Gets the yaw input.
            </summary>
            <value>
            The yaw input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.ZeroThrottle">
            <summary>
            Gets the zero throttle input.
            </summary>
            <value>
            The zero throttle input.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInputs.FindById(System.String)">
            <summary>
            Looks up an input by its id.
            </summary>
            <param name="id">The input identifier.</param>
            <returns>The input with the specified id or <c>null</c> if a matching input could not be found.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Input.IGameInput">
            <summary>
            An interface for a game input.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInput.DescriptiveName">
            <summary>
            Gets the descriptive name of the input.
            </summary>
            <value>
            The descriptive name of the input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInput.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Jundroo.SimplePlanes.ModTools.Input.IGameInput"/> is enabled.
            A disabled input can still return valid values. Code can ignore the fact that an
            input has been disabled and continue to use it anyway.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Input.IGameInput.Id">
            <summary>
            Gets the identifier for the input.
            </summary>
            <value>
            The identifier for the input.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetAxis">
            <summary>
            Gets the value of the input axis.
            </summary>
            <returns>The value of the input axis.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetAxisIfEnabled">
            <summary>
            Gets the value of the input axis or zero if the input has been disabled.
            </summary>
            <returns>The value of the input axis or zero if the input has been disabled.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButton">
            <summary>
            Gets the state of the input button.
            </summary>
            <returns><c>true</c> if the input button is active; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButtonDown">
            <summary>
            Gets a value indicating if the input button was activated this frame.
            </summary>
            <returns><c>true</c> if the input button was activated this frame; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButtonDownIfEnabled">
            <summary>
            Gets a value indicating if the input button was activated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
            <returns><c>true</c> if the input button was activated this frame and the input is enabled; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButtonIfEnabled">
            <summary>
            Gets the state of the input button.
            </summary>
            <returns><c>true</c> if the input button is active and enabled; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButtonUp">
            <summary>
            Gets a value indicating if the input button was deactivated this frame.
            </summary>
            <returns><c>true</c> if the input button was deactivated this frame; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetButtonUpIfEnabled">
            <summary>
            Gets a value indicating if the input button was deactivated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
            <returns><c>true</c> if the input button was deactivated this frame and the input is enabled; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetControllerBindingText">
            <summary>
            Gets the controller binding text.
            </summary>
            <returns>The controller binding text or <c>null</c> if no binding exists.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetFirstBindingText">
            <summary>
            Gets the first binding text that can be found.
            </summary>
            <returns>The first binding text that can be found or <c>null</c> if no bindings can be found.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetKeyboardPrimaryBindingText">
            <summary>
            Gets the keyboard primary binding text.
            </summary>
            <returns>The keyboard primary binding text or <c>null</c> if no binding exists.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetKeyboardSecondaryBindingText">
            <summary>
            Gets the keyboard secondary binding text.
            </summary>
            <returns>The keyboard secondary binding text or <c>null</c> if no binding exists.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Input.IGameInput.GetMouseBindingText">
            <summary>
            Gets the mouse binding text.
            </summary>
            <returns>The mouse binding text or <c>null</c> if no binding exists.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats">
            <summary>
            Enumeration for identifying different aircraft stats.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.WingSpan">
            <summary>
            The wing span statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.Length">
            <summary>
            The length statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.Height">
            <summary>
            The height statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.WingArea">
            <summary>
            The wing area statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.WingLoading">
            <summary>
            The wing loading statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.EmptyWeight">
            <summary>
            The empty weight statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.LoadedWeight">
            <summary>
            The loaded weight statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.PowerToWeightRatio">
            <summary>
            The power to weight ratio statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.PowerOutput">
            <summary>
            The power output statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.PartCount">
            <summary>
            The part count statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.ControlSurfaceCount">
            <summary>
            The control surface count statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.FuelAmount">
            <summary>
            The fuel amount statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.Drag">
            <summary>
            The drag statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.HorsePower">
            <summary>
            The horse power statistic.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats.HorsePowerToWeightRatio">
            <summary>
            The horse power to weight ratio statistic.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Events.IAircraftLocationChangedEventArgs">
            <summary>
            Event args for when the aircraft location is changed.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Events.IAircraftLocationChangedEventArgs.NewPosition">
            <summary>
            Gets the new aircraft position after a location change.
            </summary>
            <value>
            The new aircraft position after a location change.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType">
            <summary>
            An enumeration defining the different types of explosive weapon impacts.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType.Air">
            <summary>
            The explosion occurred in the air.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType.Ground">
            <summary>
            The explosion occurred due to an impact at or near the ground.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType.Water">
            <summary>
            The explosion occurred due to an impact at or near the water.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType.Structure">
            <summary>
            The explosion occurred due to an impact at or near a structure.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.ExplosiveWeaponImpactType.Boat">
            <summary>
            The explosion occurred due to an impact at or near a boat.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.IExplosiveForceScript">
            <summary>
            A script that creates an explosive blast force.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.IExplosiveForceScript.Detonate(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript)">
            <summary>
            Detonates the explosive force.
            </summary>
            <param name="owner">The aircraft owner of the explosion (responsible party).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Explosions.IExplosiveForceScript.Detonate(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript,UnityEngine.Rigidbody,System.Nullable{UnityEngine.Vector3})">
            <summary>
            Detonates the explosive force.
            </summary>
            <param name="blastOwner">The aircraft owner of the explosion (responsible party).</param>
            <param name="rigidBodyOwner">The rigid body (if any) that is responsible for the explosion (such as a rocket).</param>
            <param name="impactDirection">The impact direction of the rigid body that caused the impact (if any).</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript">
            <summary>
            The script for a theme.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.Material">
            <summary>
            Gets the material.
            </summary>
            <value>
            The material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.Theme">
            <summary>
            Gets or sets the theme.
            </summary>
            <value>
            The theme.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.ApplyReflectionSettings">
            <summary>
            Applies the current reflection settings.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.CleanupMaterial">
            <summary>
            Cleanups the material.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.GetHighlightMaterial(UnityEngine.Material)">
            <summary>
            Gets the highlight material for the specified material.
            </summary>
            <param name="regularMaterial">The regular material for which to get the highlight material.</param>
            <returns>The highlight material or <c>null</c> if it could not be found.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.GetTextureCoordinates(System.Int32)">
            <summary>
            Gets the texture coordinates.
            </summary>
            <param name="materialId">The material identifier.</param>
            <returns>The texture coordinates.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.InitializeHighlightMaterial(UnityEngine.Material)">
            <summary>
            Initializes the highlight material for the specified material.
            </summary>
            <param name="material">The material for which to initialize a highlight material.</param>
            <returns>The highlight material.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.ReplaceHighlightMaterial(UnityEngine.Material,UnityEngine.Material)">
            <summary>
            Replaces a highlight material with a new highlight material due to the regular material changing to a new material instance.
            </summary>
            <param name="originalRegularMaterial">The original regular material.</param>
            <param name="newRegularMaterial">The new regular material.</param>
            <returns>The highlight material.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.UpdateHighlightMaterial(UnityEngine.Material)">
            <summary>
            Updates the highlight material based on the specified regular material.
            </summary>
            <param name="regularMaterial">The regular material.</param>
            <returns>The highlight material or <c>null</c> if the material could not be found.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IThemeScript.UpdateMaterial">
            <summary>
            Generates the texture and updates the material.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointEdge">
            <summary>
            Class for an attach points edge.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointEdge.IsHardEdge">
            <summary>
            Gets or sets a value indicating whether [is hard edge].
            </summary>
            <value>
              <c>true</c> if [is hard edge]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointEdge.LocalEdgeNormal">
            <summary>
            Gets or sets the local edge normal.
            </summary>
            <value>
            The local edge normal.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial">
            <summary>
            Material for a part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.LegacyReflectivity">
            <summary>
            Gets or sets the legacy reflectivity value of the material.
            </summary>
            <value>
            The legacy reflectivity value of the material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.Metallic">
            <summary>
            Gets or sets the metallic property of the material.
            </summary>
            <value>
            The metallic property of the material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.Smoothness">
            <summary>
            Gets or sets the smoothness of the material.
            </summary>
            <value>
            The smoothness of the material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterial.SmoothnessModifier">
            <summary>
            Gets or sets the smoothness modifier.
            </summary>
            <value>
            The smoothness modifier.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection">
            <summary>
            Directions included in part drag calculations.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Forward">
            <summary>
            Drag applied when moving forwards.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Backward">
            <summary>
            Drag applied when moving backwards.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Upward">
            <summary>
            Drag applied when moving up.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Downward">
            <summary>
            Drag applied when moving down.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Leftward">
            <summary>
            Drag applied when moving to the left.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection.Rightward">
            <summary>
            Drag applied when moving to the right.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs">
            <summary>
            Event arguments for an event that is thrown when a part disconnect explosion occurs.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs.Aircraft">
            <summary>
            Gets the aircraft owning the part that is exploding.
            </summary>
            <value>
            The aircraft owning the part that is exploding.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs.CascadeCount">
            <summary>
            Gets the cascade count for the explosion.
            </summary>
            <value>
            The cascade count for the explosion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs.Force">
            <summary>
            Gets the force of the explosion.
            </summary>
            <value>
            The force of the explosion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs.Part">
            <summary>
            Gets the part that is exploding.
            </summary>
            <value>
            The part that is exploding.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IPartDisconnectExplosionEventArgs.Position">
            <summary>
            Gets the position of the explosion.
            </summary>
            <value>
            The position of the explosion.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IBodyCreatedEventArgs">
            <summary>
            Event arguments for an event that is thrown when a body script creates a new body script.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IBodyCreatedEventArgs.NewBodyScript">
            <summary>
            Gets the new body script that was created.
            </summary>
            <value>
            The new body script that was created.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Events.IBodyCreatedEventArgs.SourceBodyScript">
            <summary>
            Gets the source body script that was responsible for creating the new body.
            </summary>
            <value>
            The source body script that was responsible for creating the new body.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly">
            <summary>
            Contains a group of parts and connections and provides methods to save and load them.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.MissingParts">
            <summary>
            Gets the missing parts.
            </summary>
            <value>
            The missing parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.NextId">
            <summary>
            Gets the next identifier that does not conflict with any ID's currently used by the assembly.
            </summary>
            <value>
            The next identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.Parts">
            <summary>
            Gets the parts.
            </summary>
            <value>
            The parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.RigidBodyGroups">
            <summary>
            Gets or sets the rigid body groups.
            </summary>
            <value>
            The rigid body groups.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.Absorb(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly)">
            <summary>
            Absorbs the specified assembly. All parts from the specified assembly will be moved into this assembly.
            </summary>
            <param name="assembly">The assembly to absorb.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.AddPart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart)">
            <summary>
            Adds the part.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.CreateGameObjects(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo,UnityEngine.Transform)">
            <summary>
            Creates the game objects.
            </summary>
            <param name="aircraftScript">The aircraft.</param>
            <param name="partCreationInfo">The part creation information.</param>
            <param name="parentGameObject">The parent game object.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAssembly.GenerateXml(System.Boolean)">
            <summary>
            Generates the XML.
            </summary>
            <param name="createRigidBodyGroups">if set to <c>true</c> [create rigid body groups].</param>
            <returns>
            The XML element.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint">
            <summary>
            An attach point where a part can connect to another part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.AdaptiveHardEdges">
            <summary>
            Gets or sets the adaptive hard edges, which are edges that are to be treated as hard by the adaptive cubes.
            </summary>
            <value>
            The adaptive hard edges.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.AdaptiveIgnore">
            <summary>
            Gets or sets a value indicating whether adaptive cubes should include this attach point as a connection.
            </summary>
            <value>
            <c>true</c> if [affects adaptive cubes]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.AllowRotation">
            <summary>
            Gets or sets a value indicating whether [allow rotation].
            </summary>
            <value>
              <c>true</c> if [allow rotation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.AttachesToWing">
            <summary>
            Gets or sets a value indicating whether this attach point should only attach to wings.
            </summary>
            <value>
              <c>true</c> if it only attaches to wings; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.AttachPointScript">
            <summary>
            Gets or sets the attach point script.
            </summary>
            <value>
            The attach point script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.DetachAtCenterOfMass">
            <summary>
            Gets or sets a value indicating whether a detacher for this attach point will apply
            its force at the attach point or at the center of mass of the attached rigid body.
            </summary>
            <value>
              <c>true</c> if a detacher will apply force at the attached body's center of mass; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.DetachForceScale">
            <summary>
            Gets the detach force scale.
            </summary>
            <value>
            The detach force scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Display">
            <summary>
            Gets or sets a value indicating whether to display this attach point in the designer.
            </summary>
            <value>
              <c>true</c> if [display]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.DisplayWhenDragged">
            <summary>
            Gets or sets a value indicating whether to display this attach point when dragged.
            </summary>
            <value>
              <c>true</c> if [display when dragged]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.FuselageConnection">
            <summary>
            Gets or sets a value indicating whether this is a fuselage connection attach point.
            </summary>
            <value>
              <c>true</c> if this is a fuselage connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Id">
            <summary>
            Gets or sets the identifier of this attach point. Attach point IDs are unique within the part,
            but not unique against attach points in other parts.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.IgnoreGrid">
            <summary>
            Gets or sets a value indicating whether this attach point should snap to another attach pont on placement or if it
            should allow connection anywhere on another attach point. The VTOL nozzles use this flag so the user can have more
            control over exactly where they place the nozzle.
            </summary>
            <value>
              <c>true</c> if [ignore grid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.IgnoreSurfaces">
            <summary>
            Gets or sets a value indicating whether to ignore connections with surface attach points.
            </summary>
            <value>
              <c>true</c> if [ignore surfaces]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.IsAvailable">
            <summary>
            Gets a value indicating whether [is available].
            </summary>
            <value>
              <c>true</c> if [is available]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.IsSurfaceAttachPoint">
            <summary>
            Gets a value indicating whether [is surface attach point].
            </summary>
            <value>
            <c>true</c> if [is surface attach point]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.JointAxis">
            <summary>
            Gets or sets the joint axis.
            </summary>
            <value>
            The joint axis.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.JointPosition">
            <summary>
            Gets or sets the joint position.
            </summary>
            <value>
            The joint position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.JointType">
            <summary>
            Gets or sets the type of the joint.
            </summary>
            <value>
            The type of the joint.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Normal">
            <summary>
            Gets or sets the normal of the part connection.
            </summary>
            <value>
            The normal.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.NumPartConnections">
            <summary>
            Gets the number part connections.
            </summary>
            <value>
            The number part connections.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.PartConnections">
            <summary>
            Gets the part connections.
            </summary>
            <value>
            The part connections.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.PreventInertiaTensorDiffusion">
            <summary>
            Gets a value indicating whether this attach point should prevent inertia tensor diffusion from flowing
            through any body joints created at this attach point.
            </summary>
            <value>
              <c>true</c> if inertia tensor diffusion should be prevented; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.RequiresPhysicsJoint">
            <summary>
            Gets or sets a value indicating whether this attach point requires the physics joint to be on the rigid body containing this part.
            </summary>
            <value>
            <c>true</c> if this attach point requires the physics joint; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Surface">
            <summary>
            Gets or sets the surface collider, or empty string if this is not a surface attach point.
            </summary>
            <value>
            The surface collider.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.Wing">
            <summary>
            Gets or sets a value indicating whether [wing].
            </summary>
            <value>
              <c>true</c> if [wing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint.RemoveConnection(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection)">
            <summary>
            Removes the connection.
            </summary>
            <param name="partConnection">The part connection.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript">
            <summary>
            The script used for defining attach points in the Unity3D editor.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.AttachPoint">
            <summary>
            Gets the attach point.
            </summary>
            <value>
            The attach point.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.ConnectToLayer">
            <summary>
            Gets the layer that this attach point can connect to.
            </summary>
            <value>
            The connect to layer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.Edges">
            <summary>
            Gets the edges.
            </summary>
            <value>
            The edges.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.HardEdgeMask">
            <summary>
            Gets the hard edge mask, which is a 4 digit binary number. 1 indicates a hard edge, and 0 indicates a non-hard edge.
            </summary>
            <value>
            The hard edge mask.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.PartScript">
            <summary>
            Gets the part script.
            </summary>
            <value>
            The part script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.WorldNormal">
            <summary>
            Gets the attach point's normal in world coordinates.
            </summary>
            <value>
            The world normal.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript.UpdateLayer">
            <summary>
            Updates the layer based on the attach point's normal.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint">
            <summary>
            Joint between two bodies.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.BodyA">
            <summary>
            Gets or sets the body a.
            </summary>
            <value>
            The body a.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.BodyB">
            <summary>
            Gets or sets the body b.
            </summary>
            <value>
            The body b.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.Broken">
            <summary>
            Gets or sets a value indicating whether this BodyJoint is broken.
            </summary>
            <value>
            <c>true</c> if broken; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.IntermediaryRigidbody">
            <summary>
            Gets or sets the intermediary rigid body. Sometimes a body joint may actually consist of two physics joints, which
            are connected with a small intermediary rigid body.
            </summary>
            <value>
            The intermediary rigid body.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.PartConnection">
            <summary>
            Gets or sets the part connection.
            </summary>
            <value>
            The part connection.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.PreventInertiaTensorDiffusion">
            <summary>
            Gets or sets a value indicating whether to prevent inertia tensor diffusion from flowing through
            this body joint.
            </summary>
            <value>
              <c>true</c> if inertia tensor diffusion should be prevented at this joint; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.Break(System.Boolean)">
            <summary>
            Breaks the joint.
            </summary>
            <param name="playSound">if set to <c>true</c> [play sound].</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.DestroyPhysicsJoints(System.Boolean)">
            <summary>
            Destroys the physics joints.
            </summary>
            <param name="destroyImmediately">if set to <c>true</c>, the joints will be destroyed immediately.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.GetJointForAttachPoint(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Gets the physics joint for the specified attach point.
            </summary>
            <param name="attachPoint">The attach point.</param>
            <returns>The physics joint, or null if the attach point does not have a joint in this body joint.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.HasJoint(UnityEngine.Joint)">
            <summary>
            Determines whether the specified physics joint is in this body joint.
            </summary>
            <param name="joint">The joint.</param>
            <returns>True if the body joint contains the specified physics joint.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.OtherBody(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript)">
            <summary>
            Others the body.
            </summary>
            <param name="body">The body.</param>
            <returns>The other body.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyJoint.SetJoint(UnityEngine.ConfigurableJoint,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Sets the joint.
            </summary>
            <param name="joint">The configurable joint.</param>
            <param name="attachPoint">The attach point.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript">
            <summary>
            Script for a group of parts from the aircraft that is simulated together as a single rigid body.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.NewBodyCreated">
            <summary>
            Occurs when a new body has been created.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.PartDisconnectExplosion">
            <summary>
            Occurs when a part disconnect explosion occurs.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.Aircraft">
            <summary>
            Gets or sets the aircraft.
            </summary>
            <value>
            The aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.InertiaTensorDiffusionJointCount">
            <summary>
            Gets the number of joints that can be used in inertia tensor diffusion.
            </summary>
            <value>
            The number of joints that can be used in inertia tensor diffusion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.InertiaTensorInitial">
            <summary>
            Gets or sets the inertia tensor magnitude as it was when the diffuse update step first started.
            </summary>
            <value>
            The inertia tensor initial value for the diffuse step.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.InertiaTensorMagnitude">
            <summary>
            Gets or sets the inertia tensor magnitude.
            </summary>
            <value>
            The inertia tensor magnitude.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.Joints">
            <summary>
            Gets the joints.
            </summary>
            <value>
            The joints.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.MaxConnectedInertiaTensor">
            <summary>
            Gets or sets the maximum connected inertia tensor.
            </summary>
            <value>
            The maximum connected inertia tensor.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.PartGroups">
            <summary>
            Gets the part groups.
            </summary>
            <value>
            The part groups.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.RigidBody">
            <summary>
            Gets the rigid body.
            </summary>
            <value>
            The rigid body.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.RigidBodyGroup">
            <summary>
            Gets or sets the rigid body group.
            </summary>
            <value>
            The rigid body group.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.AddDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag)">
            <summary>
            Adds the drag.
            </summary>
            <param name="partDrag">The part drag.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.AddFrameDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection,System.Single,UnityEngine.Vector3)">
            <summary>
            Adds drag that will only be applied this frame.
            </summary>
            <param name="direction">The direction.</param>
            <param name="drag">The drag to add.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.AddWaterFrameDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection,System.Single,UnityEngine.Vector3)">
            <summary>
            Adds water drag
            </summary>
            <param name="direction">The direction.</param>
            <param name="drag">The drag to add.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.AddWaterFrameDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag)">
            <summary>
            Adds the water frame drag.
            </summary>
            <param name="waterFrameDrag">The water frame drag.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.CalculateDrag">
            <summary>
            Calculates the drag for this body.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.CalculateIntake">
            <summary>
            Calculates the intake.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.ExplodePart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Explodes and disconnects the part.
            </summary>
            <param name="part">The part to explode.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.ExplodePart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Single,System.Int32)">
            <summary>
            Explodes the part.
            </summary>
            <param name="part">The part.</param>
            <param name="magnitude">The magnitude.</param>
            <param name="numExplosionCascades">The number of explosion cascades.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.GetJointBreakTorque">
            <summary>
            Gets the joint break torque.
            </summary>
            <returns>The break torque.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.HandleExplosiveBlast(System.Collections.Generic.List{Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript},System.Single,System.Single,System.Single,UnityEngine.Vector3)">
            <summary>
            Handles an explosive blast for the body.
            </summary>
            <param name="parts">The parts affected by the blast.</param>
            <param name="blastForce">The blast force.</param>
            <param name="blastRadius">The blast radius.</param>
            <param name="criticalBlastRadius">The critical blast radius (radius at which the full force of the blast is always applied).</param>
            <param name="blastOrigin">The blast origin.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.OnPartDamageLevelIncreased(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Called when the part damage level increased for a part within this body.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.SetFrameAngularDrag(System.Single)">
            <summary>
            Sets the frame angular drag.
            </summary>
            <param name="frameAngularDrag">The frame angular drag.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript.SilentlyDisconnectAndDisablePart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Silently disconnects and disables the part.
            </summary>
            <param name="part">The part to disconnect and disable.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IGroupCenterOfMass">
            <summary>
            Class for center of mass.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IGroupCenterOfMass.CenterOfMass">
            <summary>
            Gets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IGroupCenterOfMass.EmptyMass">
            <summary>
            Gets the empty mass.
            </summary>
            <value>
            The empty mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IGroupCenterOfMass.LoadedMass">
            <summary>
            Gets the total mass of all objects included.
            </summary>
            <value>
            The total mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IGroupCenterOfMass.MassWeightedCenterOfMass">
            <summary>
            Gets the mass weighted center of mass.
            </summary>
            <value>
            The mass weighted center of mass.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData">
            <summary>
            Contains information about the aircraft used by the instruments.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Altitude">
            <summary>
            Gets or sets the altitude.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Fuel">
            <summary>
            Gets or sets the fuel.
            </summary>
            <value>
            The fuel.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Heading">
            <summary>
            Gets or sets the heading.
            </summary>
            <value>
            The heading.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Pitch">
            <summary>
            Gets or sets the pitch.
            </summary>
            <value>
            The pitch.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Roll">
            <summary>
            Gets or sets the roll.
            </summary>
            <value>
            The roll.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.SignedSpeed">
            <summary>
            Gets or sets the signed speed (potentially negative).
            </summary>
            <value>
            The signed speed (potentially negative).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IInstrumentData.Throttle">
            <summary>
            Gets or sets the throttle.
            </summary>
            <value>
            The throttle.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.PartCollisionResponseType">
            <summary>
            Enumerates the way a part can respond to a collision.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.PartCollisionResponseType.None">
            <summary>
            The part will not disconnect or explode as a response to a collision.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.PartCollisionResponseType.DisconnectOnly">
            <summary>
            The part cannot explode. It can only disconnect in response to a collision.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.PartCollisionResponseType.Default">
            <summary>
            The part is capable of exploding or disconnecting as a response to a collision.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart">
            <summary>
            An interface for parts.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.AttachPoints">
            <summary>
            Gets the attach points.
            </summary>
            <value>
            The attach points.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.CalculateDrag">
            <summary>
            Gets or sets a value indicating whether to include this part in the drag calculation.
            </summary>
            <value>
              <c>true</c> if drag is calculated for this part; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.CenterOfMass">
            <summary>
            Gets or sets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.DisableAircraftCollisions">
            <summary>
            Gets a value indicating whether [disable aircraft collisions].
            </summary>
            <value>
            <c>true</c> if [disable aircraft collisions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.DragScale">
            <summary>
            Gets or sets the drag scale, which can be used in the designer to change the amount
            of drag calculated for this part.
            </summary>
            <value>
            The drag scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.EmptyMass">
            <summary>
            Gets the empty mass.
            </summary>
            <value>
            The empty mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Enabled">
            <summary>
            Gets or sets a value indicating whether [enabled].
            </summary>
            <value>
              <c>true</c> if [enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Health">
            <summary>
            Gets the health for the part.
            </summary>
            <value>
            The health for the part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.InitiallyConnectedToMainCockpit">
            <summary>
            Gets or sets a value indicating whether [initially connected to main cockpit].
            </summary>
            <value>
            <c>true</c> if [initially connected to main cockpit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.InitialRotationMirrored">
            <summary>
            Gets the rotation of the part if it is a new part being added from the opposite side of the initial view of the plane.
            </summary>
            <value>
            The rotation of the part if it is a new part being added from the opposite side of the initial view of the plane.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.IsCockpit">
            <summary>
            Gets a value indicating whether [is cockpit].
            </summary>
            <value>
              <c>true</c> if [is cockpit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.IsUsingConstantDrag">
            <summary>
            Gets a value indicating whether this part is using constant drag, and it's drag should not be
            dynamically calculated.
            </summary>
            <value>
            <c>true</c> if is using constant drag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.LoadedMass">
            <summary>
            Gets the mass.
            </summary>
            <value>
            The mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.MassScale">
            <summary>
            Gets or sets the mass scale.
            </summary>
            <value>
            The mass scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.MaterialIds">
            <summary>
            Gets or sets the primary material IDs. These are indexes into the solid part texture. Negative
            IDs are used for standard colors, such as black, etc that cannot be changed by a theme.
            </summary>
            <value>
            The primary material IDs.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.ModifierMass">
            <summary>
            Gets the modifier mass.
            </summary>
            <value>
            The modifier mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Modifiers">
            <summary>
            Gets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartCollisionResponse">
            <summary>
            Gets the part collision response.
            </summary>
            <value>
            The part collision response.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartConnections">
            <summary>
            Gets the part connections.
            </summary>
            <value>
            The part connections.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartCreationInfoUsedForInitialization">
            <summary>
            Gets the part creation information used for initialization.
            </summary>
            <value>
            The part creation information used for initialization.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartDrag">
            <summary>
            Gets the part drag.
            </summary>
            <value>
            The part drag.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartScale">
            <summary>
            Gets or sets the part scale override, or null if there is not one.
            </summary>
            <value>
            The part scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartScript">
            <summary>
            Gets the part script.
            </summary>
            <value>
            The part script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.PartType">
            <summary>
            Gets or sets the type of the part.
            </summary>
            <value>
            The type of the part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.Rotation">
            <summary>
            Gets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.SharesRigidBody">
            <summary>
            Gets a value indicating whether [shares rigid body].
            </summary>
            <value>
              <c>true</c> if [shares rigid body]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.UnderwaterDragScalar">
            <summary>
            Gets the underwater drag scalar.
            </summary>
            <value>
            The underwater drag scalar.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.CreateGameObject(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo)">
            <summary>
            Generates the game object for part, and assigns the part script.
            </summary>
            <param name="aircraftScript">The aircraft.</param>
            <param name="partCreationInfo">The part creation information.</param>
            <returns>
            The game object for the part.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.EnableModifiers">
            <summary>
            Enables the modifiers.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.GenerateXml">
            <summary>
            Generates the XElement to fully describe this object for serialization purposes.
            </summary>
            <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.GetAttachPoint(System.Int32)">
            <summary>
            Gets the attach point with the ID.
            </summary>
            <param name="attachPointId">The attach point ID.</param>
            <returns>
            The attach point, or null if it doesn't exist.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.GetModifier``1">
            <summary>
            Gets the modifier.
            </summary>
            <typeparam name="T">The type of the modifier to get.</typeparam>
            <returns>The modifier or null if it does not contain one.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.GetPartConnection(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart)">
            <summary>
            Gets the part connection to the specified part.
            </summary>
            <param name="part">The part.</param>
            <returns>
            The part connection or null if a part connection does not exist between the two parts
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.RegisterNewModifier(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier)">
            <summary>
            Registers the new part modifier.
            </summary>
            <param name="newModifier">The new part modifier to register.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart.UnregisterModifier(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier)">
            <summary>
            Unregisters the part modifier.
            </summary>
            <param name="modifier">The part modifier to unregister.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection">
            <summary>
            Defines a connection between two parts and all overlapping attach points.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.AttachPointsA">
            <summary>
            Gets the attach points connected from part a.
            </summary>
            <value>
            The attach points.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.AttachPointsB">
            <summary>
            Gets the attach points connected from part b.
            </summary>
            <value>
            The attach points.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.EnableCollision">
            <summary>
            Gets a value indicating whether [enable collision].
            </summary>
            <value>
              <c>true</c> if [enable collision]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.IsDestroyed">
            <summary>
            Gets a value indicating whether [is destroyed].
            </summary>
            <value>
              <c>true</c> if [is destroyed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.IsPhysicsJoint">
            <summary>
            Gets or sets a value indicating whether or not this part connection will be represented with
            a physics joint at runtime.
            </summary>
            <value>
              <c>true</c> if [is physics joint]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.PartA">
            <summary>
            Gets the part a.
            </summary>
            <value>
            The part a.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.PartB">
            <summary>
            Gets the part b.
            </summary>
            <value>
            The part b.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.AddAttachPointA(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Adds the attach point to part A.
            </summary>
            <param name="attachPoint">The attach point.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.AddAttachPointB(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Adds the attach point to part B.
            </summary>
            <param name="attachPoint">The attach point.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.DestroyConnection">
            <summary>
            Destroys the connection.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.GenerateXml">
            <summary>
            Generates the XML.
            </summary>
            <returns>The connection element.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.GetOtherAttachPoint(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Gets the other attach point in the part connection. This only works for part
            connections with a single attach point for A and B.
            </summary>
            <param name="ap">The attach point that you don't want.</param>
            <returns>The other attach point.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartConnection.GetOtherPart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart)">
            <summary>
            Gets the other part in the connection.
            </summary>
            <param name="part">The part.</param>
            <returns>
            The other part.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo">
            <summary>
            Info required to create a GameObject from a Part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.CreateChildren">
            <summary>
            Gets or sets a value indicating whether to create all child parts, if false, only create this part, and no children.
            </summary>
            <value>
              <c>true</c> if to create children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.CreateHingeJoints">
            <summary>
            Gets or sets a value indicating whether to create hinge joints.
            </summary>
            <value>
              <c>true</c> to create hinge joints; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.CreateRigidBody">
            <summary>
            Gets or sets a value indicating whether to create rigid bodies.
            </summary>
            <value>
              <c>true</c> if creating rigid body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.EnableWingScript">
            <summary>
            Gets or sets a value indicating whether to enable wing script.
            </summary>
            <value>
              <c>true</c> if [enable wing script]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.IsNonFlyableAircraft">
            <summary>
            Gets or sets a value indicating whether this is a "dummy" aircraft that is instantiated primarily for aesthetic purposes.
            </summary>
            <value>
              <c>true</c> if [is dummy aircraft]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo.IsRigidBodyKinematic">
            <summary>
            Gets or sets a value indicating whether to set rigid bodies as kinematic.
            </summary>
            <value>
            <c>true</c> if setting rigid bodies as kinematic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect">
            <summary>
            A script for part damage effects.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.AudioSource">
            <summary>
            Gets the audio source associated with this effect (if any).
            </summary>
            <value>
            The audio source associated with this effect (if any).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.DestroyDelay">
            <summary>
            Gets or sets the delay between disabling the effect and completely destroying it.
            </summary>
            <value>
            The delay between disabling the effect and completely destroying it.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.Destroyed">
            <summary>
            Gets a value indicating whether this PartDamageEffect is destroyed.
            </summary>
            <value>
              <c>true</c> if destroyed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.DestroyUnderWater">
            <summary>
            Gets or sets a value indicating whether the damage effect should be destroyed when going under water.
            </summary>
            <value>
              <c>true</c> if the damage effect should be destroyed when going under water; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.DistanceEmissionThreshold">
            <summary>
            Gets or sets the distance threshold, beyond which the particle system switches from time based emission to distance based.
            </summary>
            <value>
            The distance threshold, beyond which the particle system switches from time based emission to distance based.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.Duration">
            <summary>
            Gets or sets the duration of the effect.
            </summary>
            <value>
            The duration of the effect.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.OutOfFuelDestroyDelay">
            <summary>
            Gets or sets the amount of time that must elapse after running out of fuel before the effect stop (if it requires fuel).
            </summary>
            <value>
            The amount of time that must elapse after running out of fuel before the effect stop (if it requires fuel).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.ParticleSystem">
            <summary>
            Gets the particle system for this effect.
            </summary>
            <value>
            The particle system for this effect.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.PartScript">
            <summary>
            Gets the part script associated with this effect.
            </summary>
            <value>
            The part script associated with this effect.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.RequiresFuel">
            <summary>
            Gets or sets a value indicating whether the effect requires that the aircraft has fuel.
            </summary>
            <value>
              <c>true</c> if the effect requires that the aircraft has fuel; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffect.DestroyEffect">
            <summary>
            Destroys the effect.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects">
            <summary>
            A class used for spawning damage effects.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.MaxNumberOfEffects">
            <summary>
            Gets or sets the maximum number of effects.
            </summary>
            <value>
            The maximum number of effects.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.CreateFire(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Nullable{UnityEngine.Vector3})">
            <summary>
            Creates a fire damage effect.
            </summary>
            <param name="part">The part to which the damage effect should be added.</param>
            <param name="position">The world position at which to position the effect on the part.
            If <c>null</c> the damage effect will be automatically positioned.</param>
            <returns>The damage effect that was created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.CreateFireSmall(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Nullable{UnityEngine.Vector3})">
            <summary>
            Creates a small fire damage effect.
            </summary>
            <param name="part">The part to which the damage effect should be added.</param>
            <param name="position">The world position at which to position the effect on the part.
            If <c>null</c> the damage effect will be automatically positioned.</param>
            <returns>The damage effect that was created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.CreateFuelLeak(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Nullable{UnityEngine.Vector3},System.Nullable{UnityEngine.Vector3})">
            <summary>
            Creates the fuel leak damage effect.
            </summary>
            <param name="part">The part to which the damage effect should be added.</param>
            <param name="position">The world position at which to position the effect on the part.
            If <c>null</c> the damage effect will be automatically positioned.</param>
            <param name="direction">The direction in which the effect should point.</param>
            <returns>The damage effect that was created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.CreateLightSmoke(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Nullable{UnityEngine.Vector3})">
            <summary>
            Creates a light smoke damage effect.
            </summary>
            <param name="part">The part to which the damage effect should be added.</param>
            <param name="position">The world position at which to position the effect on the part.
            If <c>null</c> the damage effect will be automatically positioned.</param>
            <returns>The damage effect that was created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDamageEffects.DestroyAndOrphanEffects(UnityEngine.GameObject)">
            <summary>
            Destroys the orphans any effects under the specified object.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag">
            <summary>
            Provides drag data for a part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.DragCalculatorVolume">
            <summary>
            Gets or sets the volume of the part in the drag calculator.
            </summary>
            <value>
            The volume.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.AddDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection,System.Single,UnityEngine.Vector3)">
            <summary>
            Adds the drag.
            </summary>
            <param name="direction">The direction.</param>
            <param name="value">The value.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.AddDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag)">
            <summary>
            Adds the drag.
            </summary>
            <param name="partDrag">The part drag.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.AddHit(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection)">
            <summary>
            Adds a hit to this part from the direction.
            </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.Copy(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag,System.Single)">
            <summary>
            Copies the part drag information to the specified part drag target object, scaling the drag by the specified amount.
            </summary>
            <param name="copyTarget">The target object in which to copy values.</param>
            <param name="scale">The scale to be applied to the drag.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.GetCenterOfDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection)">
            <summary>
            Gets the center of drag for the direction.
            </summary>
            <param name="direction">The direction.</param>
            <returns>The CoD for the specified direction.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.GetDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection)">
            <summary>
            Gets the drag.
            </summary>
            <param name="direction">The direction.</param>
            <returns>The drag for the specified direction.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.GetDragHitCount(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection)">
            <summary>
            Gets the number of times drag was added to the part from the direction.
            </summary>
            <param name="direction">The direction.</param>
            <returns>The number of drag hits for the specified direction.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.Parse(System.Xml.Linq.XAttribute)">
            <summary>
            Parses the specified attribute.
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.Scale(System.Single)">
            <summary>
            Multiplies the part drag by the scalar and returns a new part drag.
            </summary>
            <param name="scalar">The scalar.</param>
            <returns>
            The new part drag that is the result of the operation.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.SetCenterOfDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection,UnityEngine.Vector3)">
            <summary>
            Sets the center of drag for the direction.
            </summary>
            <param name="direction">The direction.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartDrag.SetDrag(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.DragDirection,System.Single)">
            <summary>
            Sets the drag.
            </summary>
            <param name="direction">The direction.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript">
            <summary>
            Group of parts that will be combined into a single mesh and the smallest unit that can break off.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript.HasCockpit">
            <summary>
            Gets or sets a value indicating whether [has cockpit].
            </summary>
            <value>
              <c>true</c> if [has cockpit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript.Parts">
            <summary>
            Gets the parts.
            </summary>
            <value>
            The parts.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartGroupScript.DecombineMesh(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            If the specified part is currently part of the combined mesh,
            it will be removed from the combined mesh and go back to rendering itself.
            </summary>
            <param name="part">The part to be removed from the combined mesh.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript">
            <summary>
            A script that manages material related data and functionality for a part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.CustomMaterial">
            <summary>
            Gets or sets the custom material.
            </summary>
            <value>
            The custom material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.FoundAttachPoint">
            <summary>
            Gets or sets a value indicating whether the part has found an attach point while dragging in the designer.
            </summary>
            <value>
              <c>true</c> if [found attach point]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.IsCollidingInDesigner">
            <summary>
            Gets or sets a value indicating whether [is colliding in designer].
            </summary>
            <value>
            <c>true</c> if [is colliding in designer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.IsDisconnected">
            <summary>
            Gets or sets a value indicating whether part is disconnected.
            </summary>
            <value>
              <c>true</c> if disconnected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.IsHidden">
            <summary>
            Gets or sets a value indicating whether this instance is hidden.
            </summary>
            <value>
              <c>true</c> if this instance is hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether [is highlighted].
            </summary>
            <value>
              <c>true</c> if [is highlighted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.IsSelected">
            <summary>
            Gets or sets a value indicating whether [is selected].
            </summary>
            <value>
              <c>true</c> if [is selected]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.OverrideMaterial">
            <summary>
            Gets or sets the override material.
            </summary>
            <value>
            The override material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.PartMaterial">
            <summary>
            Gets or sets the part material.
            </summary>
            <value>
            The part material.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.PrimaryTextureCoords">
            <summary>
            Gets or sets the primary texture coordinates.
            </summary>
            <value>
            The primary texture coordinates.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.RendererMaps">
            <summary>
            Gets the renderer maps.
            </summary>
            <value>
            The renderer maps.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.SecondaryTextureCoords">
            <summary>
            Gets or sets the secondary texture coordinates.
            </summary>
            <value>
            The secondary texture coordinates.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.ShowPartDamage">
            <summary>
            Gets or sets a value indicating whether part damage should be shown.
            </summary>
            <value>
              <c>true</c> if part damage should be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.Visible">
            <summary>
            Gets or sets a value indicating whether this part material is visible.
            </summary>
            <value>
              <c>true</c> if [visible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.AddRenderer(UnityEngine.MeshRenderer)">
            <summary>
            Adds the renderer.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.AddRenderer(UnityEngine.MeshRenderer,UnityEngine.Material[],Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialType[],System.Int32[],System.Boolean)">
            <summary>
            Adds the renderer.
            </summary>
            <param name="renderer">The renderer.</param>
            <param name="originalMaterials">The original materials.</param>
            <param name="materialTypes">The material types.</param>
            <param name="levels">The levels.</param>
            <param name="excludeFromCombine">if set to <c>true</c> [exclude from combine].</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.GetEligibleRenderersForCombine">
            <summary>
            Gets the renderers eligible for combining into a single mesh.
            </summary>
            <returns>The list of eligible renderers.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.Initialize(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript)">
            <summary>
            Initializes the specified aircraft.
            </summary>
            <param name="aircraft">The aircraft.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.InitializeMaterial">
            <summary>
            Updates the material.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.OnPartDamaged">
            <summary>
            Called when the part is damaged.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.OnThemeUpdated">
            <summary>
            Called when the current theme is updated or changed.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.RemoveRenderer(UnityEngine.MeshRenderer)">
            <summary>
            Removes the renderer.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.RestoreOriginalMaterials">
            <summary>
            Restores the original materials.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartMaterialScript.SetMaterial(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the material.
            </summary>
            <param name="material">The material.</param>
            <param name="level">The level.</param>
            <param name="initializingPartMaterial">if set to <c>true</c> [initializing part material].</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript">
            <summary>
            Base script for a part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.Aircraft">
            <summary>
            Gets the aircraft.
            </summary>
            <value>
            The aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.AttachPointScripts">
            <summary>
            Gets the attach point scripts, which are only created and used in the designer.
            </summary>
            <value>
            The attach point scripts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.Body">
            <summary>
            Gets or sets the part's body script.
            </summary>
            <value>
            The body script,
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.CanEdit">
            <summary>
            Gets a value indicating whether the part can be edited in the designer part editor widget.
            </summary>
            <value>
              <c>true</c> if [can edit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.ConnectedToMainCockpit">
            <summary>
            Gets or sets a value indicating whether the part is currently connected to the main cockpit graph.
            </summary>
            <value>
              <c>true</c> if the part is currently connected to the main cockpit graph; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.EstimateOfUnderwaterPercent">
            <summary>
            Gets the estimate of underwater percent.
            </summary>
            <value>
            The estimate of underwater percent.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.InPlaneDesigner">
            <summary>
            Gets a value indicating whether [is in editor].
            </summary>
            <value>
              <c>true</c> if [is in editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.MaxHealth">
            <summary>
            Gets the total health for the part.
            </summary>
            <value>
            The total health for the part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.Modifiers">
            <summary>
            Gets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.Part">
            <summary>
            Gets the part.
            </summary>
            <value>
            The part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PartDamage">
            <summary>
            Gets the total damage so far for this part.
            </summary>
            <value>
            The total damage so far for this part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PartDamageLevel">
            <summary>
            Gets the damage level for this part.
            </summary>
            <value>
            The damage level for this part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PartGroup">
            <summary>
            Gets or sets the part group.
            </summary>
            <value>
            The part group.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PartMaterialScript">
            <summary>
            Gets or sets the part material script.
            </summary>
            <value>
            The part material script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PendingExplosionForce">
            <summary>
            Gets or sets the explosion force for the explosion to create at the next available opportunity.
            </summary>
            <value>
            The explosion force for the explosion to create at the next available opportunity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.PrimaryPartCollilder">
            <summary>
            Gets or sets the primary part collider.
            </summary>
            <value>
            The primary part collider.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.ThudSoundDisabled">
            <summary>
            Gets or sets a value indicating whether [thud sound disabled].
            </summary>
            <value>
              <c>true</c> if [thud sound disabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.ConnectToPart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPointScript)">
            <summary>
            Connects to part.
            </summary>
            <param name="thisAttachPointScript">The this attach point script.</param>
            <param name="targetAttachPointScript">The target attach point script.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.CreateAttachPoints">
            <summary>
            Creates the attach points. Only executed in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.GetForwardAndUpVectorsForRayHit(UnityEngine.Vector3,UnityEngine.Vector3@,UnityEngine.Vector3@)">
            <summary>
            Gets the forward and up vectors.
            </summary>
            <param name="attachPointNormal">The attach point normal.</param>
            <param name="forward">The forward.</param>
            <param name="up">The up vector.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.GetModifier``1">
            <summary>
            Gets the modifier script of the specified type, or null if it does not exist.
            </summary>
            <typeparam name="T">The modifier type.</typeparam>
            <returns>The modifier script, or null if it does not exist.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.GetModifiers``1">
            <summary>
            Gets the modifiers of the type.
            </summary>
            <typeparam name="T">The modifier type.</typeparam>
            <returns>The list of modifiers of the type.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.HasModifier``1">
            <summary>
            Determines whether this instance has modifier.
            </summary>
            <typeparam name="T">The type of the modifier script.</typeparam>
            <returns>True if the part has the modifier, or false otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.Initialize(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart,Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript)">
            <summary>
            Initializes the specified aircraft.
            </summary>
            <param name="part">The part.</param>
            <param name="aircraft">The aircraft.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.OnDamaged(System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when the part sustains damage.
            </summary>
            <param name="damage">The amount of damage.</param>
            <param name="position">The position of the damage impact.</param>
            <param name="direction">The direction of the damage impact.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.OnDamageLevelIncreased(Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when the damage level for the part has increased.
            If a single damage event occurs which causes the damage level to increase more than once,
            this will be called once for each damage level between the original and the new (including the new level).
            </summary>
            <param name="level">The new damage level.</param>
            <param name="lastDamage">The amount of the last damage.</param>
            <param name="lastDamagePosition">The position of the last damage.</param>
            <param name="lastDamageDirection">The direction of the last damage .</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.OnJointBreak(System.Single)">
            <summary>
            Called when a joint breaks.
            </summary>
            <param name="breakForce">The break force.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.RegisterNewModifier(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript)">
            <summary>
            Registers the new modifier.
            </summary>
            <param name="newModifier">The new modifier.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.UpdateAttachPoints">
            <summary>
            Updates the attach points.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript.UpdateRotationForAttachment(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Updates the rotation for attachment.
            </summary>
            <param name="forward">The forward.</param>
            <param name="up">The up vector.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType">
            <summary>
            Part type contains global data
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CanExplode">
            <summary>
            Gets a value indicating whether this part can explode.
            </summary>
            <value>
              <c>true</c> if this part can explode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CenterOfMass">
            <summary>
            Gets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CollideConnected">
            <summary>
            Gets a value indicating whether to collide with connected parts. Only works on parts that do not share a rigid body.
            </summary>
            <value>
              <c>true</c> if [collide connected]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CombineMeshes">
            <summary>
            Gets or sets a value indicating whether meshes can be combined.
            </summary>
            <value>
              <c>true</c> if meshes can be combined; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.ConstantDrag">
            <summary>
            Gets the constant drag.
            </summary>
            <value>
            The constant drag.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.DamageDisconnect">
            <summary>
            Gets a value indicating whether the part has a chance of disconnected when it sustains damage.
            </summary>
            <value>
            A value indicating whether the part has a chance of disconnected when it sustains damage.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.DefaultMaterialIds">
            <summary>
            Gets the default materials IDs.
            </summary>
            <value>
            The default materials IDs.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.DisconnectForce">
            <summary>
            Gets or sets the amount of force required to make the part disconnect on a collision
            </summary>
            <value>
            The disconnect force.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.ExplodeForce">
            <summary>
            Gets or sets the amount of force required to make the part explode on a collision.
            </summary>
            <value>
            The explode force.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.Health">
            <summary>
            Gets the health for the part.
            </summary>
            <value>
            The health for the part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.Mass">
            <summary>
            Gets or sets the mass.
            </summary>
            <value>
            The mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.MirrorRotationOffset">
            <summary>
            Gets or sets the mirror rotation offset.
            </summary>
            <value>
            The mirror rotation offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.ModModifierTypes">
            <summary>
            Gets the list of modifier types associated with this part type for modifiers that are defined in mods.
            </summary>
            <value>
            The list of modifier types associated with this part type for modifiers that are defined in mods.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.ModPrefabPath">
            <summary>
            Gets or sets the prefab path in the mod asset bundle if the prefab exists in a mod.
            </summary>
            <value>
            The prefab path in the mod asset bundle if the prefab exists in a mod.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.PartTypeId">
            <summary>
            Gets or sets the part type identifier.
            </summary>
            <value>
            The part type identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.PrefabId">
            <summary>
            Gets or sets the prefab identifier.
            </summary>
            <value>
            The prefab identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.SharesRigidBody">
            <summary>
            Gets or sets a value indicating whether [shares rigid body].
            </summary>
            <value>
              <c>true</c> if [shares rigid body]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.UnderwaterDragScalar">
            <summary>
            Gets or sets the underwater drag scalar.
            </summary>
            <value>
            The underwater drag scalar.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CreateAttachPoints">
            <summary>
            Creates the attach points.
            </summary>
            <returns>The attach points.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartType.CreateModifiers(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart,System.Xml.Linq.XElement,System.Int32)">
            <summary>
            Creates the modifiers.
            </summary>
            <param name="part">The part object.</param>
            <param name="partElement">The part element.</param>
            <param name="aircraftXmlVersion">The aircraft XML version.</param>
            <returns>
            The list of modifiers.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap">
            <summary>
            The map of a material to a renderer.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.ExcludeFromMeshCombine">
            <summary>
            Gets or sets a value indicating whether [exclude from mesh combine].
            </summary>
            <value>
            <c>true</c> if [exclude from mesh combine]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.HighlightMaterials">
            <summary>
            Gets or sets the highlight materials.
            </summary>
            <value>
            The highlight materials.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.IsPrimaryMaterial">
            <summary>
            Gets a value indicating whether this renderer contains the primary material, which is level 0.
            </summary>
            <value>
              <c>true</c> if [is primary material]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.MaterialTypes">
            <summary>
            Gets or sets the material types.
            </summary>
            <value>
            The material types.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.OriginalMaterials">
            <summary>
            Gets or sets the original materials.
            </summary>
            <value>
            The original materials.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.Renderer">
            <summary>
            Gets or sets the renderer.
            </summary>
            <value>
            The renderer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.SubmeshToLevelMap">
            <summary>
            Gets or sets a map that goes from the sub-mesh index (index of array) to the material level to use for that sub-mesh.
            </summary>
            <value>
            The sub-mesh to level map.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.SetRendererMaterial(UnityEngine.Material)">
            <summary>
            Sets the renderer material.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRendererMaterialMap.SetRendererMaterial(UnityEngine.Material[])">
            <summary>
            Sets the renderer materials.
            </summary>
            <param name="materials">The materials.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup">
            <summary>
            Rigid body group.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.AngularVelocity">
            <summary>
            Gets or sets the angular velocity.
            </summary>
            <value>
            The angular velocity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.CenterOfMass">
            <summary>
            Gets or sets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.Mass">
            <summary>
            Gets or sets the mass.
            </summary>
            <value>
            The mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.Parts">
            <summary>
            Gets the parts.
            </summary>
            <value>
            The parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IRigidBodyGroup.Velocity">
            <summary>
            Gets or sets the velocity.
            </summary>
            <value>
            The velocity.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript">
            <summary>
            The VTOL manager script
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.CurrentMaxDuctedEngineThrottle">
            <summary>
            Gets the current maximum ducted engine throttle.
            </summary>
            <value>
            The current maximum ducted engine throttle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.IsAircraftVtolCapable">
            <summary>
            Gets a value indicating whether this instance is aircraft VTOL capable.
            </summary>
            <value>
            <c>true</c> if this instance is aircraft VTOL capable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.ReactionControlNozzleCount">
            <summary>
            Gets the reaction control nozzle count.
            </summary>
            <value>
            The reaction control nozzle count.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.VtolEngineCount">
            <summary>
            Gets the VTOL engine count.
            </summary>
            <value>
            The VTOL engine count.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.VtolNozzleCount">
            <summary>
            Gets the VTOL nozzle count.
            </summary>
            <value>
            The VTOL nozzle count.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.GetThrustInfo(System.Single@,UnityEngine.Vector3@)">
            <summary>
            Gets the thrust information.
            </summary>
            <param name="totalThrust">The total thrust.</param>
            <param name="weightedThrustVector">The weighted thrust vector.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.Initialize">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IVtolManagerScript.Refresh">
            <summary>
            Refreshes this instance.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface">
            <summary>
            Describes a control surface for a wing.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.ActivationGroup">
            <summary>
            Gets or sets the activation group tied to the control surface (or zero if none).
            </summary>
            <value>
            The activation group tied to the control surface (or zero if none).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.ActivationGroupLocksInput">
            <summary>
            Gets or sets a value indicating whether the activation group locks the current input when the group is disabled.
            </summary>
            <value>
            <c>true</c> if the activation group locks the current input when the group is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.AutoInvert">
            <summary>
            Gets a value indicating whether to automatically invert this control surface if the wing is inverted. This is useful
            for a control surface like the elevator, where it is more user friendly when the control surface automatically inverts when
            added to the opposite side of the aircraft.
            </summary>
            <value>
              <c>true</c> if it should automatically invert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.InputId">
            <summary>
            Gets or sets the input identifier.
            </summary>
            <value>
            The input identifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.Invert">
            <summary>
            Gets or sets a value indicating whether [invert].
            </summary>
            <value>
              <c>true</c> if [invert]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.MaxDeflectionDegree">
            <summary>
            Gets or sets the maximum deflection degree.
            </summary>
            <value>
            The maximum deflection degree.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.Trim">
            <summary>
            Gets or sets the trim setting for this control surface.
            </summary>
            <value>
            The trim setting.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface.GenerateXml">
            <summary>
            Generates the XElement to fully describe this object for serialization purposes.
            </summary>
            <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfacePhysics">
            <summary>
            The control surface physics script.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfacePhysics.AxisName">
            <summary>
            Gets or sets the name of the axis.
            </summary>
            <value>
            The name of the axis.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfacePhysics.ModifyWingGeometry(System.Int32,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)">
            <summary>
            Modifies the wing geometry.
            </summary>
            <param name="sectionIndex">Index of the section.</param>
            <param name="pointA">The point a.</param>
            <param name="pointB">The point b.</param>
            <param name="pointC">The point c.</param>
            <param name="pointD">The point d.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript">
            <summary>
            Script for control surface that is attached to a wing.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.AircraftControls">
            <summary>
            Gets the aircraft controls.
            </summary>
            <value>
            The aircraft controls.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
            <value>
            The angle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.ControlSurface">
            <summary>
            Gets or sets the control surface.
            </summary>
            <value>
            The control surface.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.ControlSurfacePhysics">
            <summary>
            Gets or sets the control surface physics.
            </summary>
            <value>
            The control surface physics.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.Damaged">
            <summary>
            Gets or sets a value indicating whether this ControlSurfaceScript is damaged.
            </summary>
            <value>
              <c>true</c> if damaged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.HingeAxis">
            <summary>
            Gets or sets the hinge axis.
            </summary>
            <value>
            The hinge axis.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.Mesh">
            <summary>
            Gets or sets the mesh.
            </summary>
            <value>
            The mesh.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.MeshRenderer">
            <summary>
            Gets the mesh renderer.
            </summary>
            <value>
            The mesh renderer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.WingScript">
            <summary>
            Gets or sets the wing script.
            </summary>
            <value>
            The wing script.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.CreateComponents">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript.Initialize(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Boolean)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="part">The part.</param>
            <param name="createPhysics">if set to <c>true</c> [create physics].</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine">
            <summary>
            Engine modifier.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.AlphaTiedToThrottle">
            <summary>
            Gets a value indicating whether [alpha tied to throttle].
            </summary>
            <value>
            <c>true</c> if [alpha tied to throttle]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.DuctedThrust">
            <summary>
            Gets or sets a value indicating whether this engine uses ducted thrust.
            </summary>
            <value>
              <c>true</c> if [ducted thrust]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.EngineType">
            <summary>
            Gets the type of the engine.
            </summary>
            <value>
            The type of the engine.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.ExhaustScale">
            <summary>
            Gets the exhaust scale.
            </summary>
            <value>
            The exhaust scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.ExhaustStartColorOverridePrimary">
            <summary>
            Gets or sets the exhaust start color override primary.
            </summary>
            <value>
            The exhaust start color override primary.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.ExhaustStartColorOverrideSecondary">
            <summary>
            Gets or sets the exhaust start color override secondary.
            </summary>
            <value>
            The exhaust start color override secondary.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.FuelConsumptionRate">
            <summary>
            Gets or sets the fuel consumption rate in liters per second.
            </summary>
            <value>
            The fuel consumption rate.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.Power">
            <summary>
            Gets or sets the power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.PowerMultiplier">
            <summary>
            Gets the power multiplier.
            </summary>
            <value>
            The power multiplier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.RequiredAirIntake">
            <summary>
            Gets the air intake requirement for this engine. Only applies to jet engines.
            </summary>
            <value>
            The air intake requirement.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.SoundOverride">
            <summary>
            Gets the sound override.
            </summary>
            <value>
            The sound override.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngine.ThrottleResponse">
            <summary>
            Gets the throttle response, which defines how quickly the engines throttle can change to match the aircraft's throttle.
            This is measured in percentage per second, so 0.25 would mean that the engine's throttle increases a max of 25% per second.
            </summary>
            <value>
            The throttle response.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript">
            <summary>
            Base class for engine scripts.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.CenterOfThrust">
            <summary>
            Gets or sets the center of thrust.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.Engine">
            <summary>
            Gets or sets the engine.
            </summary>
            <value>
            The engine.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.EngineDestroyed">
            <summary>
            Gets or sets a value indicating whether the engine has been destroyed.
            </summary>
            <value>
              <c>true</c> if the engine has been destroyed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.EngineThrottle">
            <summary>
            Gets or sets the current throttle the engine is getting. If there is no fuel, then the engine throttle will be zero.
            </summary>
            <value>
            The engine throttle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.EngineThrottleFunctionalHealth">
            <summary>
            Gets or sets the engine throttle functional health.
            </summary>
            <value>
            The engine throttle functional health.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.ThrottleInput">
            <summary>
            Gets the throttle input controller
            </summary>
            <value>
            The throttle input.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IEngineScript.AddForceAndTorque(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Adds the force and torque for the engine.
            </summary>
            <param name="force">The force to add.</param>
            <param name="position">The position at which to add the force.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTank">
            <summary>
            Fuel tank modifier.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTank.Capacity">
            <summary>
            Gets or sets the maximum fuel capacity of the tank in liters.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTank.Fuel">
            <summary>
            Gets or sets the amount of fuel left in the tank in liters.
            </summary>
            <value>
            The fuel.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTankScript">
            <summary>
            Script for controlling a fuel tank.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTankScript.FuelLeak">
            <summary>
            Gets the fuel leak amount (if any).
            </summary>
            <value>
            The fuel leak amount (if any).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTankScript.FuelTank">
            <summary>
            Gets or sets the fuel tank.
            </summary>
            <value>
            The fuel tank.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript">
            <summary>
            An interface for modifier scripts.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.PartModifier">
            <summary>
            Gets or sets the part modifier.
            </summary>
            <value>
            The part modifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.PartScript">
            <summary>
            Gets the part script.
            </summary>
            <value>
            The part script.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnCollision(UnityEngine.Collision,UnityEngine.ContactPoint)">
            <summary>
            Called when a collision occurs for the rigid body associated with this part.
            </summary>
            <param name="collision">The collision.</param>
            <param name="contactPoint">The contact point of the collision for this part.</param>
            <returns>
            A value indicating whether or not this part has handled the collision.
            If <c>true</c>, the default collision actions will not be taken by the body script.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnConnectedToPart(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPart,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Called when this part is connected to another part in the designer.
            </summary>
            <param name="thisAttachPoint">The attach point on this part that has been connected.</param>
            <param name="targetPart">The part that has been connected to.</param>
            <param name="targetAttachPoint">The attach point on the other part that has been connected to.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnDamaged(System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when a part sustains damage.
            </summary>
            <param name="damage">The damage amount.</param>
            <param name="position">The position of the bullet impact.</param>
            <param name="direction">The direction of the bullet impact.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnDamageLevelIncreased(Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when the damage level for the part has increased.
            If a single damage event occurs which causes the damage level to increase more than once,
            this will be called once for each damage level between the original and the new (including the new level).
            </summary>
            <param name="level">The new damage level.</param>
            <param name="lastDamage">The amount of the last damage.</param>
            <param name="lastDamagePosition">The position of the last damage.</param>
            <param name="lastDamageDirection">The direction of the last damage .</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnEnterWater">
            <summary>
            Called when the part has entered water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnExitWater">
            <summary>
            Called when the part has exited water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnExplosiveForceApplied(System.Single,UnityEngine.Vector3)">
            <summary>
            Called when explosive force applied to the part.
            </summary>
            <param name="force">The amount of the force.</param>
            <param name="forceDirection">The direction of the force.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnMirrored">
            <summary>
            Called when the part is mirrored in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.OnPreDisable(System.Int32)">
            <summary>
            Called when the script is about to be disabled.
            </summary>
            <param name="disableCondition">The disable condition.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.PartHasBeenPlacedInDesigner(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Called when the part the has been placed in the designer.
            </summary>
            <param name="attachPointToPreview">The attach point to preview.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.PreviewPartPlacement(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IAttachPoint)">
            <summary>
            Previews the part placement.
            </summary>
            <param name="myAttachPointBeingUsed">My attach point being used.</param>
            <param name="theirAttachPointToPreviewConnectionTo">Their attach point to preview connection to.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IModifierScript.RequestDisable(System.Boolean)">
            <summary>
            Called when the parent part script is about to be disabled...return false to cancel the disabling...
            </summary>
            <param name="explode">if set to <c>true</c> [explode].</param>
            <returns>True if the PartScript can be disabled, false if otherwise.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier">
            <summary>
            The base class interface for all part modifiers.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.CoM">
            <summary>
            Gets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.Id">
            <summary>
            Gets the identifier of the modifier.
            </summary>
            <value>
            The identifier of the modifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.Mass">
            <summary>
            Gets the extra mass for the part due to the modifier.
            </summary>
            <value>
            The extra mass for the part due to the modifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.Part">
            <summary>
            Gets the part.
            </summary>
            <value>
            The part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.StateElementName">
            <summary>
            Gets the name of the state element for this modifier.
            </summary>
            <value>
            The name of the state element for this modifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.UsedInPropMode">
            <summary>
            Gets a value indicating whether this modifier is used in 'prop mode'.
            </summary>
            <value>
              <c>true</c> if this modifier is used in 'prop mode'; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.GenerateStateXml">
            <summary>
            Generates the XElement to fully describe the state of this modifier for serialization purposes.
            </summary>
            <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.GetGenericDesignerPropertySliderValueLabel(System.String,System.Single)">
            <summary>
            Gets the label text for the value of a designer property's slider.
            </summary>
            <param name="propertyName">The name of the property for which to get the value label.</param>
            <param name="sliderValue">The slider value for which to get the label.</param>
            <returns>The label text representing the current value of the slider.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.GetGenericDesignerPropertySpinnerValueLabel(System.String,System.Single)">
            <summary>
            Gets the label text for the value of a designer property's spinner control.
            </summary>
            <param name="propertyName">The name of the property for which to get the value label.</param>
            <param name="spinnerValue">The spinner value for which to get the label.</param>
            <returns>The label text representing the current value of the spinner control.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.Initialize(UnityEngine.GameObject,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartCreationInfo,Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript)">
            <summary>
            Called when this part modifiers is being initialized as the part game object is being created.
            </summary>
            <param name="gameObject">The game object that has been created for the part.</param>
            <param name="partCreationInfo">The part creation information.</param>
            <param name="aircraftScript">The aircraft script.</param>
            <returns>The created modifier script, or null if it was not created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.OnGenericDesignerPropertyChanged(System.String,System.String)">
            <summary>
            Called when a property is changed in the designer.
            </summary>
            <param name="propertyName">The name of the property that was changed.</param>
            <param name="value">The new property value.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IPartModifier.RestoreFromState(System.Xml.Linq.XElement)">
            <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
            <param name="stateElement">The state element from which to restore.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing">
            <summary>
            Describes a Wing and takes care of either building a Wing from XML, GameObject, or required parameters.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.Airfoil">
            <summary>
            Gets or sets the airfoil.
            </summary>
            <value>
            The airfoil.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.AllowControlSurfaces">
            <summary>
            Gets or sets a value indicating whether [allow control surfaces].
            </summary>
            <value>
            <c>true</c> if [allow control surfaces]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.AngleOfAttack">
            <summary>
            Gets or sets the angle of attack.
            </summary>
            <value>
            The angle of attack.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.BaseChord">
            <summary>
            Gets the base chord.
            </summary>
            <value>
            The base chord.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.ControlSurfaces">
            <summary>
            Gets the control surfaces.
            </summary>
            <value>
            The control surfaces.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.Density">
            <summary>
            Gets the density of the wing.
            </summary>
            <value>
            The density.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.FuelPercentage">
            <summary>
            Gets or sets the fuel percentage, which is the percentage of total available wing used to store fuel.
            </summary>
            <value>
            The fuel percentage.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.HingeDistanceFromTrailingEdge">
            <summary>
            Gets or sets the hinge distance from trailing edge.
            </summary>
            <value>
            The hinge distance from trailing edge.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.Inverted">
            <summary>
            Gets or sets a value indicating whether the wing is inverted (i.e. - upside down), which means its airfoil and mesh will be flipped.
            </summary>
            <value>
              <c>true</c> if inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.MinSectionLength">
            <summary>
            Gets or sets the minimum length of a section, which is used to determine how many simulation sections are used
            in the wing physics. A larger value here will result in less sections, which means faster performance but potentially
            less accurate physics.
            </summary>
            <value>
            The minimum length of the section.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.RootLeadingOffset">
            <summary>
            Gets or sets the root leading offset.
            </summary>
            <value>
            The root leading offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.RootTrailingOffset">
            <summary>
            Gets or sets the root trailing offset.
            </summary>
            <value>
            The root trailing offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.TipChord">
            <summary>
            Gets the tip chord.
            </summary>
            <value>
            The tip chord.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.TipLeadingOffset">
            <summary>
            Gets or sets the tip leading offset.
            </summary>
            <value>
            The tip leading offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.TipPosition">
            <summary>
            Gets or sets the tip position.
            </summary>
            <value>
            The tip position.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.TipTrailingOffset">
            <summary>
            Gets or sets the tip trailing offset.
            </summary>
            <value>
            The tip trailing offset.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.WingArea">
            <summary>
            Gets the wing area.
            </summary>
            <value>
            The wing area.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.WingPhysicsEnabled">
            <summary>
            Gets or sets a value indicating whether [enabled].
            </summary>
            <value>
              <c>true</c> if [enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWing.WingSpan">
            <summary>
            Gets the wing span.
            </summary>
            <value>
            The wing span.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics">
            <summary>
            A script used to simulate wing physics.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.AerodynamicCenterLocalSpace">
            <summary>
            Gets the aerodynamic center in local space.
            </summary>
            <value>
            The aerodynamic center in local space.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.AerodynamicCenterWorldSpace">
            <summary>
            Gets the aerodynamic center in world space.
            </summary>
            <value>
            The aerodynamic center in world space.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.DragScale">
            <summary>
            Gets or sets the drag scale.
            </summary>
            <value>
            The drag scale.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.LiftForceMagnitude">
            <summary>
            Gets or sets the lift force magnitude.
            </summary>
            <value>
            The lift force magnitude.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.RigidBodyToActUpon">
            <summary>
            Gets or sets the rigid body to act upon.
            </summary>
            <value>
            The rigid body to act upon.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.SimulateRealtime">
            <summary>
            Gets or sets a value indicating whether the wing should be simulated in real time.
            </summary>
            <value>
              <c>true</c> if the wing should be simulated in real time; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.Underwater">
            <summary>
            Gets a value indicating whether this Wing is underwater.
            </summary>
            <value>
              <c>true</c> if underwater; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.PrecalculateSections">
            <summary>
            Initializes the wing by pre-computing a bunch of information that is used by the fixed update.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingPhysics.Simulate(System.Boolean)">
            <summary>
            Performs a physics update on the wing.
            </summary>
            <param name="applyForces">If set to <c>true</c>, forces will be applied to the wing.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript">
            <summary>
            Script for controlling a wing.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingUpdated">
            <summary>
            Occurs when the wing is updated.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.AngleOfAttack">
            <summary>
            Gets or sets the angle of attack.
            </summary>
            <value>
            The angle of attack.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.ControlSurfaces">
            <summary>
            Gets the control surfaces. Control surfaces must be ordered from base to tip.
            </summary>
            <value>
            The control surfaces.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.DihedralAngle">
            <summary>
            Gets the dihedral angle in degrees.
            </summary>
            <value>
            The dihedral angle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.IsWingTipAttached">
            <summary>
            Gets a value indicating whether [is wing tip attached].
            </summary>
            <value>
            <c>true</c> if [is wing tip attached]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.JointCreakAudioSource">
            <summary>
            Gets or sets the joint creak audio source.
            </summary>
            <value>
            The joint creak audio source.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.MaxFuelCapacity">
            <summary>
            Gets the maximum fuel capacity (liters) possible for this wing given its total area.
            </summary>
            <value>
            The maximum fuel capacity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.Mesh">
            <summary>
            Gets or sets the mesh.
            </summary>
            <value>
            The mesh.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.RootLeadingEdge">
            <summary>
            Gets the root leading edge.
            </summary>
            <value>
            The root leading edge.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.RootTrailingEdge">
            <summary>
            Gets the root trailing edge.
            </summary>
            <value>
            The root trailing edge.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.SimulationSectionCount">
            <summary>
            Gets the simulation section count.
            </summary>
            <value>
            The simulation section count.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.TipLeadingEdge">
            <summary>
            Gets the tip leading edge.
            </summary>
            <value>
            The tip leading edge.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.TipTrailingEdge">
            <summary>
            Gets the tip trailing edge.
            </summary>
            <value>
            The tip trailing edge.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.Wing">
            <summary>
            Gets or sets the wing.
            </summary>
            <value>
            The wing.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingAreaProjectedOnGround">
            <summary>
            Gets the wing area projected on ground, used in the CoL calculation.
            </summary>
            <value>
            The wing area projected on ground.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingPhysicsEnabled">
            <summary>
            Gets or sets a value indicating whether wing physics are enabled.
            </summary>
            <value>
              <c>true</c> if wing physics are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingPhysicsScript">
            <summary>
            Gets or sets the wing physics script.
            </summary>
            <value>
            The wing physics script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingRoot">
            <summary>
            Gets or sets the wing root.
            </summary>
            <value>
            The wing root.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.WingSweep">
            <summary>
            Gets the wing sweep.
            </summary>
            <value>
            The wing sweep.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.AddControlSurface(System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Adds the control surface to the wing.
            </summary>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
            <param name="inputId">The input identifier.</param>
            <param name="maxDeflectionDegree">The maximum deflection degree.</param>
            <param name="invert">if set to <c>true</c> [invert].</param>
            <returns>
            The new control surface script.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.CreateControlSurfaceScript(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurface,System.Boolean)">
            <summary>
            Creates the script for the control surface.
            </summary>
            <param name="controlSurface">The control surface.</param>
            <param name="createPhysics">if set to <c>true</c> [create physics].</param>
            <returns>
            The control surface script.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.DeleteControlSurface(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IControlSurfaceScript)">
            <summary>
            Deletes the control surface.
            </summary>
            <param name="controlSurfaceScript">The control surface script.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.DrawCenterOfLiftOnWing">
            <summary>
            Draws the center of lift on wing.
            </summary>
            <returns>The position of the center of lift gizmo.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.DrawCenterOfLiftOnWing(System.Single@,Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript)">
            <summary>
            Draws the center of lift on wing.
            </summary>
            <param name="magnitude">The magnitude.</param>
            <param name="alternateAircraftToDrawOn">The alternate aircraft to draw on.</param>
            <returns>The position of the center of lift gizmo.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.FindPylonPosition(UnityEngine.Vector3)">
            <summary>
            Finds the pylon position.
            </summary>
            <param name="worldPosition">The world position.</param>
            <returns>The pylon position in world coordinates.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.Initialize(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript,System.Boolean)">
            <summary>
            Initializes the part and creates physics if necessary.
            </summary>
            <param name="part">The part.</param>
            <param name="createPhysics">if set to <c>true</c> [create physics].</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.SnapWingPoint(UnityEngine.Vector3,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType)">
            <summary>
            Snaps the wing point.
            </summary>
            <param name="position">The position.</param>
            <param name="wingPointType">Type of the wing point.</param>
            <returns>The snapped wing position.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.SortControlSurfaces">
            <summary>
            Sorts the control surfaces, ordered by distance from the base of the wing, ascending.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.UpdateFuel">
            <summary>
            Updates the fuel capacity.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.UpdateWingPoint(UnityEngine.Vector3,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType,System.Boolean)">
            <summary>
            Updates the wing point.
            </summary>
            <param name="position">The position.</param>
            <param name="wingPointType">Type of the wing point.</param>
            <param name="snapPosition">if set to <c>true</c> then snap position to the grid.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IWingScript.UpdateWingShape">
            <summary>
            Updates the wing shape.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.TrimType">
            <summary>
            The trim options.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.TrimType.Off">
            <summary>
            The control surface does not respond to trim.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.TrimType.On">
            <summary>
            The control surface responds to trim.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.TrimType.Inverted">
            <summary>
            The control surface responds to trim, but inverts it (i.e.: 0.5 becomes -0.5).
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs">
            <summary>
            The event arguments for an event that occurs when a bomb explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs.BlastDirection">
            <summary>
            Gets the blast direction of the explosion.
            </summary>
            <value>
            The blast direction of the explosion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs.Bomb">
            <summary>
            Gets the bomb that exploded.
            </summary>
            <value>
            The bomb that exploded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs.ExplosiveForce">
            <summary>
            Gets the explosive force script.
            </summary>
            <value>
            The explosive force script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs.ImpactType">
            <summary>
            Gets the type of the impact.
            </summary>
            <value>
            The type of the impact.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IBombExplodedEventArgs.Position">
            <summary>
            Gets the position of the bomb when it exploded.
            </summary>
            <value>
            The position of the bomb when it exploded.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs">
            <summary>
            The event arguments for an event that occurs when a missile explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs.BlastDirection">
            <summary>
            Gets the blast direction of the explosion.
            </summary>
            <value>
            The blast direction of the explosion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs.ExplosiveForce">
            <summary>
            Gets the explosive force script.
            </summary>
            <value>
            The explosive force script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs.ImpactType">
            <summary>
            Gets the type of the impact.
            </summary>
            <value>
            The type of the impact.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs.Missile">
            <summary>
            Gets the missile that exploded.
            </summary>
            <value>
            The missile that exploded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IMissileExplodedEventArgs.Position">
            <summary>
            Gets the position of the missile when it exploded.
            </summary>
            <value>
            The position of the missile when it exploded.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IRocketExplodedEventArgs">
            <summary>
            The event arguments for an event that occurs when a rocket explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IRocketExplodedEventArgs.BlastDirection">
            <summary>
            Gets the blast direction of the explosion.
            </summary>
            <value>
            The blast direction of the explosion.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IRocketExplodedEventArgs.ExplosiveForce">
            <summary>
            Gets the explosive force script.
            </summary>
            <value>
            The explosive force script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IRocketExplodedEventArgs.Position">
            <summary>
            Gets the position of the rocket when it exploded.
            </summary>
            <value>
            The position of the rocket when it exploded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.Events.IRocketExplodedEventArgs.Rocket">
            <summary>
            Gets the rocket that exploded.
            </summary>
            <value>
            The rocket that exploded.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IBombScript">
            <summary>
            The bomb script.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IBombScript.Exploded">
            <summary>
            An event that is thrown when the bomb explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IBombScript.LaunchedViaDetacher">
            <summary>
            Gets or sets a value indicating whether the bomb was launched via a detacher.
            </summary>
            <value>
              <c>true</c> if the bomb was launched via a detacher; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript">
            <summary>
            The missile script.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.Exploded">
            <summary>
            An event that is thrown when the missile explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.IsLocked">
            <summary>
            Gets a value indicating whether this missile is currently locked on a target and actively tracking it.
            </summary>
            <value>
              <c>true</c> this missile is currently locked on a target and actively tracking it; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.LaunchedViaDetacher">
            <summary>
            Gets or sets a value indicating whether the bomb was launched via a detacher.
            </summary>
            <value>
              <c>true</c> if the bomb was launched via a detacher; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.LockTime">
            <summary>
            Gets the amount of time required to acquire a lock.
            </summary>
            <value>
            The amount of time required to acquire a lock.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.MaxRange">
            <summary>
            Gets the maximum range of the missile.
            </summary>
            <value>
            The maximum range of the missile.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.MaxTargetingAngle">
            <summary>
            Gets the maximum targeting angle for the missile.
            </summary>
            <value>
            The maximum targeting angle for the missile.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.MinRange">
            <summary>
            Gets the minimum range of the missile.
            </summary>
            <value>
            The minimum range of the missile.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript.OutOfFuel">
            <summary>
            Gets a value indicating whether the missile is out of fuel.
            </summary>
            <value>
              <c>true</c> if the missile is out of fuel; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript">
            <summary>
            Script for a rocket.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.Exploded">
            <summary>
            An event that is thrown when the rocket explodes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.BurnTime">
            <summary>
            Gets or sets the burn time.
            </summary>
            <value>
            The burn time.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.HasExploded">
            <summary>
            Gets a value indicating whether this rocket has exploded.
            </summary>
            <value>
              <c>true</c> if the rocket has exploded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.IsLaunched">
            <summary>
            Gets a value indicating whether the rocket is launched.
            </summary>
            <value>
              <c>true</c> if the rocket is launched; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.Owner">
            <summary>
            Gets or sets the owner of the rocket.
            </summary>
            <value>
            The owner of the rocket.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.Rigidbody">
            <summary>
            Gets the rigid body or the rocket.
            </summary>
            <value>
            The rigid body of the rocket.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.SelfDestructTimer">
            <summary>
            Gets the self destruct timer.
            </summary>
            <value>
            The flight time before this rocket automatically explodes
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.Explode">
            <summary>
            Explodes this rocket.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript.Launch(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Collider)">
            <summary>
            Launches this rocket.
            </summary>
            <param name="velocity">The velocity.</param>
            <param name="angularVelocity">The angular velocity.</param>
            <param name="partCollider">The part collider.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType">
            <summary>
            The types of points in the wing.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType.RootLeadingEdge">
            <summary>
            The root leading edge.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType.RootTrailingEdge">
            <summary>
            The root trailing edge.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType.TipLeadingEdge">
            <summary>
            The tip leading edge.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType.TipTrailingEdge">
            <summary>
            The tip trailing edge.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.WingPointType.TipPosition">
            <summary>
            The tip position.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme">
            <summary>
            The theme of an aircraft assembly.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme.Hidden">
            <summary>
            Gets or sets a value indicating whether [hidden].
            </summary>
            <value>
              <c>true</c> if [hidden]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme.Materials">
            <summary>
            Gets the materials.
            </summary>
            <value>
            The materials.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme.PartDamageColor">
            <summary>
            Gets or sets the color for the part damage visualizer.
            </summary>
            <value>
            The color for the part damage visualizer.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.ITheme.GenerateXml">
            <summary>
            Generates the XML.
            </summary>
            <returns>The element.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft">
            <summary>
            Defines an aircraft for IO purposes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>
            The assembly.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.BoundsMinimum">
            <summary>
            Gets or sets the bounds minimum.
            </summary>
            <value>
            The bounds minimum.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.CurrentTheme">
            <summary>
            Gets or sets the current theme.
            </summary>
            <value>
            The current theme.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.CustomTheme">
            <summary>
            Gets or sets the custom theme.
            </summary>
            <value>
            The custom theme.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.DamageLimit">
            <summary>
            Gets or sets the maximum amount of damage that the aircraft can take before blowing up.
            </summary>
            <value>
            The maximum amount of damage that the aircraft can take before blowing up.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.DiffuseInertiaTensors">
            <summary>
            Gets or sets a value indicating whether to diffuse inertia tensors.
            </summary>
            <value>
              <c>true</c> if diffuse inertia tensors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.UseOldDragCalculation">
            <summary>
            Gets or sets a value indicating whether to use the old drag calculation.
            </summary>
            <value>
              <c>true</c> if [use old drag]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.XmlVersion">
            <summary>
            Gets or sets the version of the Aircraft's XML.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft.GenerateXml(System.Boolean)">
            <summary>
            Generates the XElement to fully describe this object for serialization purposes.
            </summary>
            <param name="createRigidBodyGroups">A value indicating whether rigid body groups should be created.</param>
            <returns>The XElement to fully describe this object for serialization purposes.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls">
            <summary>
            Manages inputs and provides values for all aircraft controls.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Brake">
            <summary>
            Gets or sets the brake.
            </summary>
            <value>
            The brake.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.CycleTargetingMode">
            <summary>
            Gets or sets a value indicating whether [cycle targeting mode].
            </summary>
            <value>
              <c>true</c> if [cycle targeting mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.FireGuns">
            <summary>
            Gets or sets a value indicating whether the fire guns control is activated.
            </summary>
            <value>
              <c>true</c> if fire guns control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.FireWeapons">
            <summary>
            Gets or sets a value indicating whether the fire weapons control is activated.
            </summary>
            <value>
              <c>true</c> if fire weapons control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.HasInputOverrides">
            <summary>
            Gets a value indicating whether this control system has input overrides.
            </summary>
            <value>
            <c>true</c> if this control system has input overrides; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.LandingGearDown">
            <summary>
            Gets or sets a value indicating whether the landing gear down control is activated.
            </summary>
            <value>
              <c>true</c> if landing gear down control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.LaunchCountermeasures">
            <summary>
            Gets or sets a value indicating whether the launch countermeasures input is activated.
            </summary>
            <value>
            <c>true</c> if the launch countermeasures input is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.NextTarget">
            <summary>
            Gets or sets a value indicating whether the next target button is pressed this frame.
            </summary>
            <value>
              <c>true</c> if [next target]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.NextWeapon">
            <summary>
            Gets or sets a value indicating whether the next weapon button is pressed this frame.
            </summary>
            <value>
              <c>true</c> if [next target]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Pitch">
            <summary>
            Gets or sets the pitch.
            </summary>
            <value>
            The pitch.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.PreviousTarget">
            <summary>
            Gets or sets a value indicating whether the previous target button is pressed this frame.
            </summary>
            <value>
              <c>true</c> if [next target]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.PreviousWeapon">
            <summary>
            Gets or sets a value indicating whether the previous weapon button is pressed this frame.
            </summary>
            <value>
              <c>true</c> if [next target]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Roll">
            <summary>
            Gets or sets the roll.
            </summary>
            <value>
            The roll.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.ShowInputStatusMessages">
            <summary>
            Gets a value indicating whether to show input status messages.
            </summary>
            <value>
              <c>true</c> if input status messages should be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Throttle">
            <summary>
            Gets or sets the throttle.
            </summary>
            <value>
            The throttle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.ThrottleIncrement">
            <summary>
            Gets or sets the throttle increment.
            </summary>
            <value>
            The throttle increment.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.ToggleActivationPanel">
            <summary>
            Gets or sets a value indicating whether [toggle activation panel].
            </summary>
            <value>
            <c>true</c> if [toggle activation panel]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Trim">
            <summary>
            Gets or sets the trim.
            </summary>
            <value>
            The trim.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.TrimIncrement">
            <summary>
            Gets or sets the trim increment.
            </summary>
            <value>
            The trim increment.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.TrimReset">
            <summary>
            Gets or sets a value indicating whether the reset trim input is active.
            </summary>
            <value>
              <c>true</c> if trim reset; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Vtol">
            <summary>
            Gets or sets the VTOL.
            </summary>
            <value>
            The VTOL.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.VtolIncrement">
            <summary>
            Gets or sets the VTOL increment.
            </summary>
            <value>
            The VTOL increment.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.Yaw">
            <summary>
            Gets or sets the yaw.
            </summary>
            <value>
            The yaw.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.ActivateGroup(System.Int32)">
            <summary>
            Activates the group.
            </summary>
            <param name="groupIndex">The index.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.DisableAllControls">
            <summary>
            Disables all controls via input overrides.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.GetActivationState(System.Int32)">
            <summary>
            Gets the state of the activation group.
            </summary>
            <param name="activationGroup">The activation group.</param>
            <returns>The activation state.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.GetAxisGetter(System.String,System.Single)">
            <summary>
            Gets a function for retrieving the current value of the specified axis.
            </summary>
            <param name="axisName">The Name of the axis.</param>
            <param name="booleanInputMinValue">The minimum value to be returned if the input is a boolean rather than an axis.</param>
            <returns>A function for retrieving the current value of the specified axis.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.GetOverrideInput(System.String)">
            <summary>
            Gets the override input (usually A.I.) which is adjusted for input sensitivity (control surface response time).
            </summary>
            <param name="inputAxis">The input axis to adjust for.</param>
            <returns>The override (aka, usually A.I.) input which is adjusted for input sensitivity (control surface response time).</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.RemoveInputOverrides">
            <summary>
            Removes all input overrides.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.SetInputOverride(Jundroo.SimplePlanes.ModTools.Input.IGameInput,System.Func{System.Nullable{System.Single}})">
            <summary>
            Overrides an input from using the configurable input system to a code-driven one...for things like AI controlled aircraft.
            </summary>
            <param name="input">The game input to override.</param>
            <param name="overrideFunction">The function which returns the overridden input value.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftControls.SetLandingGearDown(System.Boolean)">
            <summary>
            Sets the landing gear down state.
            </summary>
            <param name="value">If set to <c>true</c> the landing gear should be set to down.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript">
            <summary>
            Base script for an aircraft.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AircraftLocationChanged">
            <summary>
            Occurs when the aircraft location is changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.OnAircraftDamaged">
            <summary>
            Occurs when aircraft is damaged.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.OnAircraftStructureChanged">
            <summary>
            Occurs when part deleted.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.OnPartEnteredWater">
            <summary>
            Occurs when a part has entered the water.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.OnPartExitedWater">
            <summary>
            Occurs when a part has exited the water.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Aircraft">
            <summary>
            Gets the aircraft.
            </summary>
            <value>
            The aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AirSpeed">
            <summary>
            Gets or sets the air speed.
            </summary>
            <value>
            The air speed.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Altitude">
            <summary>
            Gets the altitude in meters.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AltitudeAgl">
            <summary>
            Gets the altitude above ground level.
            </summary>
            <value>
            The altitude above ground level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AtmosphericDensityRatioAtCurrentAltitude">
            <summary>
            Gets the ratio of the current air density at the aircraft's altitude to sea level. For example,
            if the air density is half that of sea level, then this ratio will be 0.5.
            </summary>
            <value>
            The air density ratio.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Bodies">
            <summary>
            Gets the bodies.
            </summary>
            <value>
            The bodies.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.BreakLockProbability">
            <summary>
            Gets or sets the break lock probability.
            </summary>
            <value>
            The break lock probability.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.CenterOfMass">
            <summary>
            Gets the center of mass.
            </summary>
            <value>
            The center of mass.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Children">
            <summary>
            Gets the transform for the Children game object.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Controls">
            <summary>
            Gets the controls.
            </summary>
            <value>
            The controls.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.CriticalDamageThreshold">
            <summary>
            Gets or sets the critical damage threshold (percentage (0.0 to 1.0) of undamaged parts needed to stay above the critical damage threshold).
            </summary>
            <value>
            The critical damage threshold (percentage (0.0 to 1.0) of undamaged parts needed to stay above the critical damage threshold).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.CriticallyDamaged">
            <summary>
            Gets a value indicating whether the aircraft is critically damaged.
            </summary>
            <value>
              <c>true</c> if the aircraft is critically damaged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Damage">
            <summary>
            Gets or sets the amount of damage that the aircraft has taken.
            </summary>
            <value>
            The amount of damage that the aircraft has taken.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DamageEffects">
            <summary>
            Gets the class that manages damage effects for parts.
            </summary>
            <value>
            The class that manages damage effects for parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DamageVisualizerEnabled">
            <summary>
            Gets a value indicating whether the damage visualizer is enabled.
            </summary>
            <value>
              <c>true</c> if the damage visualizer is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DisableBombs">
            <summary>
            Gets or sets a value indicating whether bombs are disabled.
            </summary>
            <value>
              <c>true</c> if bombs are disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DisableGuns">
            <summary>
            Gets or sets a value indicating whether guns are disabled.
            </summary>
            <value>
              <c>true</c> if guns are disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DisableMissiles">
            <summary>
            Gets or sets a value indicating whether missiles are disabled.
            </summary>
            <value>
              <c>true</c> if missiles are disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DisableRockets">
            <summary>
            Gets or sets a value indicating whether rockets are disabled.
            </summary>
            <value>
              <c>true</c> if rockets are disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DrawAerodynamicCenter">
            <summary>
            Gets or sets a value indicating whether [draw aircraft center of lift].
            </summary>
            <value>
            <c>true</c> if [draw aircraft center of lift]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.DrawCenterOfMass">
            <summary>
            Gets or sets a value indicating whether [draw center of mass].
            </summary>
            <value>
              <c>true</c> if [draw center of mass]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Engines">
            <summary>
            Gets the engines.
            </summary>
            <value>
            The engines.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.EvadeLockProbability">
            <summary>
            Gets or sets the evade lock probability.
            </summary>
            <value>
            The evade lock probability.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Fuel">
            <summary>
            Gets the fuel in liters.
            </summary>
            <value>
            The fuel.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.FuelCapacity">
            <summary>
            Gets the total fuel capacity (in liters).
            </summary>
            <value>
            The fuel capacity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.GlobalPosition">
            <summary>
            Gets or sets the global position of the main cockpit, taking in to account the floating origin.
            </summary>
            <value>
            The global position of the main cockpit, taking in to account the floating origin.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.HasInputOverrides">
            <summary>
            Gets a value indicating whether this control system has input overrides.
            </summary>
            <value>
            <c>true</c> if this control system has input overrides; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.InitialFuel">
            <summary>
            Gets or sets the initial fuel.
            </summary>
            <value>
            The initial fuel.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.InitialFuelCapacity">
            <summary>
            Gets the initial fuel capacity in liters.
            </summary>
            <value>
            The initial fuel capacity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.InitiallyDisconnectedParts">
            <summary>
            Gets the initially disconnected parts.
            </summary>
            <value>
            The initially disconnected parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.InstrumentData">
            <summary>
            Gets the instrument data.
            </summary>
            <value>
            The instrument data.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.IRSignature">
            <summary>
            Gets the infrared signature of this aircraft
            </summary>
            <value>
            The infrared signature.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.IsNonFlyableAircraft">
            <summary>
            Gets or sets a value indicating whether this instance is non flyable aircraft.
            </summary>
            <value>
            <c>true</c> if this instance is non flyable aircraft; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.MainCockpit">
            <summary>
            Gets or sets the main cockpit. This part is the part that is used to determine airspeed, altitude, and the focus of the chase camera.
            </summary>
            <value>
            The main cockpit.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.OrientedCenterOfMassRigidBodies">
            <summary>
            Gets the center of mass rigid bodies.
            </summary>
            <value>
            The center of mass rigid bodies.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Parts">
            <summary>
            Gets the parts.
            </summary>
            <value>
            The parts.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Position">
            <summary>
            Gets or sets the current position of the main cockpit.
            </summary>
            <value>
            The position of the main cockpit.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.RadarSignature">
            <summary>
            Gets the radar signature of this aircraft
            </summary>
            <value>
            The radar signature.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.RequiresTrimSlider">
            <summary>
            Gets a value indicating whether this airplane needs the trim slider visible.
            </summary>
            <value>
              <c>true</c> if [requires trim slider]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.RequiresVtolSlider">
            <summary>
            Gets a value indicating whether this airplane needs the VTOL slider visible.
            </summary>
            <value>
              <c>true</c> if [requires VTOL slider]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.RigidBodyGroups">
            <summary>
            Gets the rigid body groups.
            </summary>
            <value>
            The rigid body groups.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Rotation">
            <summary>
            Gets or sets the rotation of the aircraft.
            </summary>
            <value>
            The rotation of the aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.TargetingSystem">
            <summary>
            Gets the targeting system.
            </summary>
            <value>
            The targeting system.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Theme">
            <summary>
            Gets the theme.
            </summary>
            <value>
            The theme.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.TotalSignature">
            <summary>
            Gets the total signature (radar+infrared)
            </summary>
            <value>
            The total signature (radar+infrared)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.TotalSignatureNormalized">
            <summary>
            Gets the total signature normalized.
            </summary>
            <value>
            The total signature normalized.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Velocity">
            <summary>
            Gets the aircraft's velocity.
            </summary>
            <value>
            The aircraft's velocity.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.VtolManagerScript">
            <summary>
            Gets the VTOL manager script.
            </summary>
            <value>
            The VTOL manager script.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.WindAudio">
            <summary>
            Gets the wind audio.
            </summary>
            <value>
            The wind audio.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.WindVelocity">
            <summary>
            Gets or sets the wind speed.
            </summary>
            <value>
            The wind speed.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Wings">
            <summary>
            Gets the wings.
            </summary>
            <value>
            The wings.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.WorldRigidBodies">
            <summary>
            Gets the list of rigid bodies in the world that are associated with the aircraft but not part of the aircraft game object.
            </summary>
            <value>
            The list of rigid bodies in the world that are associated with the aircraft but not part of the aircraft game object.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AircraftDamaged(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Aircrafts when the aircraft has been damaged.
            </summary>
            <param name="partScript">The part that was damaged.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AircraftRepositioned">
            <summary>
            Called when the aircraft is repositioned.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.AircraftStructureChanged">
            <summary>
            Called when the aircraft structure has changed.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.CalculateBounds">
            <summary>
            Calculates the bounds.
            </summary>
            <returns>The aircraft bounds.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.CalculateRadarSignature">
            <summary>
            Calculates the radar signature
            </summary>
            <returns>The radar signature</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.GetAerodynamicCenter">
            <summary>
            Gets the center of lift.
            </summary>
            <returns>The center of lift.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.GetPartById(System.Int32)">
            <summary>
            Gets the part by identifier.
            </summary>
            <param name="partId">The part identifier.</param>
            <returns>The part or null if it does not exist.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.GetStats(Jundroo.SimplePlanes.ModTools.Interfaces.AircraftStats)">
            <summary>
            Gets the stats.
            </summary>
            <param name="statsToGet">The stats to get.</param>
            <returns>The stat value.</returns>
            <exception cref="T:System.Exception">Aircraft statistic not found.</exception>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.HandleExplosiveBlast(System.Collections.Generic.List{Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript},System.Single,System.Single,System.Single,UnityEngine.Vector3,Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript,System.Collections.Generic.List{Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript})">
            <summary>
            Handles an explosive blast's effect on the aircraft.
            </summary>
            <param name="aircraftParts">The aircraft parts affected by the explosive blast.</param>
            <param name="blastForce">The magnitude of the force of the explosive blast.</param>
            <param name="blastRadius">The radius of the explosive blast.</param>
            <param name="criticalBlastRadius">The critical blast radius (radius at which the full force of the blast is always applied).</param>
            <param name="blastOrigin">The origin point of the blast.</param>
            <param name="owner">The aircraft owner of the explosion (responsible party).</param>
            <param name="allAffectedAircraft">All of the aircraft affected by the explosive blast.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.Initialize(Jundroo.SimplePlanes.ModTools.Interfaces.IAircraft)">
            <summary>
            Initializes the specified aircraft.
            </summary>
            <param name="aircraft">The aircraft.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.LogDamageMessage(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Displays the damage message.
            </summary>
            <param name="partScript">The part script.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.LookAt(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Transforms the aircraft to "look at" a position, oriented around the given up vector.
            </summary>
            <param name="position">The position to look at.</param>
            <param name="up">The up vector to orient the reposition around.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.PartEnteredWater(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Parts the entered water.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.PartExitedWater(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Parts the exited water.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.PartHasBeenDisconnected(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IPartScript)">
            <summary>
            Parts the has been disconnected.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.PauseAircraft(System.Boolean)">
            <summary>
            Pauses the aircraft.
            </summary>
            <param name="disableColliders">If set to <c>true</c>, the aircraft's colliders will be disabled.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.RebuildAircraftStructure">
            <summary>
            Rebuilds the aircraft structure.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.SetFuel(System.Single)">
            <summary>
            Sets the fuel for the aircraft, equally distributing it amongst the fuel tanks in the aircraft.
            </summary>
            <param name="fuel">The fuel.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.SetVelocity(UnityEngine.Vector3,System.Boolean)">
            <summary>
            Sets the velocity.
            </summary>
            <param name="velocity">The velocity.</param>
            <param name="ignoreDisconnectedBodies">If set to <c>true</c> velocity for disconnected bodies will not be set.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.TogglePartDamageVisualizer">
            <summary>
            Toggles the part damage visualizer for all parts.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.UpdateInertiaTensorsWithDiffusion(System.Collections.Generic.List{Jundroo.SimplePlanes.ModTools.Interfaces.Parts.IBodyScript})">
            <summary>
            Updates the inertia tensors by diffusing their magnitudes among their neighbors, effectively blurring the
            the inertia tensor so there are no huge disparities between connected parts.
            </summary>
            <param name="bodyScripts">The body scripts.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.UseFuel(System.Single)">
            <summary>
            Called to indicate that an engine is using an amount of fuel this frame.
            </summary>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.IAircraftScript.UseFuel(System.Single,Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.IFuelTank)">
            <summary>
            Uses the specified amount of fuel only from the specified fuel tank.
            </summary>
            <param name="amount">The amount of fuel to use.</param>
            <param name="fuelTank">The fuel tank from which to use the fuel.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IBombFiredEventArgs">
            <summary>
            An event that is fired when a bomb is fired.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IBombFiredEventArgs.Bomb">
            <summary>
            Gets the bomb that was fired.
            </summary>
            <value>
            The bomb that was fired.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IMissileFiredEventArgs">
            <summary>
            An event that is fired when a missile is fired.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IMissileFiredEventArgs.Missile">
            <summary>
            Gets the missile that was fired.
            </summary>
            <value>
            The missile that was fired.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IRocketFiredEventArgs">
            <summary>
            An event that is fired when a rocket is fired.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IRocketFiredEventArgs.Rocket">
            <summary>
            Gets the rocket that was fired.
            </summary>
            <value>
            The rocket that was fired.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.ITargetChangedEventArgs">
            <summary>
            The event args for when the current target has changed.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.ITargetChangedEventArgs.Target">
            <summary>
            Gets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IWeaponFiredEventArgs">
            <summary>
            Event arguments for an event that is fired when a weapon is fired.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IWeaponFiredEventArgs.CurrentTarget">
            <summary>
            Gets the current target of the aircraft's targeting system when the weapon was fired (if any).
            </summary>
            <value>
            The current target of the aircraft's targeting system when the weapon was fired (if any).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.Events.IWeaponFiredEventArgs.FiredBy">
            <summary>
            Gets the aircraft that fired the weapon.
            </summary>
            <value>
            The aircraft that fired the weapon.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem">
            <summary>
            Targeting system for an aircraft.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.BombFired">
            <summary>
            Occurs when a bomb is fired.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.MissileFired">
            <summary>
            Occurs when a missile is fired.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.RocketFired">
            <summary>
            Occurs when a rocket is fired.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.TargetAdded">
            <summary>
            Occurs when a target is added.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.TargetChanged">
            <summary>
            Occurs when the current target has changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.TargetRemoved">
            <summary>
            Occurs when a target is removed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.WeaponsListUpdated">
            <summary>
            Occurs when weapons inventoried.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.Active">
            <summary>
            Gets or sets a value indicating whether [active].
            </summary>
            <value>
              <c>true</c> if [active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.AutoSelectOnTargetDeath">
            <summary>
            Gets or sets a value indicating whether to automatically select the next best target when the currently targeted one dies.
            </summary>
            <value>
            <c>true</c> if the targeting system should automatically select the next best target when the currently targeted one dies; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.CanFire">
            <summary>
            Gets a value indicating whether [can fire].
            </summary>
            <value>
              <c>true</c> if [can fire]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.ClosestLaunchedMissile">
            <summary>
            Gets the closest launched missile.
            </summary>
            <value>
            The closest launched missile.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.CurrentTarget">
            <summary>
            Gets or sets the current target.
            </summary>
            <value>
            The current target.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.CurrentTargetWarningState">
            <summary>
            Gets the warning state of the target currently being targeted by this aircraft.
            </summary>
            <value>
            The warning state of the current target.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.CurrentWarningState">
            <summary>
            Gets the state of the current warning.
            </summary>
            <value>
            The state of the current warning.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.FiredWeapons">
            <summary>
            Gets the weapons which have been fired.
            </summary>
            <value>
            The weapons which have been fired.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.GunsActive">
            <summary>
            Gets a value indicating whether [guns active].
            </summary>
            <value>
              <c>true</c> if [guns active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.IsPlayerTargetingSystem">
            <summary>
            Gets or sets a value indicating whether [is player targeting system].
            </summary>
            <value>
            <c>true</c> if [is player targeting system]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.SelectedWeaponSystem">
            <summary>
            Gets or sets the selected weapon.
            </summary>
            <value>
            The selected weapon.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.ShowGunReticule">
            <summary>
            Gets a value indicating whether [guns active].
            </summary>
            <value>
            <c>true</c> if [guns active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.TargetCount">
            <summary>
            Gets the target count.
            </summary>
            <value>
            The target count.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.TargetingAngle">
            <summary>
            Gets the targeting angle.
            </summary>
            <value>
            The targeting angle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.Targets">
            <summary>
            Gets the targets.
            </summary>
            <value>
            The targets.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.WeaponsOnboard">
            <summary>
            Gets a value indicating whether [weapons onboard].
            </summary>
            <value>
              <c>true</c> if [weapons onboard]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.WeaponSystems">
            <summary>
            Gets the weapon systems.
            </summary>
            <value>
            The weapon systems.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.AddTarget(Assets.Game.Weapons.ITarget)">
            <summary>
            Adds the target.
            </summary>
            <param name="target">The target to add.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.Alert(System.Boolean)">
            <summary>
            Raises a weapons systems alert.
            </summary>
            <param name="locked">Set to <c>true</c> if the alert is due to a weapon lock.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.AutoSelectWeapon">
            <summary>
            Selects the best weapon for the current target.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.InventoryWeapons">
            <summary>
            Looks at all weapons connected to the airplane and checks which are active.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.NextTarget">
            <summary>
            Selects the next available target (if any).
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.NextWeapon">
            <summary>
            Selects the next weapon.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.OnActivationGroupStateChanged(System.Int32)">
            <summary>
            Called when [activation group state changed].
            </summary>
            <param name="groupIndex">Index of the group.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.OnBombFired(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IBombScript,Assets.Game.Weapons.ITarget)">
            <summary>
            Called when a bomb is fired.
            </summary>
            <param name="bomb">The bomb that was fired.</param>
            <param name="target">The current target of the aircraft's targeting system when the weapon was fired (if any).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.OnMissileFired(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IMissileScript,Assets.Game.Weapons.ITarget)">
            <summary>
            Called when a missile is fired.
            </summary>
            <param name="missile">The missile that was fired.</param>
            <param name="target">The current target of the aircraft's targeting system when the weapon was fired (if any).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.OnRocketFired(Jundroo.SimplePlanes.ModTools.Interfaces.Parts.Modifiers.Weapons.IRocketScript,Assets.Game.Weapons.ITarget)">
            <summary>
            Called when a rocket is fired.
            </summary>
            <param name="rocket">The rocket that was fired.</param>
            <param name="target">The current target of the aircraft's targeting system when the weapon was fired (if any).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.PreviousTarget">
            <summary>
            Selects the previous available target (if any).
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.PreviousWeapon">
            <summary>
            Selects the previous weapon.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.RaiseTargetChangedEvent(Assets.Game.Weapons.ITarget)">
            <summary>
            Raises the target changed event.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.RemoveTarget(Assets.Game.Weapons.ITarget)">
            <summary>
            Removes the target.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.SelectWeaponSystem(System.String)">
            <summary>
            Selects the weapon system.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.ThreatFired(UnityEngine.Rigidbody)">
            <summary>
            Called as a warning when a threat (missile, guns, etc.) has been fired against this entity.
            </summary>
            <param name="threat">The threat.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.ITargetingSystem.Update(System.Single)">
            <summary>
            Updates this instance.
            </summary>
            <param name="deltaTime">The delta time.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart">
            <summary>
            Weapon part used by targeting system.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart.Distance">
            <summary>
            Gets or sets the distance.
            </summary>
            <value>
            The distance.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart.IsActive">
            <summary>
            Gets a value indicating whether [is active].
            </summary>
            <value>
              <c>true</c> if [is active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart.Part">
            <summary>
            Gets the part.
            </summary>
            <value>
            The part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart.Weapon">
            <summary>
            Gets the weapon.
            </summary>
            <value>
            The weapon.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem">
            <summary>
            System for handling a one or more weapons.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.Ammo">
            <summary>
            Gets the ammo.
            </summary>
            <value>
            The ammo.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.MinRange">
            <summary>
            Gets the minimum range this weapon can fire at.
            </summary>
            <value>
            The minimum range this weapon can fire at.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.ShowGunReticule">
            <summary>
            Gets or sets a value indicating whether [show gun reticule].
            </summary>
            <value>
              <c>true</c> if [show gun reticule]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.TargetingAngle">
            <summary>
            Gets the targeting angle.
            </summary>
            <value>
            The targeting angle.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.TargetingSystem">
            <summary>
            Gets or sets the targeting system.
            </summary>
            <value>
            The targeting system.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.WeaponPartName">
            <summary>
            Gets the name of the weapon part.
            </summary>
            <value>
            The name of the weapon part.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.Weapons">
            <summary>
            Gets the weapons.
            </summary>
            <value>
            The weapons.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.AddWeapon(Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponPart)">
            <summary>
            Adds the weapon.
            </summary>
            <param name="weaponPart">The weapon part.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.CanFire(Assets.Game.Weapons.ITarget)">
            <summary>
            Determines whether this instance can fire at the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns>True if the system can fire, otherwise false.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.Fire(Assets.Game.Weapons.ITarget)">
            <summary>
            Fires the weapon system at the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns>THe weapon that fired.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.GetSuitabilityForTarget(Assets.Game.Weapons.ITarget)">
            <summary>
            Gets the suitability for target. The higher the number the better it is for the target.
            </summary>
            <param name="target">The target.</param>
            <returns>Suitability of the weapon for the target.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.ProcessTarget(Assets.Game.Weapons.ITarget,System.Single)">
            <summary>
            Processes the target.
            </summary>
            <param name="target">The target.</param>
            <param name="deltaTime">The delta time.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.ShowMessage(System.String)">
            <summary>
            Shows the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.IWeaponSystem.Update(System.Single)">
            <summary>
            Updates the weapon system.
            </summary>
            <param name="deltaTime">The delta time.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.TargetingSystemMode">
            <summary>
            Targeting system mode.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.TargetingSystemMode.Off">
            <summary>
            The off mode.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.TargetingSystemMode.AirToAir">
            <summary>
            The air to air mode.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.TargetingSystemMode.AirToGround">
            <summary>
            The air to ground mode.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.WarningState">
            <summary>
            The warning states.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.WarningState.None">
            <summary>
            No warning state.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.WarningState.Acquiring">
            <summary>
            Currently being acquired.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Interfaces.Targeting.WarningState.Locked">
            <summary>
            Currently locked.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IPlayerAircraft">
            <summary>
            A service for interacting with the player's aircraft.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.AircraftDamaged">
            <summary>
            Occurs when the player's aircraft is damaged.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.AircraftStructureChanged">
            <summary>
            Occurs when the player's aircraft structure has changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.PartEnteredWater">
            <summary>
            Occurs when an aircraft part enters the water.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Airspeed">
            <summary>
            Gets or sets the current airspeed of the aircraft. (meters per second)
            </summary>
            <value>
            The current airspeed of the aircraft. (meters per second)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Altitude">
            <summary>
            Gets or sets the current altitude of the aircraft. (meters)
            </summary>
            <value>
            The current altitude of the aircraft. (meters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Controls">
            <summary>
            Gets the controls for the player's aircraft.
            </summary>
            <value>
            The controls for the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.CriticallyDamaged">
            <summary>
            Gets a value indicating whether the aircraft is critically damaged.
            </summary>
            <value>
              <c>true</c> if the aircraft is critically damaged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Fuel">
            <summary>
            Gets or sets the current fuel for the aircraft. (liters)
            </summary>
            <value>
            The current fuel for the aircraft. (liters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.FuelCapacity">
            <summary>
            Gets the fuel capacity for the aircraft. (liters)
            </summary>
            <value>
            The fuel capacity for the aircraft. (liters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.MainCockpitPosition">
            <summary>
            Gets or sets the position of the aircraft's main cockpit in the game world.
            </summary>
            <value>
            The position of the aircraft's main cockpit in the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.MainCockpitRotation">
            <summary>
            Gets or sets the rotation of the aircraft's main cockpit in the game world.
            </summary>
            <value>
            The rotation of the aircraft's main cockpit in the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Parts">
            <summary>
            Gets all parts' GameObjects in the current player-controlled aircraft.
            </summary>
            <value>
            All parts's GameObjects in the current player-controlled aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraft.Velocity">
            <summary>
            Gets or sets the current velocity of the aircraft. (meters per second)
            </summary>
            <value>
            The current velocity of the aircraft. (meters per second)
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls">
            <summary>
            A service for interacting with the player's aircraft controls.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Brake">
            <summary>
            Gets or sets the brake value (0.0 to 1.0).
            </summary>
            <value>
            The brake value (0.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.FireGuns">
            <summary>
            Gets or sets a value indicating whether the fire guns control is activated.
            </summary>
            <value>
              <c>true</c> if fire guns control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.FireWeapons">
            <summary>
            Gets or sets a value indicating whether the fire weapons control is activated.
            </summary>
            <value>
              <c>true</c> if fire weapons control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.LandingGearDown">
            <summary>
            Gets or sets a value indicating whether the landing gear down control is activated.
            </summary>
            <value>
              <c>true</c> if landing gear down control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.LaunchCountermeasures">
            <summary>
            Gets or sets a value indicating whether the launch countermeasures input is activated.
            </summary>
            <value>
            <c>true</c> if the launch countermeasures input is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Pitch">
            <summary>
            Gets or sets the pitch value (-1.0 to 1.0).
            </summary>
            <value>
            The pitch value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Roll">
            <summary>
            Gets or sets the roll value (-1.0 to 1.0).
            </summary>
            <value>
            The roll value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Throttle">
            <summary>
            Gets or sets the throttle value (0.0 to 1.0).
            </summary>
            <value>
            The throttle value (0.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.ThrottleIncrement">
            <summary>
            Gets or sets the throttle increment value (-1.0 to 1.0).
            </summary>
            <value>
            The throttle increment value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Trim">
            <summary>
            Gets or sets the trim value (-1.0 to 1.0).
            </summary>
            <value>
            The trim value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.TrimReset">
            <summary>
            Gets or sets a value indicating whether to reset the trim.
            </summary>
            <value>
              <c>true</c> if reset trim; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Vtol">
            <summary>
            Gets or sets the VTOL value (-1.0 to 1.0).
            </summary>
            <value>
            The VTOL value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.Yaw">
            <summary>
            Gets or sets the yaw value (-1.0 to 1.0).
            </summary>
            <value>
            The yaw value (-1.0 to 1.0).
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.GetActivationGroupState(System.Int32)">
            <summary>
            Gets the state of the activation group.
            </summary>
            <param name="groupNumber">The group number.</param>
            <returns><c>true</c> if the activation group is enabled, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls.ToggleActivationGroup(System.Int32)">
            <summary>
            Toggles the activation group.
            </summary>
            <param name="groupNumber">The group number to toggle.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject">
            <summary>
            An interface for a placeholder that loads an object based on the proximity to the player.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.AsynchronousLoadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is within, the object will be asynchronously loaded.
            </summary>
            <value>
            The squared distance which, if the player is within, the object will be asynchronously loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.IsEnabled">
            <summary>
            Gets a value indicating whether this instance is enabled.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.Name">
            <summary>
            Gets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.Position">
            <summary>
            Gets the position of the object when it is loaded.
            </summary>
            <value>
            The position of the object when it is loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.Rotation">
            <summary>
            Gets the rotation of the object when it is loaded.
            </summary>
            <value>
            The rotation of the object when it is loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.SupportsAsynchronousLoading">
            <summary>
            Gets a value indicating whether this object supports asynchronous loading.
            </summary>
            <value>
            <c>true</c> if this object supports asynchronous loading; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.SynchronousLoadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is within, the object will be synchronously loaded if an asynchronous load is not already taking place.
            </summary>
            <value>
            The squared distance which, if the player is within, the object will be synchronously loaded if an asynchronous load is not already taking place.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.Terrains">
            <summary>
            Gets the terrains in this proximity loaded object.
            </summary>
            <value>
            The terrains in this proximity loaded object.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.UnloadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is at or beyond, the object will be unloaded.
            </summary>
            <value>
            The squared distance which, if the player is at or beyond, the object will be unloaded.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.LoadAsynchronously">
            <summary>
            Loads the object asynchronously.
            </summary>
            <returns>The asynchronous load request.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.LoadSynchronously">
            <summary>
            Loads the object synchronously.
            </summary>
            <returns>The loaded object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.OnLoadCancelled">
            <summary>
            Called when the loading of an object is cancelled.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.OnObjectLoaded(UnityEngine.GameObject)">
            <summary>
            Called when the object has been loaded.
            </summary>
            <param name="obj">The object that was loaded.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.OnObjectLoading(System.Boolean)">
            <summary>
            Called when the object is loading.
            </summary>
            <param name="asynchronous">A value indicating whether or not the game object is being loaded asynchronously.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.OnObjectUnloaded">
            <summary>
            Called when the object has been unloaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.OnObjectUnloading(UnityEngine.GameObject)">
            <summary>
            Called right before the object is unloaded.
            </summary>
            <param name="obj">The object being unloaded.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoadedObject.UnloadObject(UnityEngine.GameObject)">
            <summary>
            Unloads the object.
            </summary>
            <param name="obj">The object to unload.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IProximityLoader">
            <summary>
            An interface for the proximity loader, which handles the loading of game objects based on proximity to the player.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoader.Register(Jundroo.SimplePlanes.ModTools.IProximityLoadedObject)">
            <summary>
            Registers the specified object.
            </summary>
            <param name="obj">The object to register.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IProximityLoader.Register(Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase)">
            <summary>
            Registers the specified object.
            </summary>
            <param name="obj">The object to register.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider">
            <summary>
            A service provider interface for mods to interact with SimplePlanes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.DevConsole">
            <summary>
            Gets the service for interacting with the developer console.
            </summary>
            <value>
            The service for interacting with the developer console.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.EnvironmentManager">
            <summary>
            Gets a service for interacting with the game world environment.
            </summary>
            <value>
            A service for interacting with the game world environment.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.GameCamera">
            <summary>
            Gets a service for interacting with the game camera.
            </summary>
            <value>
            The service for interacting with the game camera.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.GameInputs">
            <summary>
            Gets a service for interacting with the game inputs.
            </summary>
            <value>
            A service for interacting with the game inputs.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.GameState">
            <summary>
            Gets a service for interacting with the current game state.
            </summary>
            <value>
            A service for interacting with the current game state.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.GameWorld">
            <summary>
            Gets a service for interacting with the game world.
            </summary>
            <value>
            A service for interacting with the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.PlayerAircraft">
            <summary>
            Gets a service for interacting with the player's aircraft.
            </summary>
            <value>
            A service for interacting with the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ISimplePlanesModServiceProvider.UserInterface">
            <summary>
            Gets a service for interacting with the user interface.
            </summary>
            <value>
            A service for interacting with the user interface.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.FlightUIElementType">
            <summary>
            An enumeration defining the various in flight UI elements.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.FlightUIElementType.AnalogControls">
            <summary>
            The analog controls.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.FlightUIElementType.InstrumentPanel">
            <summary>
            The instrument panel.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.FlightUIElementType.TrimControls">
            <summary>
            The trim control slider.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.FlightUIElementType.VtolControls">
            <summary>
            The VTOL control slider.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IUserInterface">
            <summary>
            A service for interacting with the user interface.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IUserInterface.EventSystem">
            <summary>
            Gets the event system for the current scene.
            </summary>
            <value>
            The event system for the current scene.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IUserInterface.UIRootObject">
            <summary>
            Gets the root game object for all UI elements.
            </summary>
            <value>
            The root game object for all UI elements.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IUserInterface.HideUIElement(Jundroo.SimplePlanes.ModTools.FlightUIElementType)">
            <summary>
            Hides the specified UI element (if shown).
            </summary>
            <param name="elementType">Type of the element to hide.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IUserInterface.ShowUIElement(Jundroo.SimplePlanes.ModTools.FlightUIElementType)">
            <summary>
            Shows the specified UI element (if hidden).
            </summary>
            <param name="elementType">Type of the element to show.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IUserInterface.CreateDesignerButton(UnityEngine.Sprite,System.String,System.Action)">
            <summary>
            Creates a designer button. Should be called when the designer is loaded.
            </summary>
            <param name="sprite">A square sprite that will be shown on the button.</param>
            <param name="tooltip">The tooltip that is shown when the mouse hovers over the button.</param>
            <param name="callback">The callback that is run when the button is clicked.</param>
            <returns></returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Layers">
            <summary>
            Layers used in the game.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AircraftCollisionOnly">
            <summary>
            Layer that can only collide with the aircraft.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AircraftCollisionNone">
            <summary>
            Layer that cannot collide with the aircraft.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AircraftLayer">
            <summary>
            The aircraft layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AircraftInteractable">
            <summary>
            The aircraft interactable layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AttachPointLayerMaskAll">
            <summary>
            The layer mask that includes all attach point layers.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AttachPointLayerStart">
            <summary>
            The attach point layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AttachPointLayerWingSurface">
            <summary>
            The attach point layer for a wing surface.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AttachPointLayerSurface">
            <summary>
            The attach point layer for a surface, which shares the same layer as explosions, but this is only used in the
            designer, where explosions should not occur.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.AttachPointWing">
            <summary>
            The attach point that can only connect to a wing.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.CarrierDeck">
            <summary>
            The carrier deck layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.DefaultLayer">
            <summary>
            The default layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.ExplosionLayer">
            <summary>
            The explosion layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.TemporaryLayer">
            <summary>
            Game objects can be moved into the temporary layer to ensure they are isolated from any other game objects.
            Care must be taken to ensure the game objects are quickly moved out of the layer when they are finished being processed.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.TerrainLayer">
            <summary>
            The terrain layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.WaterLayer">
            <summary>
            The water layer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Layers.LayerNames">
            <summary>
            The map of layer values and their associated layer names.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.LevelSupportedPlatforms">
            <summary>
            An enumeration defining the platforms on which a level is supported.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.LevelSupportedPlatforms.All">
            <summary>
            All platforms support the level.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.LevelSupportedPlatforms.Standalone">
            <summary>
            Standalone platforms support the level (PC and OSX).
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.LevelSupportedPlatforms.Mobile">
            <summary>
            Standalone platforms support the level.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IInternalLevelServices">
            <summary>
            An interface providing services mod levels can call on internal levels.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.ElapsedTime">
            <summary>
            Gets the elapsed time of the timer in seconds.
            </summary>
            <value>
            The elapsed time of the timer in seconds.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.LevelTime">
            <summary>
            Gets the time (in seconds) that the user has spent in the level (while not paused).
            </summary>
            <value>
            The time (in seconds) that the user has spent in the level (while not paused).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.Map">
            <summary>
            Gets the current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </summary>
            <value>
            The current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.EndLevel(System.Boolean,System.String,System.Single)">
            <summary>
            Displays the end level dialog.
            </summary>
            <param name="playerWon"><c>true</c> if the player won the level, <c>false</c> otherwise.</param>
            <param name="messageText">The message text to display to the user.</param>
            <param name="score">The user's score for the level.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.ExitLevel">
            <summary>
            Immediately exists the level and returns to the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.PauseTimer(System.Boolean)">
            <summary>
            Changes the pause state of the timer to the specified value.
            </summary>
            <param name="pause">
            If set to <c>true</c>, the timer will be paused.
            If set to <c>false</c>, the timer will not be paused.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.ResetTimer">
            <summary>
            Resets the timer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IInternalLevelServices.ShowMessage(System.String,System.Single)">
            <summary>
            Shows the specified message to the player.
            </summary>
            <param name="message">The message to show.</param>
            <param name="lifetimeInSeconds">The lifetime of the message in seconds.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.IModLevelServices">
            <summary>
            An interface providing services hosted by a mod level to be called by the game internals.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.Description">
            <summary>
            Gets the description of the level.
            </summary>
            <value>
            The description of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.LevelName">
            <summary>
            Gets the name of the level.
            </summary>
            <value>
            The name of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.MapName">
            <summary>
            Gets the name of the map.
            </summary>
            <value>
            The name of the map.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.StartLocation">
            <summary>
            Gets the start location for the level.
            </summary>
            <value>
            The start location for the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.StartTimerWithThrottle">
            <summary>
            Gets a value indicating whether the timer should be started with the throttle.
            </summary>
            <value>
            <c>true</c> if the timer should be started with the throttle; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.TimerCountdown">
            <summary>
            Gets the value from which the timer should count down from to zero.
            </summary>
            <value>
            The value from which the timer should count down from to zero.
            If not set (0.0f), the timer will count up from zero.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.IModLevelServices.TimerEnabled">
            <summary>
            Gets a value indicating whether the timer is enabled.
            </summary>
            <value>
              <c>true</c> if the timer is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.Awake">
            <summary>
            Awake is called when the level is being loaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.FixedUpdate">
            <summary>
            This function is called every fixed frame rate frame.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.FormatScore(System.Single)">
            <summary>
            Creates the formatted score string to be displayed to the user when completing a level.
            </summary>
            <param name="score">The user's score.</param>
            <returns>The string to be displayed to the user.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.Initialize(Jundroo.SimplePlanes.ModTools.IInternalLevelServices)">
            <summary>
            Initializes the level.
            </summary>
            <param name="levelServices">The internal level services.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.OnLevelComplete">
            <summary>
            Called when the level is complete.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.OnPartEnterWater">
            <summary>
            Called when one of a player's aircraft parts enters the water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.Start">
            <summary>
            Start is called on the frame after the level is loaded before any update methods are called.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.IModLevelServices.Update">
            <summary>
            Update is called every frame.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Level">
            <summary>
            The base class for all mod levels.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Level._levelServices">
            <summary>
            The _level services
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Level" /> class.
            </summary>
            <param name="levelName">The name of the level.</param>
            <param name="mapName">The name of the map.
            This must exactly match the name of a default map or map in the current mod in order for it to be loaded.</param>
            <param name="levelDescription">The level description.</param>
            <exception cref="T:System.ArgumentException">Thrown if the level name, map name, or level description are <c>null</c> or empty.</exception>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.#ctor(System.String,System.String,System.String,Jundroo.SimplePlanes.ModTools.LevelSupportedPlatforms)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Level" /> class.
            </summary>
            <param name="levelName">The name of the level.</param>
            <param name="mapName">The name of the map.
            This must exactly match the name of a default map or map in the current mod in order for it to be loaded.</param>
            <param name="levelDescription">The level description.</param>
            <param name="supportedPlatform">The platforms that support the level.</param>
            <exception cref="T:System.ArgumentException">Thrown if the level name, map name, or level description are <c>null</c> or empty.</exception>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Description">
            <summary>
            Gets the description of the level.
            </summary>
            <value>
            The description of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#ElapsedTime">
            <summary>
            Gets the elapsed time of the timer in seconds.
            </summary>
            <value>
            The elapsed time of the timer in seconds.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#LevelTime">
            <summary>
            Gets the time (in seconds) that the user has spent in the level (while not paused).
            </summary>
            <value>
            The time (in seconds) that the user has spent in the level (while not paused).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#Map">
            <summary>
            Gets the current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </summary>
            <value>
            The current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#StartLocation">
            <summary>
            Gets the start location for the level.
            </summary>
            <value>
            The start location for the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#StartTimerWithThrottle">
            <summary>
            Gets a value indicating whether the timer should be started with the throttle.
            </summary>
            <value>
            <c>true</c> if the timer should be started with the throttle; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#TimerCountdown">
            <summary>
            Gets the value from which the timer should count down from to zero.
            </summary>
            <value>
            The value from which the timer should count down from to zero.
            If not set (0.0f), the timer will count up from zero.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#TimerEnabled">
            <summary>
            Gets a value indicating whether the timer is enabled.
            </summary>
            <value>
              <c>true</c> if the timer is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.LevelName">
            <summary>
            Gets the name of the level.
            </summary>
            <value>
            The name of the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.MapName">
            <summary>
            Gets the name of the map.
            </summary>
            <value>
            The name of the map.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.SupportedPlatform">
            <summary>
            Gets the supported platform(s) for the level.
            </summary>
            <value>
            The supported platform(s) for the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.ElapsedTime">
            <summary>
            Gets the elapsed time of the timer in seconds.
            </summary>
            <value>
            The elapsed time of the timer in seconds.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.LevelTime">
            <summary>
            Gets the time (in seconds) that the user has spent in the level (while not paused).
            </summary>
            <value>
            The time (in seconds) that the user has spent in the level (while not paused).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.Map">
            <summary>
            Gets the current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </summary>
            <value>
            The current map.
            This will be <c>null</c> if the current map is a built in map and not part of a mod.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.StartLocation">
            <summary>
            Gets the start location for the level.
            </summary>
            <value>
            The start location for the level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.StartTimerWithThrottle">
            <summary>
            Gets a value indicating whether the timer should be started with the throttle.
            </summary>
            <value>
            <c>true</c> if the timer should be started with the throttle; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.TimerCountdown">
            <summary>
            Gets the value from which the timer should count down from to zero.
            </summary>
            <value>
            The value from which the timer should count down from to zero.
            If not set (0.0f), the timer will count up from zero.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Level.TimerEnabled">
            <summary>
            Gets a value indicating whether the timer is enabled.
            </summary>
            <value>
              <c>true</c> if the timer is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#EndLevel(System.Boolean,System.String,System.Single)">
            <summary>
            Displays the end level dialog.
            </summary>
            <param name="playerWon"><c>true</c> if the player won the level, <c>false</c> otherwise.</param>
            <param name="messageText">The message text to display to the user.</param>
            <param name="score">The user's score for the level.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#ExitLevel">
            <summary>
            Immediately exists the level and returns to the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#PauseTimer(System.Boolean)">
            <summary>
            Changes the pause state of the timer to the specified value.
            </summary>
            <param name="pause">If set to <c>true</c>, the timer will be paused.
            If set to <c>false</c>, the timer will not be paused.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#ResetTimer">
            <summary>
            Resets the timer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IInternalLevelServices#ShowMessage(System.String,System.Single)">
            <summary>
            Shows the specified message to the player.
            </summary>
            <param name="message">The message to show.</param>
            <param name="lifetimeInSeconds">The lifetime of the message in seconds.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#Awake">
            <summary>
            Awake is called when the level is being loaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#FixedUpdate">
            <summary>
            This function is called every fixed frame rate frame.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#FormatScore(System.Single)">
            <summary>
            Creates the formatted score string to be displayed to the user when completing a level.
            </summary>
            <param name="score">The user's score.</param>
            <returns>
            The string to be displayed to the user.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#Initialize(Jundroo.SimplePlanes.ModTools.IInternalLevelServices)">
            <summary>
            Initializes the level.
            </summary>
            <param name="levelServices">The internal level services.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#OnLevelComplete">
            <summary>
            Called when the level is complete.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#OnPartEnterWater">
            <summary>
            Called when one of a player's aircraft parts enters the water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#Start">
            <summary>
            Start is called on the frame after the level is loaded before any update methods are called.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Jundroo#SimplePlanes#ModTools#IModLevelServices#Update">
            <summary>
            Update is called every frame.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Awake">
            <summary>
            Awake is called when the level is being loaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.EndLevel(System.Boolean,System.String,System.Single)">
            <summary>
            Displays the end level dialog.
            </summary>
            <param name="playerWon"><c>true</c> if the player won the level, <c>false</c> otherwise.</param>
            <param name="messageText">The message text to display to the user.</param>
            <param name="score">The user's score for the level.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.ExitLevel">
            <summary>
            Immediately exists the level and returns to the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.FixedUpdate">
            <summary>
            This function is called every fixed frame rate frame.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.FormatScore(System.Single)">
            <summary>
            Creates the formatted score string to be displayed to the user when completing a level.
            </summary>
            <param name="score">The user's score.</param>
            <returns>
            The string to be displayed to the user.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.OnLevelComplete">
            <summary>
            Called when the level is complete.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.OnPartEnterWater">
            <summary>
            Called when one of a player's aircraft parts enters the water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.PauseTimer(System.Boolean)">
            <summary>
            Changes the pause state of the timer to the specified value.
            </summary>
            <param name="pause">If set to <c>true</c>, the timer will be paused.
            If set to <c>false</c>, the timer will not be paused.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.ResetTimer">
            <summary>
            Resets the timer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.ShowMessage(System.String,System.Single)">
            <summary>
            Shows the specified message to the player.
            </summary>
            <param name="message">The message to show.</param>
            <param name="lifetimeInSeconds">The lifetime of the message in seconds.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Start">
            <summary>
            Start is called on the frame after the level is loaded before any update methods are called.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Level.Update">
            <summary>
            Update is called every frame.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.LevelStartLocation">
            <summary>
            An object representing a start location for a level.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.LevelStartLocation.InitialSpeed">
            <summary>
            Gets or sets the initial speed of the player's aircraft. (meters)
            </summary>
            <value>
            The initial speed of the player's aircraft. (meters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.LevelStartLocation.InitialThrottle">
            <summary>
            Gets or sets the initial throttle of the player's aircraft. (a value between 0 and 1)
            </summary>
            <value>
            The initial throttle of the player's aircraft. (a value between 0 and 1)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.LevelStartLocation.Position">
            <summary>
            Gets or sets the starting position of the player's aircraft.
            </summary>
            <value>
            The starting position of the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.LevelStartLocation.Rotation">
            <summary>
            Gets or sets the starting rotation of the player's aircraft.
            </summary>
            <value>
            The starting rotation of the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.LevelStartLocation.StartOnGround">
            <summary>
            Gets or sets a value indicating whether the player's aircraft should start on the ground.
            </summary>
            <value>
              <c>true</c> if the player's aircraft should start on the ground; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.MapNames">
            <summary>
            A class containing the names of all the built-in maps in the game.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.MapNames.Default">
            <summary>
            The default map name.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.MapPlugin">
            <summary>
            A component that is added to a game object that should be created whenever a map is loaded.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.MapPlugin.SupportedMapNames">
            <summary>
            The list of maps supported by this plugin.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.MapStartLocation">
            <summary>
            A component representing a possible player start location in a map.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.MapStartLocation.InitialSpeed">
            <summary>
            The initial speed of the player's aircraft at this start location. (meters per second)
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.MapStartLocation.LocationName">
            <summary>
            The location name.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.MapStartLocation.StartOnGround">
            <summary>
            A value indicating whether the player's aircraft should start on the ground at this location.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.DevConsole.IDevConsole"/> service.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.Initialized">
            <summary>
            Occurs when the dev console is initialized.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RaiseInitializedEvent(System.EventArgs)">
            <summary>
            Raises the initialized event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterArgumentParser``1(Jundroo.SimplePlanes.ModTools.DevConsole.IArgumentParser{``0})">
            <summary>
            Registers the argument parser.
            </summary>
            <typeparam name="T">The type of arguments supported by the parser.</typeparam>
            <param name="parser">The parser being registered.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand(System.String,System.Action)">
            <summary>
            Registers the specified command.
            </summary>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``1(System.String,System.Action{``0})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T">The type of command argument #1.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``2(System.String,System.Action{``0,``1})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``3(System.String,System.Action{``0,``1,``2})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``4(System.String,System.Action{``0,``1,``2,``3})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="T4">The type of command argument #4.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``5(System.String,System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="T4">The type of command argument #4.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``4(System.String,System.Func{``0,``1,``2,``3})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="T3">The type of command argument #3.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``3(System.String,System.Func{``0,``1,``2})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T1">The type of command argument #1.</typeparam>
            <typeparam name="T2">The type of command argument #2.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``2(System.String,System.Func{``0,``1})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="T">The type of command argument.</typeparam>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.RegisterCommand``1(System.String,System.Func{``0})">
            <summary>
            Registers the specified command.
            </summary>
            <typeparam name="TResult">The type of command result.</typeparam>
            <param name="command">The command to register.</param>
            <param name="commandAction">The command action.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.DevConsoleMock.UnregisterCommand(System.String)">
            <summary>
            Unregisters the specified command.
            </summary>
            <param name="command">The command to unregister.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IEnvironmentManager"/> service.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.DynamicWeatherEnabled">
            <summary>
            Gets or sets a value indicating whether dynamic weather is enabled.
            </summary>
            <value>
            <c>true</c> if dynamic weather is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.Enabled">
            <summary>
            Gets or sets a value indicating whether the default environment is enabled (sky, weather, etc).
            </summary>
            <value>
            <c>true</c> if the default environment is enabled (sky, weather, etc); otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.LengthOfDay">
            <summary>
            Gets or sets the length of a single day in minutes.
            </summary>
            <value>
            The length of a single day in minutes.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.PauseTimeProgression">
            <summary>
            Gets or sets a value indicating whether time progression is paused.
            </summary>
            <value>
            <c>true</c> if time progression is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.TimeOfDay">
            <summary>
            Gets or sets the time of day in hours.
            </summary>
            <value>
            The time of day in hours.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.UserSettingsEnabled">
            <summary>
            Gets or sets a value indicating whether user modification of environment settings is enabled.
            </summary>
            <value>
            <c>true</c> if user modification of environment settings is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.RestoreDefaultSettings">
            <summary>
            Restores the default settings.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.UpdateTimeOfDay(System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Updates the time of day.
            </summary>
            <param name="timeOfDay">The new time of day in hours.</param>
            <param name="transitionTime">The transition time (in seconds) for the time change.</param>
            <param name="allowReverseTimeTransition">If set to <c>true</c> allow transitions to occur in reverse time.</param>
            <param name="ignorePause">If set to <c>true</c>, the update will occur event when paused.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.EnvironmentManagerMock.UpdateWeather(Jundroo.SimplePlanes.ModTools.WeatherPreset,System.Single,System.Boolean)">
            <summary>
            Updates the weather settings based on the specified weather preset.
            </summary>
            <param name="preset">The weather preset to apply.</param>
            <param name="transitionTime">The transition time (in seconds) for the changes.</param>
            <param name="ignorePause">If set to <c>true</c>, the update will occur event when paused.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.GameCameraMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IGameCamera"/> service.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameCameraMock.CameraTarget">
            <summary>
            Gets or sets the camera target.
            </summary>
            <value>
            The camera target.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameCameraMock.CameraPosition">
            <summary>
            Gets or sets the camera position.
            </summary>
            <value>
            The camera position.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameCameraMock.SetMainCameraEnabled(System.Boolean)">
            <summary>
            Enables or disables the main SimplePlanes camera.  Use this when you want to use your own cameras.
            </summary>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IGameState"/> service.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.AircraftViewChanged">
            <summary>
            Occurs when the aircraft view is changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.DesignerEntered">
            <summary>
            Occurs when the designer is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.DesignerExited">
            <summary>
            Occurs when the designer is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.LevelEntered">
            <summary>
            Occurs when a level is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.LevelExited">
            <summary>
            Occurs when a level is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.LevelRestarted">
            <summary>
            Occurs when the current level is restarted.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.MapEntered">
            <summary>
            Occurs when a map is entered.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.MapExited">
            <summary>
            Occurs when a map is exited.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.MapLocationChanged">
            <summary>
            Occurs when the map starting location has changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.PauseChanged">
            <summary>
            Occurs when a change has occurred in the pause state of the application.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.CurrentLevelName">
            <summary>
            Gets or sets the name of the current level.
            </summary>
            <value>
            The name of the current level.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.CurrentMapName">
            <summary>
            Gets or sets the name of the current map.
            </summary>
            <value>
            The name of the current map.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.IsInDesigner">
            <summary>
            Gets or sets a value indicating whether the user is currently in designer.
            </summary>
            <value>
            <c>true</c> if the user is currently in designer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.IsInLevel">
            <summary>
            Gets or sets a value indicating whether the user is currently in a level.
            </summary>
            <value>
            <c>true</c> if the user is currently in a level; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.IsPaused">
            <summary>
            Gets or sets a value indicating whether the game is paused.
            </summary>
            <value>
              <c>true</c> if the game is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseAircraftViewChanged(Jundroo.SimplePlanes.ModTools.Events.AircraftViewChangedEventArgs)">
            <summary>
            Raises the AircraftViewChanged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseDesignerEntered(System.EventArgs)">
            <summary>
            Raises the DesignerEntered event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseDesignerExited(System.EventArgs)">
            <summary>
            Raises the DesignerExited event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseLevelEntered(Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs)">
            <summary>
            Raises the LevelEntered event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseLevelExited(Jundroo.SimplePlanes.ModTools.Events.LevelChangedEventArgs)">
            <summary>
            Raises the LevelExited event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseLevelRestarted(System.EventArgs)">
            <summary>
            Raises the LevelRestarted event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseMapEntered(Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs)">
            <summary>
            Raises the MapEntered event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseMapExited(Jundroo.SimplePlanes.ModTools.Events.MapChangedEventArgs)">
            <summary>
            Raises the MapExited event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaiseMapLocationChanged(Jundroo.SimplePlanes.ModTools.Events.MapLocationChangedEventArgs)">
            <summary>
            Raises the MapLocationChanged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RaisePauseChanged(Jundroo.SimplePlanes.ModTools.Events.PauseChangedEventArgs)">
            <summary>
            Raises the PauseChanged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameStateMock.RequestPauseChange(System.Boolean,System.Boolean)">
            <summary>
            Requests a change in the pause state of the application.
            </summary>
            <param name="paused"><c>true</c> if requesting that the application be paused.
            <c>false</c> if requesting that the application be un-paused.</param>
            <param name="userInitiated"><c>true</c> if this requested change in the pause state has been initiated by the user.</param>
            <returns>
            The new pause state of the game.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IGameWorld"/> service.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock"/> class.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.FloatingOriginChanged">
            <summary>
            Occurs when the floating origin changes.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.SeaLevelChanged">
            <summary>
            Occurs when the sea level changes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.FloatingOriginOffset">
            <summary>
            Gets or sets the floating origin offset which represents the current origin's position relative to the true origin.
            </summary>
            <value>
            The floating origin offset which represents the current origin's position relative to the true origin.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.FloatingOriginSeaLevel">
            <summary>
            Gets the current world height of the sea level in world coordinates taking floating origin into account.
            </summary>
            <value>
            The current world height of the sea level in world coordinates taking floating origin into account.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.MassScale">
            <summary>
            Gets or sets the scale factor applied to the mass of parts in the game.
            If a part weighs 1000 pounds and the scale factor is 0.01, then the mass of the associated rigid body will be 10 pounds.
            </summary>
            <value>
            The scale factor applied to the mass of parts in the game.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.SeaLevel">
            <summary>
            Gets or sets the sea level on the y-axis.
            </summary>
            <value>
            The sea level on the y-axis.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.CreateExplosion(UnityEngine.Vector3,System.Single,System.Int32)">
            <summary>
            Creates an explosion in the game world which only impacts aircraft parts.
            </summary>
            <param name="position">The position of the explosion.</param>
            <param name="magnitude">The magnitude.</param>
            <param name="explosionCascadeCount">The number of explosions that have cascaded to create this explosion.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.RaiseFloatingOriginChanged(Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs)">
            <summary>
            Raises the floating origin changed event.
            </summary>
            <param name="e">The <see cref="T:Jundroo.SimplePlanes.ModTools.Events.FloatingOriginChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.RaiseSeaLevelChanged(Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs)">
            <summary>
            Raises the sea level changed event.
            </summary>
            <param name="e">The <see cref="T:Jundroo.SimplePlanes.ModTools.Events.SeaLevelChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameWorldMock.ShowStatusMessage(System.String,System.Single)">
            <summary>
            Shows the message using the in-game message system.
            </summary>
            <param name="message">The message to show.</param>
            <param name="time">The time to display the message.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.Input.IGameInputs"/> service.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock._inputLookupByName">
            <summary>
            A dictionary for looking up inputs by lower case name.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate1">
            <summary>
            Gets or sets the activation group 1 input.
            </summary>
            <value>
            The activation group 1 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate2">
            <summary>
            Gets or sets the activation group 2 input.
            </summary>
            <value>
            The activation group 2 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate3">
            <summary>
            Gets or sets the activation group 3 input.
            </summary>
            <value>
            The activation group 3 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate4">
            <summary>
            Gets or sets the activation group 4 input.
            </summary>
            <value>
            The activation group 4 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate5">
            <summary>
            Gets or sets the activation group 5 input.
            </summary>
            <value>
            The activation group 5 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate6">
            <summary>
            Gets or sets the activation group 6 input.
            </summary>
            <value>
            The activation group 6 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate7">
            <summary>
            Gets or sets the activation group 7 input.
            </summary>
            <value>
            The activation group 7 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Activate8">
            <summary>
            Gets or sets the activation group 8 input.
            </summary>
            <value>
            The activation group 8 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ActivateCameraLook">
            <summary>
            Gets or sets the activate camera look input.
            </summary>
            <value>
            The activate camera look input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ActivateCatapult">
            <summary>
            Gets or sets the activate catapult input.
            </summary>
            <value>
            The activate catapult input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Brake">
            <summary>
            Gets or sets the brake input.
            </summary>
            <value>
            The brake input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CameraLookBack">
            <summary>
            Gets or sets the camera look back input.
            </summary>
            <value>
            The camera look back input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CameraLookLeftRight">
            <summary>
            Gets or sets the camera look left/right input.
            </summary>
            <value>
            The camera look left/right input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CameraLookUpDown">
            <summary>
            Gets or sets the camera look up/down input.
            </summary>
            <value>
            The camera look up/down input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CameraLookZoom">
            <summary>
            Gets or sets the camera zoom in/out input.
            </summary>
            <value>
            The camera zoom in/out input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ChaseView">
            <summary>
            Gets or sets the chase view input.
            </summary>
            <value>
            The chase view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ClearConcealedPartsList">
            <summary>
            Gets the clear concealed parts list input.
            </summary>
            <value>
            The clear concealed parts list input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CockpitView">
            <summary>
            Gets or sets the cockpit view input.
            </summary>
            <value>
            The cockpit view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ConcealPart">
            <summary>
            Gets the conceal part input.
            </summary>
            <value>
            The conceal part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CustomCamera1">
            <summary>
            Gets or sets the custom camera 1 input.
            </summary>
            <value>
            The custom camera 1 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CustomCamera2">
            <summary>
            Gets or sets the custom camera 2 input.
            </summary>
            <value>
            The custom camera 2 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CustomCamera3">
            <summary>
            Gets or sets the custom camera 3 input.
            </summary>
            <value>
            The custom camera 3 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CustomCamera4">
            <summary>
            Gets or sets the custom camera 4 input.
            </summary>
            <value>
            The custom camera 4 input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CycleConcealmentType">
            <summary>
            Gets the cycle concealment type input.
            </summary>
            <value>
            The cycle concealment type input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.CycleTargetingMode">
            <summary>
            Gets or sets the cycle targeting mode input.
            </summary>
            <value>
            The cycle targeting mode input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DamageVisualizer">
            <summary>
            Gets or sets the damage visualizer toggle input.
            </summary>
            <value>
            The damage visualizer toggle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DeletePart">
            <summary>
            Gets or sets the delete part input.
            </summary>
            <value>
            The delete part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DesignerPitch">
            <summary>
            Gets or sets the pitch input for the designer.
            </summary>
            <value>
            The pitch input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DesignerRoll">
            <summary>
            Gets or sets the roll input for the designer.
            </summary>
            <value>
            The roll input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DesignerYaw">
            <summary>
            Gets or sets the yaw input for the designer.
            </summary>
            <value>
            The yaw input for the designer.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.DeveloperConsole">
            <summary>
            Gets or sets the toggle developer console input.
            </summary>
            <value>
            The toggle developer console input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.FireGuns">
            <summary>
            Gets or sets the fire guns input.
            </summary>
            <value>
            The fire guns input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.FireWeapons">
            <summary>
            Gets or sets the fire weapons input.
            </summary>
            <value>
            The fire weapons input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.FlybyView">
            <summary>
            Gets or sets the flyby view input.
            </summary>
            <value>
            The flyby view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.InvertConcealedParts">
            <summary>
            Gets the invert concealed parts input.
            </summary>
            <value>
            The invert concealed parts input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.LandingGear">
            <summary>
            Gets or sets the landing gear input.
            </summary>
            <value>
            The landing gear input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.LaunchCountermeasures">
            <summary>
            Gets or sets the launch countermeasures input.
            </summary>
            <value>
            The launch countermeasures input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.LoadClipboardAircraft">
            <summary>
            Gets or sets the load aircraft from clipboard URL input.
            </summary>
            <value>
            The load aircraft from clipboard URL input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.MaxThrottle">
            <summary>
            Gets the maximum throttle input.
            </summary>
            <value>
            The maximum throttle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.MirrorAircraftLeft">
            <summary>
            Gets or sets the mirror aircraft left input.
            </summary>
            <value>
            The mirror aircraft left input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.MirrorAircraftRight">
            <summary>
            Gets or sets the mirror aircraft right input.
            </summary>
            <value>
            The mirror aircraft right input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.MirrorPart">
            <summary>
            Gets or sets the mirror part input.
            </summary>
            <value>
            The mirror part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.MirrorTool">
            <summary>
            Gets or sets the mirror tool input.
            </summary>
            <value>
            The mirror tool input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NextTarget">
            <summary>
            Gets or sets the next target input.
            </summary>
            <value>
            The next target input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NextView">
            <summary>
            Gets or sets the next view input.
            </summary>
            <value>
            The next view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NextWeapon">
            <summary>
            Gets or sets the next weapon input.
            </summary>
            <value>
            The next weapon input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartNegativeX">
            <summary>
            Gets or sets the nudge part on the negative x-axis input.
            </summary>
            <value>
            The nudge part on the negative x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartNegativeY">
            <summary>
            Gets or sets the nudge part on the negative y-axis input.
            </summary>
            <value>
            The nudge part on the negative y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartNegativeZ">
            <summary>
            Gets or sets the nudge part on the negative z-axis input.
            </summary>
            <value>
            The nudge part on the negative z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartPositiveX">
            <summary>
            Gets or sets the nudge part on the positive x-axis input.
            </summary>
            <value>
            The nudge part on the positive x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartPositiveY">
            <summary>
            Gets or sets the nudge part on the positive y-axis input.
            </summary>
            <value>
            The nudge part on the positive y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.NudgePartPositiveZ">
            <summary>
            Gets or sets the nudge part on the positive z-axis input.
            </summary>
            <value>
            The nudge part on the positive z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.OrbitView">
            <summary>
            Gets or sets the orbit view input.
            </summary>
            <value>
            The orbit view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Pause">
            <summary>
            Gets or sets the pause input.
            </summary>
            <value>
            The pause input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Pitch">
            <summary>
            Gets or sets the pitch input.
            </summary>
            <value>
            The pitch input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.PreviousTarget">
            <summary>
            Gets or sets the previous target input.
            </summary>
            <value>
            The previous target input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.PreviousView">
            <summary>
            Gets or sets the previous view input.
            </summary>
            <value>
            The previous view input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.PreviousWeapon">
            <summary>
            Gets or sets the previous weapon input.
            </summary>
            <value>
            The previous weapon input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ReattachSelectedPart">
            <summary>
            Gets the reattach selected part input.
            </summary>
            <value>
            The reattach selected part input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Redo">
            <summary>
            Gets or sets the redo input.
            </summary>
            <value>
            The redo input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Restart">
            <summary>
            Gets or sets the restart input.
            </summary>
            <value>
            The restart input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RestartHere">
            <summary>
            Gets or sets the restart here input.
            </summary>
            <value>
            The restart here input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Roll">
            <summary>
            Gets or sets the roll input.
            </summary>
            <value>
            The roll input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotateNegativeX">
            <summary>
            Gets or sets the rotate part on the negative x-axis input.
            </summary>
            <value>
            The rotate part on the negative x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotateNegativeY">
            <summary>
            Gets or sets the rotate part on the negative y-axis input.
            </summary>
            <value>
            The rotate part on the negative y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotateNegativeZ">
            <summary>
            Gets or sets the rotate part on the negative z-axis input.
            </summary>
            <value>
            The rotate part on the negative z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotatePositiveX">
            <summary>
            Gets or sets the rotate part on the positive x-axis input.
            </summary>
            <value>
            The rotate part on the positive x-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotatePositiveY">
            <summary>
            Gets or sets the rotate part on the positive y-axis input.
            </summary>
            <value>
            The rotate part on the positive y-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.RotatePositiveZ">
            <summary>
            Gets or sets the rotate part on the positive z-axis input.
            </summary>
            <value>
            The rotate part on the positive z-axis input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.SaveAircraft">
            <summary>
            Gets or sets the save aircraft input.
            </summary>
            <value>
            The save aircraft input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ScreenshotMode">
            <summary>
            Gets or sets the screen-shot mode input.
            </summary>
            <value>
            The screen-shot mode input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.SelfDestruct">
            <summary>
            Gets or sets the self destruct input.
            </summary>
            <value>
            The self destruct input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Throttle">
            <summary>
            Gets or sets the throttle input.
            </summary>
            <value>
            The throttle input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleActivationPanel">
            <summary>
            Gets or sets the toggle activation panel input.
            </summary>
            <value>
            The toggle activation panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleAutopilot">
            <summary>
            Gets or sets the toggle autopilot input.
            </summary>
            <value>
            The toggle autopilot input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleCenterBalls">
            <summary>
            Gets or sets the toggle CoM/CoL/CoT input.
            </summary>
            <value>
            The toggle CoM/CoL/CoT input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleFastForward">
            <summary>
            Gets the toggle fast forward input.
            </summary>
            <value>
            The toggle fast forward input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleMouseJoystick">
            <summary>
            Gets or sets the toggle mouse joystick input.
            </summary>
            <value>
            The toggle mouse joystick input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleMusic">
            <summary>
            Gets or sets the toggle music input.
            </summary>
            <value>
            The toggle music input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.TogglePaintPanel">
            <summary>
            Gets or sets the toggle paint panel input.
            </summary>
            <value>
            The toggle paint panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.TogglePartPropertiesPanel">
            <summary>
            Gets or sets the toggle part properties panel input.
            </summary>
            <value>
            The toggle part properties panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleSlowMotion">
            <summary>
            Gets or sets the toggle slow motion input.
            </summary>
            <value>
            The toggle slow motion input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleTransformPartPanel">
            <summary>
            Gets or sets the toggle transform part panel input.
            </summary>
            <value>
            The toggle transform part panel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ToggleWindSettings">
            <summary>
            Gets or sets the toggle wind settings input.
            </summary>
            <value>
            The toggle wind settings input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Trim">
            <summary>
            Gets or sets the trim input.
            </summary>
            <value>
            The trim input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.TrimReset">
            <summary>
            Gets or sets the reset trim input.
            </summary>
            <value>
            The reset trim input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.UICancel">
            <summary>
            Gets or sets the UI cancel input.
            </summary>
            <value>
            The UI cancel input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.UIHorizontal">
            <summary>
            Gets or sets the UI horizontal input.
            </summary>
            <value>
            The UI horizontal input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.UISubmit">
            <summary>
            Gets or sets the UI submit input.
            </summary>
            <value>
            The UI submit input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.UIVertical">
            <summary>
            Gets or sets the UI vertical input.
            </summary>
            <value>
            The UI vertical input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Undo">
            <summary>
            Gets or sets the undo input.
            </summary>
            <value>
            The undo input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Vtol">
            <summary>
            Gets or sets the VTOL input.
            </summary>
            <value>
            The VTOL input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.Yaw">
            <summary>
            Gets or sets the yaw input.
            </summary>
            <value>
            The yaw input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.ZeroThrottle">
            <summary>
            Gets the zero throttle input.
            </summary>
            <value>
            The zero throttle input.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputsMock.FindById(System.String)">
            <summary>
            Looks up an input by its id.
            </summary>
            <param name="id">The input identifier.</param>
            <returns>The input with the specified id or <c>null</c> if a matching input could not be found.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock">
            <summary>
            A mock class for a game input.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.ActivatedThisFrame">
            <summary>
            Gets or sets a value indicating whether the input was activated this frame.
            </summary>
            <value>
              <c>true</c> if the input was activated this frame; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.AxisValue">
            <summary>
            Gets or sets the axis value.
            </summary>
            <value>
            The axis value.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.ControllerBindingText">
            <summary>
            Gets or sets the controller binding text.
            </summary>
            <value>
            The controller binding text.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.DeactivatedThisFrame">
            <summary>
            Gets or sets a value indicating whether the input was deactivated this frame.
            </summary>
            <value>
              <c>true</c> if the input was deactivated this frame; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.DescriptiveName">
            <summary>
            Gets or sets the descriptive name of the input.
            </summary>
            <value>
            The descriptive name of the input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Jundroo.SimplePlanes.ModTools.Input.IGameInput" /> is enabled.
            A disabled input can still return valid values. Code can ignore the fact that an
            input has been disabled and continue to use it anyway.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.Id">
            <summary>
            Gets or sets the identifier for the input.
            </summary>
            <value>
            The identifier for the input.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.KeyboardPrimaryBindingText">
            <summary>
            Gets or sets the keyboard primary binding text.
            </summary>
            <value>
            The keyboard primary binding text.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.KeyboardSecondaryBindingText">
            <summary>
            Gets or sets the keyboard secondary binding text.
            </summary>
            <value>
            The keyboard secondary binding text.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.MouseBindingText">
            <summary>
            Gets or sets the mouse binding text.
            </summary>
            <value>
            The mouse binding text.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetAxis">
            <summary>
            Gets the value of the input axis.
            </summary>
            <returns>
            The value of the input axis.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetAxisIfEnabled">
            <summary>
            Gets the value of the input axis or zero if the input has been disabled.
            </summary>
            <returns>
            The value of the input axis or zero if the input has been disabled.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButton">
            <summary>
            Gets the state of the input button.
            </summary>
            <returns>
              <c>true</c> if the input button is active; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButtonDown">
            <summary>
            Gets a value indicating if the input button was activated this frame.
            </summary>
            <returns>
              <c>true</c> if the input button was activated this frame; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButtonDownIfEnabled">
            <summary>
            Gets a value indicating if the input button was activated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
            <returns>
              <c>true</c> if the input button was activated this frame and the input is enabled; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButtonIfEnabled">
            <summary>
            Gets the state of the input button.
            </summary>
            <returns>
              <c>true</c> if the input button is active and enabled; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButtonUp">
            <summary>
            Gets a value indicating if the input button was deactivated this frame.
            </summary>
            <returns>
              <c>true</c> if the input button was deactivated this frame; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetButtonUpIfEnabled">
            <summary>
            Gets a value indicating if the input button was deactivated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
            <returns>
              <c>true</c> if the input button was deactivated this frame and the input is enabled; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetControllerBindingText">
            <summary>
            Gets the controller binding text.
            </summary>
            <returns>
            The controller binding text or <c>null</c> if no binding exists.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetFirstBindingText">
            <summary>
            Gets the first binding text that can be found.
            </summary>
            <returns>
            The first binding text that can be found or <c>null</c> if no bindings can be found.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetKeyboardPrimaryBindingText">
            <summary>
            Gets the keyboard primary binding text.
            </summary>
            <returns>
            The keyboard primary binding text or <c>null</c> if no binding exists.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetKeyboardSecondaryBindingText">
            <summary>
            Gets the keyboard secondary binding text.
            </summary>
            <returns>
            The keyboard secondary binding text or <c>null</c> if no binding exists.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.GameInputMock.GetMouseBindingText">
            <summary>
            Gets the mouse binding text.
            </summary>
            <returns>
            The mouse binding text or <c>null</c> if no binding exists.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.ModTools.IModResourceLoader"/> service.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.GameObjectLoaded">
            <summary>
            Occurs when a game object is loaded.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.ModInfo">
            <summary>
            Gets the mod information.
            </summary>
            <value>
            The mod information.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadAsset``1(System.String)">
            <summary>
            Loads the asset at the specified path.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="path">The path of the asset to load. (Example: "Assets/Textures/MyTexture.png")</param>
            <returns>
            The requested asset or <c>null</c> if an asset of the requested type at the specified path could not be found.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadAsset(System.String,System.Type)">
            <summary>
            Loads the asset at the specified path.
            </summary>
            <param name="path">The path of the asset to load. (Example: "Assets/Textures/MyTexture.png")</param>
            <param name="type">The type of the asset to load.</param>
            <returns>
            The requested asset or <c>null</c> if an asset of the requested type at the specified path could not be found.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadAssetAsync(System.String,System.Type)">
            <summary>
            Asynchronously loads the asset at the specified path.
            </summary>
            <param name="path">The path of the asset to load. (Example: "Assets/Textures/MyTexture.png")</param>
            <param name="type">The type of the asset to load.</param>
            <returns>
            The asynchronous request for the asset.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadAssetAsync``1(System.String)">
            <summary>
            Asynchronously loads the asset at the specified path.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="path">The path of the asset to load. (Example: "Assets/Textures/MyTexture.png")</param>
            <returns>
            The asynchronous request for the asset.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadGameObject(System.String)">
            <summary>
            Loads a game object with the specified name from the mod.
            This is used to load game objects that were manually exported during the creation of the mod.
            GameObjects are loaded as prefabs, cloned, custom scripts reattached, then the cloned object is returned.
            </summary>
            <param name="nameOrPath">The name or path of the game object to load.</param>
            <returns>
            The requested game object or <c>null</c> if it could not be found.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.LoadGameObjectAsync(System.String)">
            <summary>
            Asynchronously loads a game object with the specified name from the mod.
            This is used to load game objects that were manually exported during the creation of the mod.
            GameObjects are loaded as prefabs, cloned, custom scripts reattached, then the cloned object is returned.
            WARNING: Any assets associated with the asset being loaded will be loaded synchronously!
            </summary>
            <param name="nameOrPath">The name or path of the game object to load.</param>
            <returns>
            The asynchronous request for the game object.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.ModResourceLoaderMock.RaiseGameObjectLoadedEvent(Jundroo.ModTools.Events.GameObjectLoadedEventArgs)">
            <summary>
            Raises the game object loaded event.
            </summary>
            <param name="e">The <see cref="T:Jundroo.ModTools.Events.GameObjectLoadedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IPlayerAircraftControls"/> service.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Brake">
            <summary>
            Gets or sets the brake value (0.0 to 1.0).
            </summary>
            <value>
            The brake value (0.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.FireGuns">
            <summary>
            Gets or sets a value indicating whether the fire guns control is activated.
            </summary>
            <value>
            <c>true</c> if fire guns down control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.FireWeapons">
            <summary>
            Gets or sets a value indicating whether the fire weapons control is activated.
            </summary>
            <value>
            <c>true</c> if fire weapons down control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.LandingGearDown">
            <summary>
            Gets or sets a value indicating whether the landing gear down control is activated.
            </summary>
            <value>
            <c>true</c> if landing gear down control is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.LaunchCountermeasures">
            <summary>
            Gets or sets a value indicating whether the launch countermeasures input is activated.
            </summary>
            <value>
            <c>true</c> if the launch countermeasures input is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Pitch">
            <summary>
            Gets or sets the pitch value (-1.0 to 1.0).
            </summary>
            <value>
            The pitch value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Roll">
            <summary>
            Gets or sets the roll value (-1.0 to 1.0).
            </summary>
            <value>
            The roll value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Throttle">
            <summary>
            Gets or sets the throttle value (0.0 to 1.0).
            </summary>
            <value>
            The throttle value (0.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.ThrottleIncrement">
            <summary>
            Gets or sets the throttle increment value (-1.0 to 1.0).
            </summary>
            <value>
            The throttle increment value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Trim">
            <summary>
            Gets or sets the trim value (-1.0 to 1.0).
            </summary>
            <value>
            The trim value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.TrimReset">
            <summary>
            Gets or sets a value indicating whether to reset the trim.
            </summary>
            <value>
              <c>true</c> if reset trim; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Vtol">
            <summary>
            Gets or sets the VTOL value (-1.0 to 1.0).
            </summary>
            <value>
            The VTOL value (-1.0 to 1.0).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.Yaw">
            <summary>
            Gets or sets the yaw value (-1.0 to 1.0).
            </summary>
            <value>
            The yaw value (-1.0 to 1.0).
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.GetActivationGroupState(System.Int32)">
            <summary>
            Gets the state of the activation group.
            </summary>
            <param name="groupNumber">The group number.</param>
            <returns>
              <c>true</c> if the activation group is enabled, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftControlsMock.ToggleActivationGroup(System.Int32)">
            <summary>
            Toggles the activation group.
            </summary>
            <param name="groupNumber">The group number to toggle.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IPlayerAircraft"/> service.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock"/> class.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.AircraftDamaged">
            <summary>
            Occurs when the player's aircraft is damaged.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.AircraftStructureChanged">
            <summary>
            Occurs when the player's aircraft structure has changed.
            </summary>
        </member>
        <member name="E:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.PartEnteredWater">
            <summary>
            Occurs when an aircraft part enters the water.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Airspeed">
            <summary>
            Gets or sets the current airspeed of the aircraft. (meters per second)
            </summary>
            <value>
            The current airspeed of the aircraft. (meters per second)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Altitude">
            <summary>
            Gets or sets the current altitude of the aircraft. (meters)
            </summary>
            <value>
            The current altitude of the aircraft. (meters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Controls">
            <summary>
            Gets or sets the controls for the player's aircraft.
            </summary>
            <value>
            The controls for the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.CriticallyDamaged">
            <summary>
            Gets or sets a value indicating whether the aircraft is critically damaged.
            </summary>
            <value>
              <c>true</c> if the aircraft is critically damaged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Fuel">
            <summary>
            Gets or sets the current fuel for the aircraft. (liters)
            </summary>
            <value>
            The current fuel for the aircraft. (liters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.FuelCapacity">
            <summary>
            Gets or sets the fuel capacity for the aircraft. (liters)
            </summary>
            <value>
            The fuel capacity for the aircraft. (liters)
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.MainCockpitPosition">
            <summary>
            Gets or sets the position of the aircraft's main cockpit in the game world.
            </summary>
            <value>
            The position of the aircraft's main cockpit in the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.MainCockpitRotation">
            <summary>
            Gets or sets the rotation of the aircraft's main cockpit in the game world.
            </summary>
            <value>
            The rotation of the aircraft's main cockpit in the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Parts">
            <summary>
            Gets or sets all parts' GameObjects in the current player-controlled aircraft.
            </summary>
            <value>
            All parts's GameObjects in the current player-controlled aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.Velocity">
            <summary>
            Gets or sets the current velocity of the aircraft. (meters per second)
            </summary>
            <value>
            The current velocity of the aircraft. (meters per second)
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.RaiseAircraftDamaged(System.EventArgs)">
            <summary>
            Raises the AircraftDamaged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.RaiseAircraftStructureChanged(System.EventArgs)">
            <summary>
            Raises the AircraftStructureChanged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.PlayerAircraftMock.RaisePartEnteredWater(System.EventArgs)">
            <summary>
            Raises the PartEnteredWater event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock">
            <summary>
            A mocked up testing class for the <see cref="T:Jundroo.SimplePlanes.ModTools.IUserInterface"/> service.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock.EventSystem">
            <summary>
            Gets or sets the event system for the current scene.
            </summary>
            <value>
            The event system for the current scene.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock.UIRootObject">
            <summary>
            Gets or sets the root game object for all UI elements.
            </summary>
            <value>
            The root game object for all UI elements.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock.CreateDesignerButton(UnityEngine.Sprite,System.String,System.Action)">
            <summary>
            Creates a designer button. Should be called when the designer is loaded.
            </summary>
            <param name="sprite">A square texture that will be shown on the button.</param>
            <param name="tooltip">The tooltip that is shown when the mouse hovers over the button.</param>
            <param name="callback">The callback that is run when the button is clicked.</param>
            <returns>The designer button object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock.HideUIElement(Jundroo.SimplePlanes.ModTools.FlightUIElementType)">
            <summary>
            Hides the specified UI element (if shown).
            </summary>
            <param name="elementType">Type of the element to hide.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Mocks.UserInterfaceMock.ShowUIElement(Jundroo.SimplePlanes.ModTools.FlightUIElementType)">
            <summary>
            Shows the specified UI element (if hidden).
            </summary>
            <param name="elementType">Type of the element to show.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling">
            <summary>
            A class containing information on how an attach point handles adaptive blocks.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.AdaptiveIgnore">
            <summary>
            Gets or sets a value indicating whether the 'adaptive' feature of adaptive parts should be ignored at this attach point.
            </summary>
            <value>
            <c>true</c> if the 'adaptive' feature of adaptive parts should be ignored at this attach point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.HardEdgeBottom">
            <summary>
            Gets or sets a value indicating whether the bottom edge of the adaptive part connection should be hard.
            </summary>
            <value>
              <c>true</c> if the bottom edge of the adaptive part connection should be hard; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.HardEdgeLeft">
            <summary>
            Gets or sets a value indicating whether the left edge of the adaptive part connection should be hard.
            </summary>
            <value>
              <c>true</c> if the left edge of the adaptive part connection should be hard; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.HardEdgeRight">
            <summary>
            Gets or sets a value indicating whether the right edge of the adaptive part connection should be hard.
            </summary>
            <value>
              <c>true</c> if the right edge of the adaptive part connection should be hard; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.HardEdgeTop">
            <summary>
            Gets or sets a value indicating whether the top edge of the adaptive part connection should be hard.
            </summary>
            <value>
              <c>true</c> if the top edge of the adaptive part connection should be hard; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.AttachPointAdaptiveBlockHandling.GetHardEdgeXmlValue">
            <summary>
            Gets the hard edge XML value.
            </summary>
            <returns>The value used in the XML to represent the hard or soft edges.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute">
            <summary>
            A base class for attributes used to configure modifiable properties on part modifiers in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute.Header">
            <summary>
            Gets or sets the optional header text to use above this property.
            </summary>
            <value>
            The header text for this property.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute.Label">
            <summary>
            Gets or sets the label text for the property.
            </summary>
            <value>
            The label text for the property.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute.Order">
            <summary>
            Gets or sets the order of the property.
            Properties with lower orders will appear above properties with higher orders.
            The default order for properties is 100.
            </summary>
            <value>
            The order of the property.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyClassAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being modifiable in the designer via a collection of
            controls associated with the class fields that have also been marked with designer property attributes.
            Implements the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute" />
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyAttribute" />
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyClassAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyClassAttribute"/> class.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being modifiable in the designer via a slider control.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute"/> class.
            This will provider values between 0 and 1 using increments of 0.1 for each step.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute.#ctor(System.Single,System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute"/> class.
            </summary>
            <param name="min">The minimum value for the slider.</param>
            <param name="max">The maximum value for the slider.</param>
            <param name="numberOfSteps">The number of steps for the slider.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute.MaxValue">
            <summary>
            Gets or sets the maximum value for the slider.
            </summary>
            <value>
            The maximum value for the slider.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute.MinValue">
            <summary>
            Gets or sets the minimum value for the slider.
            </summary>
            <value>
            The minimum value for the slider.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySliderAttribute.NumberOfSteps">
            <summary>
            Gets or sets the number of steps for the slider.
            </summary>
            <value>
            The number of steps for the slider.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being modifiable in the designer via a text-based spinner control.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.AllowManualEntry">
            <summary>
            Gets or sets a value indicating whether manual entry is allowed.
            </summary>
            <value><c>true</c> if manual entry is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.ExtraWidth">
            <summary>
            Gets or sets the extra width added to the spinner control for longer label values.
            </summary>
            <value>The extra width added to the spinner control for longer label values.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.ShrinkText">
            <summary>
            Gets or sets a value indicating whether the value text can be shrunk to fit the label size.
            </summary>
            <value><c>true</c> if the value text can be shrunk to fit the label size; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.Values">
            <summary>
            Gets the values for the spinner property.
            </summary>
            <value>The values for the spinner property.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextSpinnerAttribute.WrapText">
            <summary>
            Gets or sets a value indicating whether the value text can be wrapped to a second line.
            </summary>
            <value><c>true</c> if the value text can be wrapped to a second line; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being modifiable in the designer via a spinner control.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute"/> class.
            By default, this provides a spinner control that ranges between -10 and 10 with a step value of 1.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute"/> class.
            </summary>
            <param name="min">The minimum value of the spinner control.</param>
            <param name="max">The maximum value of the spinner control.</param>
            <param name="stepSize">The size of each step (i.e. the amount added or subtracted each time the user activates a spinner button).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute"/> class.
            </summary>
            <param name="min">The minimum value of the spinner control.</param>
            <param name="max">The maximum value of the spinner control.</param>
            <param name="stepSize">The size of each step (i.e. the amount added or subtracted each time the user activates a spinner button).</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute"/> class.
            </summary>
            <param name="min">The minimum value of the spinner control.</param>
            <param name="max">The maximum value of the spinner control.</param>
            <param name="stepSize">The size of each step (i.e. the amount added or subtracted each time the user activates a spinner button).</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.AllowManualEntry">
            <summary>
            Gets or sets a value indicating whether manual entry is allowed.
            </summary>
            <value><c>true</c> if manual entry is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.ExtraWidth">
            <summary>
            Gets or sets the extra width added to the spinner control for longer label values.
            </summary>
            <value>The extra width added to the spinner control for longer label values.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.ManualEntryIgnoresRange">
            <summary>
            Gets or sets a value indicating whether manual entry can bypass the enforment of min/max values.
            </summary>
            <value><c>true</c> if manual entry can bypass the enforment of min/max values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.MaxValue">
            <summary>
            Gets or sets the maximum value.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.MinValue">
            <summary>
            Gets or sets the minimum value.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.ShrinkText">
            <summary>
            Gets or sets a value indicating whether the value text can be shrunk to fit the label size.
            </summary>
            <value><c>true</c> if the value text can be shrunk to fit the label size; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.StepSize">
            <summary>
            Gets or sets the size of each step (i.e. the amount added or subtracted each time the user activates a spinner button).
            </summary>
            <value>
            The size of each step (i.e. the amount added or subtracted each time the user activates a spinner button).
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertySpinnerAttribute.WrapText">
            <summary>
            Gets or sets a value indicating whether the value text can be wrapped to a second line.
            </summary>
            <value><c>true</c> if the value text can be wrapped to a second line; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyLabelAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being displayed as a label in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyLabelAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyLabelAttribute" /> class.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being displayed as a text input in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute" /> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute"/> class.
            </summary>
            <param name="supportsInputDialog">if set to <c>true</c> [supports input dialog].</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute.ExtraWidth">
            <summary>
            Gets or sets the extra width added to the text input control for longer values.
            </summary>
            <value>The extra width added to the text input control for longer values.</value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyTextInputAttribute.SupportsInputDialog">
            <summary>
            Gets a value indicating whether this text property supports the input dialog.
            </summary>
            <value>
              <c>true</c> if [supports input dialog]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute">
            <summary>
            An attribute used to flag a part modifier's field as being modifiable in the designer via a toggle button control.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute"/> class.
            If associated with a string field, values must be specified in the constructor.
            If associated with a boolean field, default 'False'/'True' values will be used.
            If other terminology is desired (such as 'Disabled'/'Enabled'), two string values can be specified (false value first, then true value).
            If associated with an enumeration, the string value of each enumeration option will be used as values.
            If other terminology is desired, a set of values may be specified as long as the number of values matches the number of enumeration values.
            The order of the values should correspond to the order of the values returned by Enum.GetNames([enumeration type]).
            </summary>
            <param name="values">The list of values to be cycled through each time the user activates the button.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute.Values">
            <summary>
            Gets or sets the list of possible values to be cycled through.
            </summary>
            <value>
            The list of possible values to be cycled through.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute.SilenceEnumCountMismatch">
            <summary>
            Gets or sets a value indicating whether an error is thrown for mismatched count between specified values and enumeration.
            </summary>
            <value>
              <c>true</c> if the error should be silenced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.DesignerPropertyToggleButtonAttribute.AllowFunkyInput">
            <summary>
            Gets or sets a value indicating whether to allow funky input when ctrl clicking.
            </summary>
            <value>
              <c>true</c> if [allow funky input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierDesignerHeaderAttribute">
            <summary>
            An attribute applied to part modifier classes used to specify the part modifier's header when viewed in the designer.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierDesignerHeaderAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierDesignerHeaderAttribute"/> class.
            </summary>
            <param name="headerText">The designer header text for the part modifier.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierDesignerHeaderAttribute.HeaderText">
            <summary>
            Gets the designer header text for the part modifier.
            </summary>
            <value>
            The designer header text for the part modifier.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierPropertyAttribute">
            <summary>
            An attribute used to configure part modifier properties.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierPropertyAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierPropertyAttribute"/> class.
            </summary>
            <param name="preserveState">A
            value indicating whether the state of the property should be preserved
            when saving an aircraft and then later restored when the aircraft is loaded.
            </param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.Attributes.PartModifierPropertyAttribute.PreserveState">
            <summary>
            Gets or sets a value indicating whether the state of the property should be preserved
            when saving an aircraft and then later restored when the aircraft is loaded.
            </summary>
            <value>
            <c>true</c> if the state of the property should be preserved when saving an aircraft
            and then later restored when the aircraft is loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.IInputController">
            <summary>
            An interface for an input controller modifier script placed on a part.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.IInputController.Active">
            <summary>
            Gets a value indicating whether the control associated with the input controller is currently active.
            </summary>
            <value>
              <c>true</c> if the control associated with the input controller is currently active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.IInputController.Value">
            <summary>
            Gets the current value of the control associated with the input controller.
            </summary>
            <value>
            The current value of the control associated with the input controller.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.JointType">
            <summary>
            Types of joints available.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.JointType.Fixed">
            <summary>
            The fixed joint, which cannot move.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.JointType.Hinge">
            <summary>
            The hinge joint which can rotate around one axis.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.Part">
            <summary>
            A class representing a mod part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.CombineMeshes">
            <summary>
            A value indicating whether the part's meshes can be combined with the meshes of neighboring parts.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.DamageDisconnect">
            <summary>
            A value indicating whether the part has a chance of disconnected when it sustains damage.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.DesignerInfo">
            <summary>
            The designer information for the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.DisconnectForce">
            <summary>
            The force required to destroy this part or break it off from the rest of the plane.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Health">
            <summary>
            The amount of health for the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Initialized">
            <summary>
            A value indicating whether the part has been initialized.
            (i.e. user has made the choice between a new part and cloning an existing part)
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Mass">
            <summary>
            The mass of the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Name">
            <summary>
            The name of the part used to uniquely identify it.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.PrimaryColorIndex">
            <summary>
            The color index of the default primary color.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.SharesRigidBody">
            <summary>
            A value indicating whether the part can share a rigid body with neighboring parts.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Trim1ColorIndex">
            <summary>
            The color index of the default trim 1 color.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Trim2ColorIndex">
            <summary>
            The color index of the default trim 2 color.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.Trim3ColorIndex">
            <summary>
            The color index of the default trim 3 color.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.Part.UnderwaterDragScalar">
            <summary>
            The underwater drag scalar value.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Part.GenerateDesignerPartXml(System.String,System.Func{UnityEngine.Object,System.String})">
            <summary>
            Generates the designer part XML.
            </summary>
            <param name="modName">The name of the mod in which the part resides.</param>
            <param name="lookupAssetPath">The function used to lookup the paths of assets.</param>
            <returns>The designer part XML.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Part.GeneratePartTypeXml(System.String,System.String)">
            <summary>
            Generates the part type XML.
            </summary>
            <param name="modName">The name of the mod in which the part resides.</param>
            <param name="prefabPath">The prefab path of the part or <c>null</c>.</param>
            <returns>The part type XML.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.Part.GetId(System.String)">
            <summary>
            Gets the identifier for the part.
            </summary>
            <param name="modName">The name of the mod in which the part is included.</param>
            <returns>The identifier for the part.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint">
            <summary>
            A component representing an attachment point for a part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.AdaptiveBlockHandling">
            <summary>
            Gets or sets the adaptive block handling.
            </summary>
            <value>
            The adaptive block handling.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.AllowAutoRotation">
            <summary>
            Gets or sets a value indicating whether the part can be auto rotated to line up with another attach point.
            </summary>
            <value>
              <c>true</c> if the part can be auto rotated to line up with another attach point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.Display">
            <summary>
            Gets or sets a value indicating whether to display this attach point in the designer.
            </summary>
            <value>
              <c>true</c> if this attach point should be displayed in the designer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.DisplayWhenDragged">
            <summary>
            Gets or sets a value indicating whether to display this attach point in the designer when the part is being dragged.
            </summary>
            <value>
              <c>true</c> if this attach point should be displayed in the designer when the part is being dragged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.FuselageConnection">
            <summary>
            Gets or sets a value that, if <c>true</c>, indicates that this attach point is only used to attach to other special fuselage attach points.
            </summary>
            <value>
              <c>true</c> if this attach point is only used to attach to other special fuselage attach points; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.IgnoreGrid">
            <summary>
            Gets or sets a value indicating whether this attach point should snap to another attach point on placement or if it
            should allow connection anywhere on another attach point. The VTOL nozzles use this flag so the user can have more
            control over exactly where they place the nozzle.
            </summary>
            <value>
              <c>true</c> if the grid should be ignored when parts are attached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.IgnoreSurface">
            <summary>
            Gets or sets a value that, if <c>true</c>, indicates that the attach point can attach to a surface collider attach point.
            </summary>
            <value>
              <c>true</c> if the attach point can attach to a surface collider attach point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.JointType">
            <summary>
            Gets or sets the type of the joint.
            </summary>
            <value>
            The type of the joint.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.SurfaceColliderName">
            <summary>
            Gets or sets the name of the game object containing the surface attach point collider.
            If this is a surface attach point, this should be set to the name of the game object containing the surface's collider. 
            Setting this will ignore all other information set on this attach point and it will be treated as a special 'surface' attach point.
            </summary>
            <value>
            The name of the game object containing the surface attach point collider.
            </value>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.WingAttach">
            <summary>
            Gets or sets a value indicating if the attach point can be attached to a wing.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.GenerateXml">
            <summary>
            Generates the XML for the attach point.
            </summary>
            <returns>The XML for the attach point.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartAttachPoint.GetVectorString(UnityEngine.Vector3)">
            <summary>
            Gets the string representation of the specified vector.
            </summary>
            <param name="v">The vector.</param>
            <returns>The vector string.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartCategories">
            <summary>
            The part categories.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.CockpitBasic">
            <summary>
            The cockpits category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Gizmos">
            <summary>
            The gizmos category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.CockpitInterior">
            <summary>
            The interiors category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.LandingGear">
            <summary>
            The landing gear category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Propulsion">
            <summary>
            The propulsion category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Structural">
            <summary>
            The structural category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Subassemblies">
            <summary>
            The subassemblies category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Weapons">
            <summary>
            The weapons category.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartCategories.Wings">
            <summary>
            The wings category.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartColliderConfiguration">
            <summary>
            A class representing configuration information for a part collider.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartColliderConfiguration.IsPrimaryCollider">
            <summary>
            A value indicating if the collider is the primary collider for the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartColliderConfiguration.DesignerConfiguration">
            <summary>
            The designer configuration information for the part collider.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration">
            <summary>
            A class representing designer configuration information for a part collider.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration.IncludeInAero">
            <summary>
            A value indicating whether or not this collider should be included as part of the drag model for the aircraft.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration.IncludeInIntersections">
            <summary>
            A value indicating whether or not this collider is ignored when determining if a part has collisions with another part in the designer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration.IncludeInMirror">
            <summary>
            A value indicating whether or not this collider should be considered when determining which side of the mirror line a part lies when mirroring an aircraft.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.PartColliderDesignerConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel">
            <summary>
            An enumeration defining the different levels of part damage.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel.None">
            <summary>
            No damage has been sustained.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel.Light">
            <summary>
            Light damage has been sustained.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel.Moderate">
            <summary>
            Moderate damage has been sustained.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel.Heavy">
            <summary>
            Heavy damage has been sustained.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel.Critical">
            <summary>
            Critical damage has been sustained.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo">
            <summary>
            A class containing designer information related to a part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.DisplayName">
            <summary>
            The display name of the part in the designer.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.Description">
            <summary>
            The description of the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.Category">
            <summary>
            The category to which the part belongs.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.CategoryIcon">
            <summary>
            The category icon.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.PartIcon">
            <summary>
            The designer icon for the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.Position">
            <summary>
            The default position of the part.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.Rotation">
            <summary>
            The default rotation of the part.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.GenerateXml(Jundroo.SimplePlanes.ModTools.Parts.Part,System.String,System.Func{UnityEngine.Object,System.String},System.Collections.Generic.List{System.Xml.Linq.XElement})">
            <summary>
            Generates the XML representing the part's designer information.
            </summary>
            <param name="part">The part for which the XML is being generated.</param>
            <param name="modName">The name of the mod containing the part.</param>
            <param name="lookupAssetPath">The function used to lookup asset paths.</param>
            <param name="modifierStates">The modifier state elements to include for this part.</param>
            <returns>The XML element describing the designer information for the part.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartDesignerInfo.GetVectorString(UnityEngine.Vector3)">
            <summary>
            Gets the string representation of the specified vector.
            </summary>
            <param name="v">The vector.</param>
            <returns>The vector string.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartMeshConfiguration">
            <summary>
            A component that contains part configuration information for a mesh render on the same object.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshConfiguration.ExcludeFromMeshCombine">
            <summary>
            A value indicating if this mesh should be excluding from the combining of neighboring meshes.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshConfiguration.Materials">
            <summary>
            The material configuration information.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartMeshConfiguration.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialType">
            <summary>
            An enumeration representing the different types of materials for part meshes.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialType.Default">
            <summary>
            The default material type.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialType.CustomWithOriginalColors">
            <summary>
            A custom material.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialType.CustomWithThemeColors">
            <summary>
            A custom material that makes use of modifiable theme colors.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialConfiguration">
            <summary>
            A class representing configuration information for a part mesh's material.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialConfiguration.Name">
            <summary>
            The name of this material item.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialConfiguration.SubmeshIndex">
            <summary>
            The index of the sub mesh represented by this instance.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartMeshMaterialConfiguration.MaterialType">
            <summary>
            The material type for this instance.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifier">
            <summary>
            The base class for all part modifiers.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifier._preserveMembersLookup">
            <summary>
            The cached lookup table of type keys to their associated list of member names
            for which the member values are to be preserved when saving and loading states.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifier._serializer">
            <summary>
            The serializer used for saving and restoring state.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.Mass">
            <summary>
            Gets the extra mass for the part due to the modifier.
            </summary>
            <value>
            The extra mass for the part due to the modifier.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.UsedInPropMode">
            <summary>
            Gets a value indicating whether this modifier is used in 'prop mode'.
            </summary>
            <value>
              <c>true</c> if this modifier is used in 'prop mode'; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.GenerateStateXml(System.String)">
            <summary>
            Generates the XElement to fully describe the state of this modifier for serialization purposes.
            </summary>
            <param name="stateElementName">The expected name of the state element should one be created.</param>
            <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.GetDesignerPropertySliderValueLabel(System.String,System.Single)">
            <summary>
            Gets the label text for the value of a designer property's slider.
            </summary>
            <param name="propertyName">The name of the property for which to get the value label.</param>
            <param name="sliderValue">The slider value for which to get the label.</param>
            <returns>The label text representing the current value of the slider.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.GetDesignerPropertySpinnerValueLabel(System.String,System.Single)">
            <summary>
            Gets the label text for the value of a designer property's spinner control.
            </summary>
            <param name="propertyName">The name of the property for which to get the value label.</param>
            <param name="spinnerValue">The spinner value for which to get the label.</param>
            <returns>The label text representing the current value of the spinner control.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.Initialize(UnityEngine.GameObject)">
            <summary>
            Called when this part modifiers is being initialized as the part game object is being created.
            </summary>
            <param name="partRootObject">The root game object that has been created for the part.</param>
            <returns>The created part modifier behaviour, or <c>null</c> if it was not created.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.OnDesignerPropertyChanged(System.String,System.String)">
            <summary>
            Called when a property is changed in the designer.
            </summary>
            <param name="propertyName">The name of the property that was changed.</param>
            <param name="value">The new property value.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.RestoreFromDefaultStateXml(System.Xml.Linq.XElement)">
            <summary>
            Restores from default state XML.
            </summary>
            <param name="stateElement">The state element from which to restore.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.RestoreFromState(System.Xml.Linq.XElement)">
            <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
            <param name="stateElement">The state element from which to restore.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.GenerateDefaultStateXml">
            <summary>
            Generates the default state XML.
            </summary>
            <returns>The default state XML.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifier.GetMembersToPreserve(System.Type)">
            <summary>
            Gets the list of member names to preserve when saving and loading states.
            </summary>
            <param name="type">The type for which to get the member name list.</param>
            <returns>The list of member names to preserve when saving and loading states.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour">
            <summary>
            The base class for all part modifier behaviors.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.InputController">
            <summary>
            Gets or sets the input controller associated with the part (if any).
            </summary>
            <value>
            The input controller associated with the part or <c>null</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.PartModifier">
            <summary>
            Gets or sets the part modifier.
            </summary>
            <value>
            The part modifier.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.Initialize(Jundroo.SimplePlanes.ModTools.Parts.PartModifier)">
            <summary>
            Initializes the part modifier behavior.
            </summary>
            <param name="partModifier">The part modifier associated with the behavior.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnCollision(UnityEngine.Collision,UnityEngine.ContactPoint)">
            <summary>
            Called when a collision occurs for the rigid body associated with this part.
            </summary>
            <param name="collision">The collision.</param>
            <param name="contactPoint">The contact point of the collision for this part.</param>
            <returns>
            A value indicating whether or not this part has handled the collision.
            If <c>true</c>, the default collision actions will not be taken by the body script.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnDamaged(System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when the part sustains damage.
            </summary>
            <param name="damage">The damage amount.</param>
            <param name="position">The position of the damage.</param>
            <param name="direction">The direction of the damage.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnDamageLevelIncreased(Jundroo.SimplePlanes.ModTools.Parts.PartDamageLevel,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Called when the damage level for the part has increased.
            If a single damage event occurs which causes the damage level to increase more than once,
            this will be called once for each damage level between the original and the new (including the new level).
            </summary>
            <param name="level">The new damage level.</param>
            <param name="lastDamage">The amount of the last damage.</param>
            <param name="lastDamagePosition">The position of the last damage.</param>
            <param name="lastDamageDirection">The direction of the last damage .</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnEnterWater">
            <summary>
            Called when the part has entered water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnExitWater">
            <summary>
            Called when the part has exited water.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierBehaviour.OnExplosiveForceApplied(System.Single,UnityEngine.Vector3)">
            <summary>
            Called when explosive force applied to the part.
            </summary>
            <param name="force">The amount of the force.</param>
            <param name="forceDirection">The direction of the force.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty">
            <summary>
            A class representing a single property of a part modifier reference.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.IsReadOnlyName">
            <summary>
            A value indicating if the property name is read only.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.Name">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.Tooltip">
            <summary>
            The tooltip for the property.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceProperty"/> class.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
            <param name="tooltip">The tooltip for the property.</param>
            <param name="isReadOnlyName">If set to <c>true</c>, the property name is read only.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceScript">
            <summary>
            A component used to reference a part modifier that already exists in the game.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceScript.IsReadOnlyId">
            <summary>
            A value indicating whether or not this component's id and property names are read only.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceScript.PartModifierId">
            <summary>
            The part modifier identifier.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceScript.Properties">
            <summary>
            The properties of the part modifier.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierReferenceScript.GenerateXml">
            <summary>
            Generates the XML for the part modifier reference.
            </summary>
            <returns>The part modifier reference XML.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript">
            <summary>
            A base class wrapper script that allows part modifiers to be attached to game objects.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript.GenerateXml(System.String)">
            <summary>
            Generates the XML for the part modifier.
            </summary>
            <param name="modName">The name of the mod.</param>
            <returns>The XML for the part modifier.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript.GetPartModifier">
            <summary>
            Gets the part modifier.
            </summary>
            <returns>The part modifier.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript`1">
            <summary>
            A base class wrapper script that allows part modifiers to be attached to game objects.
            </summary>
            <typeparam name="T">The type of the part modifier.</typeparam>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript`1.PartModifier">
            <summary>
            The part modifier.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript`1.GenerateXml(System.String)">
            <summary>
            Generates the XML for the part modifier.
            </summary>
            <param name="modName">The name of the mod.</param>
            <returns>
            The XML for the part modifier.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.Parts.PartModifierScript`1.GetPartModifier">
            <summary>
            Gets the part modifier.
            </summary>
            <returns>
            The part modifier.
            </returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Parts.PartPrefabLink">
            <summary>
            A component that links to an existing part prefab in the game.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Parts.PartPrefabLink.PrefabId">
            <summary>
            The prefab identifier.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PersistentObject">
            <summary>
            A component that is added to a game object that should live throughout the lifetime of the game.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy">
            <summary>
            A proxy class for the aircraft carriers in the game.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy._aircraftCarrierScriptType">
            <summary>
            The type of the aircraft carrier script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy._speed">
            <summary>
            The top speed of the ship.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy"/> class.
            </summary>
            <param name="prefabPath">The path of the prefab to load.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy">
            <summary>
            A proxy object that loads an anti-aircraft tank at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy._antiAircraftTankScriptType">
            <summary>
            The type of the anti aircraft tank script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy._initiallyHostile">
            <summary>
            A value of true indicates that the tank will start off hostile to the player.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.IsDead">
            <summary>
            Gets a value indicating whether this tank is dead.
            </summary>
            <value>
              <c>true</c> if this tank is dead; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.IsHostile">
            <summary>
            Gets or sets a value indicating whether this tank is hostile.
            </summary>
            <value>
            <c>true</c> if this tank is hostile; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.AntiAircraftTankProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.BridgeProxy">
            <summary>
            A proxy object that loads a destructible bridge object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.BridgeProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.BridgeProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.BridgeProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.BridgeProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy">
            <summary>
            A proxy object that loads a destroyer ship at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy._destroyerScriptType">
            <summary>
            The type of the destroyer script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy._speed">
            <summary>
            The top speed of the ship.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy">
            <summary>
            A proxy object that loads a WW2 destroyer ship at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy._destroyerScriptType">
            <summary>
            The type of the destroyer script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy._speed">
            <summary>
            The top speed of the ship.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.DestroyerWW2Proxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy">
            <summary>
            A proxy object that loads a missile defense base object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy._missileDefenseBaseScriptType">
            <summary>
            The type of the missile defense base script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy._initiallyHostile">
            <summary>
            A value of <c>true</c> indicates that the base will start off hostile to the player.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.IsHostile">
            <summary>
            Gets or sets a value indicating whether or not the base is hostile to the player.
            </summary>
            <value>
              <c>true</c> if the base is hostile to the player; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.Awake">
            <summary>
            Awake is called when the script instance is being loaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.MissileDefenseBaseProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy">
            <summary>
            A base class for a proxy object that loads a prefab at runtime.
            </summary>
            <seealso cref="T:UnityEngine.MonoBehaviour" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy._prefabPath">
            <summary>
            The path of the prefab to load.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy"/> class.
            </summary>
            <param name="prefabPath">The path of the prefab to load.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.RealObject">
            <summary>
            Gets or sets the real object that was instantiated from the prefab.
            </summary>
            <value>
            The real object that was instantiated from the prefab.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.AssemblyCSharp">
            <summary>
            Gets the default assembly for the game.
            </summary>
            <value>
            The default assembly for the game.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.Scripts">
            <summary>
            Gets or sets the components on the real instantiated object.
            </summary>
            <value>
            The components on the real instantiated object.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.GetType(System.String)">
            <summary>
            Gets the type with the specified name from the game's default assembly.
            </summary>
            <param name="typeName">The name of the type to get.</param>
            <returns>The type with the specified name from the game's default assembly</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.Awake">
            <summary>
            Awake is called when the script instance is being loaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.GetProperty(System.Type,System.String)">
            <summary>
            Gets the value of the specified property on the component of the specified type.
            </summary>
            <param name="type">The type of the component from which to retrieve the property.</param>
            <param name="name">The name of the property to get.</param>
            <returns>The value of the requested property or <c>null</c> if it could not be found.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.GetScript(System.Type)">
            <summary>
            Gets the script of the specified type that is attached to the instantiated object.
            </summary>
            <param name="type">The type of the script to get.</param>
            <returns>The script of the specified type that is attached to the instantiated object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.InvokeMethod(System.Type,System.String,System.Object[])">
            <summary>
            Invokes the specified method on the component of the requested type.
            </summary>
            <param name="type">The type of the component on which to invoke the method.</param>
            <param name="name">The name of the method to invoke.</param>
            <param name="parameters">The parameters for the invoked method.</param>
            <returns>The return value of the method.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.SetField(System.Type,System.String,System.Object)">
            <summary>
            Sets the specified field of the requested component type to the specified value.
            </summary>
            <param name="type">The type of the component containing the field to set.</param>
            <param name="name">The name of the field to set.</param>
            <param name="value">The new value of the field.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy.SetProperty(System.Type,System.String,System.Object)">
            <summary>
            Sets the value of the specified property on the component of the specified type.
            </summary>
            <param name="type">The type of the component for which to set the property.</param>
            <param name="name">The name of the property to set.</param>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy">
            <summary>
            A proxy object that loads a rotating laser defense turret object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._rotatingLaserDefenseScriptType">
            <summary>
            The type of the rotating laser defense script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._lockTimeAcquirePercentage">
            <summary>
            The percentage of the lock time that is spent 'acquiring the lock', during which the laser is not visible.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._maxLockAngle">
            <summary>
            The maximum angle from the target that the turret can be pointing and still acquire a lock.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._requiredLockTime">
            <summary>
            The lock time required before the laser destroys its target.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy._requiredRocketLockTime">
            <summary>
            The lock time required for rockets before the laser destroys its target.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingLaserDefenseProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy">
            <summary>
            A proxy object that loads a rotating missile launcher object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._rotatingMissileLauncherScriptType">
            <summary>
            The type of the rotating missile launcher script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._infiniteAmmo">
            <summary>
            A value indicating whether or not the missile launcher has infinite ammunition.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._lockAlertTime">
            <summary>
            The amount of time before firing the missile at which the target receives a missile lock warning.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._maxMissileLockAngle">
            <summary>
            The maximum missile lock angle (in degrees), beyond which the missiles cannot acquire a lock or fire.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._minRange">
            <summary>
            The minimum range of the missiles. Closer than this, missiles will not fire.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._missileAccuracy">
            <summary>
            The missile accuracy.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._missileFireDelay">
            <summary>
            The fire delay for the missiles.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._missileFireDelayRandomExtraTime">
            <summary>
            The maximum amount of random time to add to the missile fire delay when it is reset.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy._missileMaxSpeed">
            <summary>
            The maximum speed of missiles (in meters per second).
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingMissileLauncherProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy">
            <summary>
            A proxy object that loads a rotating weapon object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._horizontalRotationMax">
            <summary>
            The maximum horizontal rotation angle.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._horizontalRotationMin">
            <summary>
            The minimum horizontal rotation angle.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._horizontalRotationRate">
            <summary>
            The horizontal rotation rate (in degrees per second).
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._maxRange">
            <summary>
            The max range of the weapon.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._verticalRotationMax">
            <summary>
            The maximum vertical rotation angle.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._verticalRotationMin">
            <summary>
            The minimum vertical rotation angle.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._verticalRotationRate">
            <summary>
            The vertical rotation rate (in degrees per second).
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy._rotatingWeaponScriptType">
            <summary>
            The type of the rotating weapon script.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy"/> class.
            </summary>
            <param name="prefabPath">The path of the prefab to load.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.IsDisabled">
            <summary>
            Gets a value indicating whether the weapon is disabled.
            </summary>
            <value>
            <c>true</c> if the weapon is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.Disable">
            <summary>
            Disables the weapon.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.RotatingWeaponProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy">
            <summary>
            A base class for a proxy ship object.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._dynamicObjectScriptType">
            <summary>
            The type of the dynamic object script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._friendOrFoeScriptType">
            <summary>
            The type of the friend or foe script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._initializedStatics">
            <summary>
            A value indicating whether or not static values have been initialized.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._sinkableShipScriptType">
            <summary>
            The type of the sinkable ship script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._dynamicObjectId">
            <summary>
            The dynamic object identifier.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._targetName">
            <summary>
            The name of the target in the player's weapon system.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._initiallyHostile">
            <summary>
            A value of true indicates that the ship will start off hostile to the player.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._lockHostileState">
            <summary>
            A value indicating whether the friendly/hostile status of a ship can be changed.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy._allies">
            <summary>
            The allies of this ship.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy"/> class.
            </summary>
            <param name="prefabPath">The path of the prefab to load.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.IsCriticallyDamaged">
            <summary>
            Gets a value indicating whether this ship is critically damaged.
            </summary>
            <value>
            <c>true</c> if this ship is critically damaged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.IsHostile">
            <summary>
            Gets a value indicating whether this ship is hostile.
            </summary>
            <value>
            <c>true</c> if this ship is hostile; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.ChangeState(System.Boolean)">
            <summary>
            Changes the hostile state of the ship.
            If the ship has allies, their states will be updated as well.
            </summary>
            <param name="isHosile"><c>true</c> if the ship and allies should be hostile or <c>false</c> for friendly.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.Start">
            <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.InitializeStatics">
            <summary>
            Initializes the static data for this class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.ShipProxy.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if valid; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssTinyProxy">
            <summary>
            A proxy object that loads the USS Tiny at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy" />
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssTinyProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssTinyProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssTinyProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssBeastProxy">
            <summary>
            A proxy object that loads the USS Beast at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.AircraftCarrierProxy" />
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssBeastProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssBeastProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.UssBeastProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.WindsockProxy">
            <summary>
            A proxy object that loads a windsock object at runtime.
            </summary>
            <seealso cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.PrefabProxy" />
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.WindsockProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.PrefabProxies.WindsockProxy"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.WindsockProxy.Initialize">
            <summary>
            Initializes the proxy.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.PrefabProxies.WindsockProxy.OnDrawGizmos">
            <summary>
            Used to draw gizmos that are pickable and always drawn.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Project">
            <summary>
            A static class containing project level constants.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Project.ExecutableName">
            <summary>
            The executable name of the project (without the file extension).
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Project.Name">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Project._mainAssembly">
            <summary>
            The main assembly for the game.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Project.IsEditorModProject">
            <summary>
            Gets a value indicating whether the code is currently executing in the Unity editor of a mod project.
            </summary>
            <value>
            <c>true</c> if the code is currently executing in the Unity editor of a mod project; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.Project.MainAssembly">
            <summary>
            Gets the main assembly for the game.
            </summary>
            <value>
            The main assembly for the game.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Project.FileExtensions">
            <summary>
            The file extensions used by the project.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Project.FileExtensions.Craft">
            <summary>
            The craft file extension
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Project.FileExtensions.Mod">
            <summary>
            The file extension used for mods.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.Map">
            <summary>
            A component representing the root game object of a custom map.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Map.AllowSandbox">
            <summary>
            A value indicating whether or not this map is allowed in sandbox mode.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Map.DefaultStartLocation">
            <summary>
            The default start location for the player's aircraft.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Map.Description">
            <summary>
            The description of the map.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.Map.MapName">
            <summary>
            The name of the map.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase">
            <summary>
            A base class for proximity loaded objects from mods.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._proximityLoaderType">
            <summary>
            The proximity loader type.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._asynchronousLoadDistanceSquared">
            <summary>
            The pre-calculated squared value of the asynchronous load distance.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._objectName">
            <summary>
            The name of the saved game object to load.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._synchronousLoadDistanceSquared">
            <summary>
            The pre-calculated squared value of the synchronous load distance.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._syncLoadDistance">
            <summary>
            The maximum distance at which the object will be synchronously loaded if an asynchronous load is not already taking place.
            This cannot be changed after the object has been started.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._asyncLoadDistance">
            <summary>
            The maximum distance at which the object will start being asynchronously loaded.
            This cannot be changed after the object has been started.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._terrains">
            <summary>
            The terrains in this proximity loaded object.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._unloadDistance">
            <summary>
            The minimum distance at which the object will be unloaded.
            This cannot be changed after the object has been started.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase._unloadDistanceSquared">
            <summary>
            The pre-calculated squared value of the unload distance.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.AsynchronousLoadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is within, the object will be asynchronously loaded.
            </summary>
            <value>
            The squared distance which, if the player is within, the object will be asynchronously loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.IsEnabled">
            <summary>
            Gets a value indicating whether this instance is enabled.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.Name">
            <summary>
            Gets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.Position">
            <summary>
            Gets the position of the object when it is loaded.
            </summary>
            <value>
            The position of the object when it is loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.ResourceLoader">
            <summary>
            Gets the resource loader for the mod from which to load the object.
            </summary>
            <value>
            The resource loader for the mod from which to load the object.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.Rotation">
            <summary>
            Gets the rotation of the object when it is loaded.
            </summary>
            <value>
            The rotation of the object when it is loaded.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.SupportsAsynchronousLoading">
            <summary>
            Gets a value indicating whether this object supports asynchronous loading.
            </summary>
            <value>
            <c>true</c> if this object supports asynchronous loading; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.SynchronousLoadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is within, the object will be synchronously loaded if an asynchronous load is not already taking place.
            </summary>
            <value>
            The squared distance which, if the player is within, the object will be synchronously loaded if an asynchronous load is not already taking place.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.Terrains">
            <summary>
            Gets the terrains in this proximity loaded object.
            </summary>
            <value>
            The terrains in this proximity loaded object.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.UnloadDistanceSquared">
            <summary>
            Gets the squared distance which, if the player is at or beyond, the object will be unloaded.
            </summary>
            <value>
            The squared distance which, if the player is at or beyond, the object will be unloaded.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.LoadAsynchronously">
            <summary>
            Loads the object asynchronously.
            </summary>
            <returns>
            The asynchronous load request.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.LoadSynchronously">
            <summary>
            Loads the object synchronously.
            </summary>
            <returns>
            The loaded object.
            </returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.OnLoadCancelled">
            <summary>
            Called when the loading of an object is cancelled.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.OnObjectLoaded(UnityEngine.GameObject)">
            <summary>
            Called when the object has been loaded.
            </summary>
            <param name="obj">The object that was loaded.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.OnObjectLoading(System.Boolean)">
            <summary>
            Called when the object is loading.
            </summary>
            <param name="asynchronous">A value indicating whether or not the game object is being loaded asynchronously.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.OnObjectUnloaded">
            <summary>
            Called when the object has been unloaded.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.OnObjectUnloading(UnityEngine.GameObject)">
            <summary>
            Called right before the object is unloaded.
            </summary>
            <param name="obj">The object being unloaded.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.UnloadObject(UnityEngine.GameObject)">
            <summary>
            Unloads the object.
            </summary>
            <param name="obj">The object to unload.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.Start">
            <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ProximityLoadedModObjectBase.GetProximityLoader">
            <summary>
            Gets the proximity loader component.
            </summary>
            <returns>The proximity loader component.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.LocationType">
            <summary>
            An enumeration that describes a type of location.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.LocationType.Default">
            <summary>
            A value indicating a default location type.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.LocationType.Custom">
            <summary>
            A value indicating a custom location type.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.LocationType.Discoverable">
            <summary>
            A value indicating a discoverable location type.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation">
            <summary>
            A proxy type for a starting location.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation._LocationTypeType">
            <summary>
            The location type type.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation.#ctor(System.String,System.String,Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.LocationType,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation"/> class.
            </summary>
            <param name="name">The name of the location.</param>
            <param name="areaName">Name of the area in which the location resides.</param>
            <param name="type">The type of the location.</param>
            <param name="position">The position of the location.</param>
            <param name="rotation">The rotation of the location.</param>
            <param name="initialVelocity">The initial velocity of the location.</param>
            <param name="isRunwayTakeoff">A value indicating if this is a runway takeoff location.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript">
            <summary>
            A proxy object for a convoy provider script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript.__convoyPrefabs">
            <summary>
            The convoy prefabs private field.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript.AddComponent(UnityEngine.GameObject)">
            <summary>
            Adds the component.
            </summary>
            <param name="gameObject">The game object.</param>
            <returns>The proxy for the provider.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript.ConfigureConvoy(Jundroo.SimplePlanes.ModTools.AI.ConvoyVehicleType[])">
            <summary>
            Configures the convoy.
            </summary>
            <param name="vehicleTypes">The vehicle types.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript">
            <summary>
            A proxy type for a convoy script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.__convoyProvider">
            <summary>
            The convoy provider private field.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.__startingWaypoints">
            <summary>
            The staring waypoints private field.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript._initialize">
            <summary>
            The initialize method.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript._isHostile">
            <summary>
            The is hostile property.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript._waypoints">
            <summary>
            The waypoints property.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.IsHostile">
            <summary>
            Gets or sets a value indicating whether this convoy is hostile.
            </summary>
            <value>
            <c>true</c> if this convoy is hostile; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.Waypoints">
            <summary>
            Gets or sets the waypoints for the convoy.
            </summary>
            <value>
            The waypoints for the convoy.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.AddComponent(UnityEngine.GameObject)">
            <summary>
            Adds the component.
            </summary>
            <param name="gameObject">The game object.</param>
            <returns>The proxy object for the convoy script.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.Initialize(System.Collections.Generic.IEnumerable{UnityEngine.Transform},System.Boolean)">
            <summary>
            Initializes the convoy.
            </summary>
            <param name="waypoints">The waypoints for the convoy.</param>
            <param name="initiallyHostile">The initial hostility setting for the convoy.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.ConvoyScript.SetConvoyProvider(Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.BasicConvoyProviderScript)">
            <summary>
            Sets the convoy provider.
            </summary>
            <param name="convoyProvider">The convoy provider.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript">
            <summary>
            A proxy type for a simple ground vehicle script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript.__speed">
            <summary>
            The speed private field.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript.__targetVelocity">
            <summary>
            The target velocity private field.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript._isDestroyed">
            <summary>
            The is destroyed property.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript._isHostile">
            <summary>
            The is hostile property.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript._Speed">
            <summary>
            Gets or sets the speed private field.
            </summary>
            <value>
            The speed private field.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript._TargetVelocity">
            <summary>
            Gets or sets the target velocity private field.
            </summary>
            <value>
            The target velocity private field.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript.IsDestroyed">
            <summary>
            Gets or sets a value indicating whether or not the vehicle is destroyed.
            </summary>
            <value>
            A value indicating whether or not the vehicle is destroyed.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Levels.Enemies.SimpleGroundVehicleScript.IsHostile">
            <summary>
            Gets or sets a value indicating whether or not the vehicle is hostile.
            </summary>
            <value>
            A value indicating whether or not the vehicle is hostile.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript">
            <summary>
            A proxy type for an AI controlled aircraft script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript._aiAircraftScript">
            <summary>
            The AI aircraft script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript._setTarget">
            <summary>
            The set target method.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript._setTargetFunc">
            <summary>
            The set target method taking a function.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript.AiAircraftScript">
            <summary>
            Gets the AI aircraft script.
            </summary>
            <value>
            The AI aircraft script.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript.SetTarget(System.Func{UnityEngine.Vector3},System.Boolean)">
            <summary>
            Sets the target.
            </summary>
            <param name="positionFunc">The position function.</param>
            <param name="mainTarget"><c>true</c> if the target is the main target.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiControlledAircraftScript.SetTarget(UnityEngine.Vector3,System.Boolean)">
            <summary>
            Sets the target override.  Set to null to disable override.
            </summary>
            <param name="targetPositionFloatingOrigin">The target position in floating origin (current world) coordinates.</param>
            <param name="mainTarget"><c>true</c> if the target is the main target.</param>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript">
            <summary>
            A proxy type for an AI manager script.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript._instance">
            <summary>
            The instance property.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript._spawnSandboxAiFromXml">
            <summary>
            The method for spawning AI from XML.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript.Instance">
            <summary>
            Gets the instance of the AI manager.
            </summary>
            <value>
            The instance of the AI manager.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiManagerScript.SpawnSandboxAiFromXml(System.String,System.String,System.Boolean,System.Boolean,Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Game.Settings.StartingLocation,System.Nullable{Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiMode})">
            <summary>
            Spawns the specified AI aircraft for use in sandbox mode.
            </summary>
            <param name="aircraftId">The ID to use for the aircraft being spawned.</param>
            <param name="aircraftXml">The XML for the aircraft being spawned.</param>
            <param name="autoDespawn">If set to <c>true</c>, the aircraft will be set to automatically despawn under certain conditions.</param>
            <param name="forceSpawnEvenIfUnflyable">If set to <c>true</c> the spawning of the aircraft will be forced, even if it is flagged as unflyable.</param>
            <param name="location">The location at which to spawn the aircraft.</param>
            <param name="aiMode">The AI mode for the aircraft.</param>
            <returns>The AI controlled aircraft script for the aircraft that was spawned.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.AiMode">
            <summary>
            Enumeration defining AI mode types.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.ControlSystems.AiCsSandboxAirTraffic">
            <summary>
            A proxy type for AiCsSandboxAirTraffic.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.Assets.Scripts.Parts.Modifiers.AircraftAi.ControlSystems.AiCsSandboxAirTraffic.AiMode">
            <summary>
            A proxy type for the AiMode enumeration.
            </summary>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1">
            <summary>
            A proxy class that wraps an underlying SimplePlanes type and provides reflection based methods for interacting with that type.
            </summary>
            <typeparam name="T">The concrete type of the proxy class.</typeparam>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.AllBindings">
            <summary>
            A collection of common binding flags usable for most reflection methods.
            </summary>
        </member>
        <member name="F:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1._realType">
            <summary>
            The real type represented by this proxy type.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1"/> class.
            </summary>
            <param name="realObject">The real object being wrapped by this proxy.</param>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1"/> class.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1" /> class.
            </summary>
            <param name="constructorParameters">The constructor parameters.</param>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.RealType">
            <summary>
            Gets the real type represented by this proxy type.
            </summary>
            <value>
            The real type represented by this proxy type.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.RealObject">
            <summary>
            Gets or sets the real object being wrapped by this proxy.
            </summary>
            <value>
            The real object being wrapped by this proxy.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.GetEvent(System.String)">
            <summary>
            Gets the specified event.
            </summary>
            <param name="name">The name of the event to get.</param>
            <returns>The event info object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.GetField(System.String)">
            <summary>
            Gets the specified field.
            </summary>
            <param name="name">The name of the field to retrieve.</param>
            <returns>The field info object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.GetMethod(System.String)">
            <summary>
            Gets the specified method info.
            </summary>
            <param name="name">The name of the method to retrieve.</param>
            <returns>The requested method info object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.GetMethod(System.String,System.Type[])">
            <summary>
            Gets the specified method info.
            </summary>
            <param name="name">The name of the method to retrieve.</param>
            <param name="parameters">The parameters types for the method.</param>
            <returns>The requested method info object.</returns>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ProxyType`1.GetProperty(System.String)">
            <summary>
            Gets the specified property.
            </summary>
            <param name="name">The name of the property to retrieve.</param>
            <returns>The property info object.</returns>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ReflectionHelper">
            <summary>
            A helper class used for reflecting on various SimplePlanes related code.
            </summary>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.ReflectionTools.ReflectionHelper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Jundroo.SimplePlanes.ModTools.ReflectionTools.ReflectionHelper"/> class.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.ReflectionTools.ReflectionHelper.AssemblyCSharp">
            <summary>
            Gets the default assembly for the game.
            </summary>
            <value>
            The default assembly for the game.
            </value>
        </member>
        <member name="T:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider">
            <summary>
            A service provider for mods to interact with SimplePlanes.
            </summary>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.DevConsole">
            <summary>
            Gets the service for interacting with the dev console.
            </summary>
            <value>
            The service for interacting with the dev console.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.EnvironmentManager">
            <summary>
            Gets a service for interacting with the game world environment.
            </summary>
            <value>
            A service for interacting with the game world environment.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.GameCamera">
            <summary>
            Gets a service for interacting with the game camera
            </summary>
            <value>
            The service for interacting with the game camera
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.GameInputs">
            <summary>
            Gets a service for interacting with the game inputs.
            </summary>
            <value>
            A service for interacting with the game inputs.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.GameState">
            <summary>
            Gets a service for interacting with the current game state.
            </summary>
            <value>
            A service for interacting with the current game state.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.GameWorld">
            <summary>
            Gets a service for interacting with the game world.
            </summary>
            <value>
            A service for interacting with the game world.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.PlayerAircraft">
            <summary>
            Gets a service for interacting with the player's aircraft.
            </summary>
            <value>
            A service for interacting with the player's aircraft.
            </value>
        </member>
        <member name="P:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.UserInterface">
            <summary>
            Gets a service for interacting with the user interface.
            </summary>
            <value>
            A service for interacting with the user interface.
            </value>
        </member>
        <member name="M:Jundroo.SimplePlanes.ModTools.SimplePlanesModServiceProvider.RegisterMockServices">
            <summary>
            Registers the mock services (mainly for use in testing inside the Unity editor).
            </summary>
        </member>
        <member name="T:Assets.Game.Weapons.ITarget">
            <summary>
            An interface for an object representing the target of a weapon.
            </summary>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.AngularVelocity">
            <summary>
            Gets the angular velocity of the target.
            </summary>
            <value>
            The angular velocity of the target.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.IsDead">
            <summary>
            Gets a value indicating whether the target is dead.
            </summary>
            <value>
              <c>true</c> if the target is dead; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.IsLocked">
            <summary>
            Gets a value indicating whether this target is currently locked by the targeting system.
            </summary>
            <value>
              <c>true</c> if this target is currently locked by the targeting system; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.IsLost">
            <summary>
            Gets a value indicating whether the targeting system has lost a lock on this target.
            </summary>
            <value>
              <c>true</c> if the targeting system has lost a lock on this target; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.MaxVisibleRange">
            <summary>
            Gets the max range that this target will be visible in the targeting system. Zero indicates this
            target will always show up in the targeting system.
            </summary>
            <value>
            The max range this target is visible.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.Position">
            <summary>
            Gets the position of the target.
            </summary>
            <value>
            The position of the target.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.TargetType">
            <summary>
            Gets the type of the target.
            </summary>
            <value>
            The type of the target.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.ITarget.Velocity">
            <summary>
            Gets the velocity of the target.
            </summary>
            <value>
            The velocity of the target.
            </value>
        </member>
        <member name="M:Assets.Game.Weapons.ITarget.Alert(System.Boolean)">
            <summary>
            Alerts the target that it is being acquired and/or locked.
            </summary>
            <param name="locked">if set to <c>true</c> the the target is locked. Otherwise it is being acquired.</param>
        </member>
        <member name="T:Assets.Game.Weapons.IWeapon">
            <summary>
            An interface for weapon parts.
            </summary>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.CurrentAmmo">
            <summary>
            Gets the current ammo count for the weapon.
            </summary>
            <value>
            The current ammo count for the weapon.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.CustomName">
            <summary>
            Gets the custom name of the weapon set by the user.
            </summary>
            <value>
            The custom name.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.CurrentTarget">
            <summary>
            Gets or sets the current target for the weapon.
            </summary>
            <value>
            The current target for the weapon.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.Function">
            <summary>
            Gets the function of the weapon.
            </summary>
            <value>
            The function of the weapon.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.IsArmed">
            <summary>
            Gets a value indicating whether this weapon is armed.
            </summary>
            <value>
              <c>true</c> if this weapon is armed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.IsDestroyed">
            <summary>
            Gets a value indicating whether this weapon is destroyed.
            </summary>
            <value>
            <c>true</c> if this weapon is destroyed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.TargetingStyle">
            <summary>
            Gets the targeting style of the weapon.
            </summary>
            <value>
            The targeting style of the weapon.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.TotalAmmo">
            <summary>
            Gets the total ammo count for the weapon.
            </summary>
            <value>
            The total ammo count for the weapon.
            </value>
        </member>
        <member name="P:Assets.Game.Weapons.IWeapon.Type">
            <summary>
            Gets the type of the weapon.
            </summary>
            <value>
            The type of the weapon.
            </value>
        </member>
        <member name="M:Assets.Game.Weapons.IWeapon.Fire(Assets.Game.Weapons.ITarget)">
            <summary>
            Fires the weapon at the specified target.
            </summary>
            <param name="target">The target of the weapon.</param>
        </member>
        <member name="T:Assets.Game.Weapons.TargetingStyle">
            <summary>
            An enumeration defining the targeting style for a weapon.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetingStyle.None">
            <summary>
            An unguided weapon that uses no targeting system.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetingStyle.StandardLock">
            <summary>
            A targeting style that requires the pilot to acquire a standard lock to fire the weapon at a target.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetingStyle.ContinuousLock">
            <summary>
            A targeting style that requires the pilot maintain a continuous lock on a target for a weapon to track it.
            </summary>
        </member>
        <member name="T:Assets.Game.Weapons.TargetType">
            <summary>
            Available target types.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetType.Air">
            <summary>
            Target is an airplane.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetType.Ground">
            <summary>
            Target is a ground target.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.TargetType.Information">
            <summary>
            The information target type.
            </summary>
        </member>
        <member name="T:Assets.Game.Weapons.WeaponFunction">
            <summary>
            An enumeration defining the main functions for weapons.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponFunction.AirToAir">
            <summary>
            Weapons are primarily used for air to air attacks.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponFunction.AirToSurface">
            <summary>
            Weapons are primarily used for air to surface attacks.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponFunction.MultiRole">
            <summary>
            Weapons that are used equally for air to air and air to surface attacks.
            </summary>
        </member>
        <member name="T:Assets.Game.Weapons.WeaponType">
            <summary>
            An enumeration defining the different types of aircraft weapons.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.Bomb">
            <summary>
            A bomb type weapon.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.Gun">
            <summary>
            A gun type weapon.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.Missile">
            <summary>
            A missile type weapon.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.RocketPod">
            <summary>
            A rocket pod type weapon.
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.Rocket">
            <summary>
            A single rocket type weapon
            </summary>
        </member>
        <member name="F:Assets.Game.Weapons.WeaponType.Cannon">
            <summary>
            A cannon type weapon.
            </summary>
        </member>
    </members>
</doc>
